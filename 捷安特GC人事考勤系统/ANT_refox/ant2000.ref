***
*** main.fxp
***
*
*** 
*** ReFox X  #UK933629  MANRIQUE ORELLANA  MANSOFT SYSTEMS [VFP50]
***
ON ERROR DO HANDLE_ERR WITH LINENO(),SYS(16)
PUBLIC pub_extension
pub_extension = 0
PUBLIC pub_language
pub_language = openlanguage()
_SCREEN.hide
_SCREEN.icon = "icon\tct.ico"
IF pub_language
     _SCREEN.caption = "Ant2000 System"
ELSE
     _SCREEN.caption = "Ant2000 人事考勤系统"
ENDIF
_SCREEN.picture = "picture\sky.bmp"
DO createscreen
SET DOHISTORY OFF
SET ESCAPE OFF
SET OPTIMIZE ON
SET REFRESH TO 0, 0
SET STATUS BAR OFF
SET STATUS OFF
SET TALK OFF
SET VIEW OFF
SET SAFETY OFF
SET CENTURY ON
SET HOURS TO 24
SET CENTURY TO 20
SET MARK TO
SET DATE YMD
SET DELETED ON
SET EXCLUSIVE OFF
DO defconst
PUBLIC pub_rslink, pub_kqlink,  ;
       pub_gzlink, pub_ftlink,  ;
       pub_zglink, pub_bmlink,  ;
       pub_zgrefresh
PUBLIC pub_value, pub_cancel,  ;
       pub_lslink, pub_modifyflag,  ;
       pub_saveerr, pub_ver
PUBLIC pub_prnmode, pub_prntype,  ;
       pub_prnfname
PUBLIC gsxp, gsscreencaption,  ;
       odbc_ant2k2p
PUBLIC gscurrexedir,  ;
       gsoutfilekqardata
gsxp = 0
gsscreencaption = _SCREEN.caption
gscurrexedir = SYS(5) + SYS(2003)
gsoutfilekqardata = getantini("KQOUTPUTFILE",  ;
                    "ARDATA1")
PUBLIC pub_user, pub_pass,  ;
       pub_year, pub_month,  ;
       pub_role, pub_companycode,  ;
       pub_companyname, sys_wyear,  ;
       sys_wweek, sys_wday
pub_user = ""
pub_pass = ""
pub_year = YEAR(DATE())
pub_month = MONTH(DATE())
IF pub_month > 1
     pub_month = pub_month - 1
ELSE
     pub_month = 12
     pub_year = pub_year - 1
ENDIF
sys_wday = CTOD("2002/07/01")
sys_wweek = WEEK(sys_wday)
sys_wyear = YEAR(sys_wday)
PUBLIC obj_ant2000, obj_3ars,  ;
       obj_3agz, obj_3aft,  ;
       obj_3akq, obj_login,  ;
       obj_tools, obj_active3,  ;
       obj_form, obj_toolbar
obj_ant2000 = .NULL.
obj_3ars = .NULL.
obj_3agz = .NULL.
obj_3aft = .NULL.
obj_3akq = .NULL.
obj_login = .NULL.
obj_tools = .NULL.
obj_active3 = .NULL.
obj_form = .NULL.
obj_toolbar = .NULL.
PUBLIC pub_object(6), pub_banben
FOR i = 1 TO 6
     pub_object(i) = "OBJ_FORM" +  ;
               STR(i, 1)
ENDFOR
pub_banben = "网络版"
DECLARE INTEGER URLinkWWW IN  ;
        URL.dll
DECLARE INTEGER URLinkMail IN  ;
        URL.dll
DECLARE INTEGER PrintOrgChart IN  ;
        AntFunction.dll STRING @
DECLARE INTEGER XLS2DBF IN  ;
        AntFunction.dll STRING @,  ;
        STRING @, STRING @,  ;
        STRING @
DECLARE STRING GetModules IN  ;
        Databases.dll
DECLARE INTEGER OpenExcel IN  ;
        ImportFromExcel.dll  ;
        STRING
DECLARE CloseExcel IN  ;
        ImportFromExcel.dll
DECLARE GotoCell IN  ;
        ImportFromExcel.dll  ;
        STRING, INTEGER
DECLARE STRING GetCellValue IN  ;
        ImportFromExcel.dll
DECLARE STRING GetCellValue2 IN  ;
        ImportFromExcel.dll  ;
        STRING
DECLARE STRING GetCellComment IN  ;
        ImportFromExcel.dll
DECLARE STRING GetCellComment2 IN  ;
        ImportFromExcel.dll  ;
        STRING
DECLARE INTEGER Find IN  ;
        ImportFromExcel.dll  ;
        STRING, STRING
DECLARE INTEGER FindNext IN  ;
        ImportFromExcel.dll
DECLARE NextRow IN  ;
        ImportFromExcel.dll
DECLARE INTEGER GetDataRowCount  ;
        IN ImportFromExcel.dll
_SCREEN.show
IF  .NOT. FILE("ANT2000.DLL")
     IF pub_language
          = MESSAGEBOX( ;
            "ANT2000.DLL not exists!",  ;
            64,  ;
            "Ant2000 System")
     ELSE
          = MESSAGEBOX( ;
            "文件：ANT2000.DLL 不存在！",  ;
            64,  ;
            "ANT2000人事考勤系统")
     ENDIF
     RELEASE ALL
     QUIT
     RETURN
ELSE
     DECLARE INTEGER CheckHDSN IN  ;
             ANT2000.DLL
ENDIF
IF pub_banben <> "演示版"
ENDIF
PUBLIC odbc_ant2000, pub_database,  ;
       pub_subsys_language,  ;
       pub_company,  ;
       pub_serverpath
PUBLIC pub_ifrel, puc_ifmove,  ;
       pub_left1, pub_left2,  ;
       pub_top1, pub_top2,  ;
       pub_level, pub_ifformerr,  ;
       pub_ifbackup,  ;
       pub_totalpages
PUBLIC obj_form1, obj_form2,  ;
       obj_form3, obj_form4,  ;
       obj_form5, obj_form6
STORE .NULL. TO obj_form1,  ;
      obj_form2, obj_form3,  ;
      obj_form4, obj_form5,  ;
      obj_form6
PUBLIC pub_qx_kq, pub_qx_rs,  ;
       pub_qx_gz, pub_qx_ft,  ;
       pub_qx_module
PUBLIC pub_2win_left,  ;
       pub_2win_top
pub_2win_left = _SCREEN.img_3ars.left
pub_2win_top = _SCREEN.img_3ars.top
mdb = getantini("LOGIN",  ;
      "DATABASE")
lsserial = getantini("LOGIN",  ;
           "SERIAL1")
serial1 = strdecrypt2(lsserial)
IF mdb <> LEFT(serial1,  ;
   LEN(serial1) - 8)
     DO WHILE .T.
     ENDDO
     RETURN
ENDIF
lsdate1 = RIGHT(serial1, 8)
lsdate2 = LEFT(lsdate1, 4) + "/" +  ;
          SUBSTR(lsdate1, 5, 2) +  ;
          "/" + RIGHT(lsdate1,  ;
          2)
IF CTOD(lsdate2) = CTOD("")
     DO WHILE .T.
     ENDDO
     RETURN
ENDIF
IF CTOD(lsdate2) < DATE()
     DO WHILE .T.
     ENDDO
     RETURN
ENDIF
SQLSETPROP(0, "DispLogin", 3)
lsgcdinnerolserver = getantini("SQLSERVERSET",  ;
                     "SERVER")
lsgcdinneroldbname = getantini("SQLSERVERSET",  ;
                     "DATABASE")
lsgcdinneroluser = strdecrypt2(getantini("SQLSERVERSET",  ;
                   "USE"))
lsgcdinnerolpasswd = strdecrypt2(getantini("SQLSERVERSET",  ;
                     "PASS"))
IF  .NOT.  ;
    EMPTY(lsgcdinnerolserver)
     odbc_ant2000 = SQLSTRINGCONNECT( ;
                    "Driver=SQL Server;Server=" +  ;
                    lsgcdinnerolserver +  ;
                    ";UID=" +  ;
                    lsgcdinneroluser +  ;
                    ";PWD=" +  ;
                    lsgcdinnerolpasswd +  ;
                    ";Database=" +  ;
                    lsgcdinneroldbname)
ELSE
     IF EMPTY(mdb)
          odbc_ant2000 = SQLCONNECT("ant2000",  ;
                         "ant",  ;
                         "tct1810")
     ELSE
          odbc_ant2000 = SQLCONNECT(mdb,  ;
                         "ant",  ;
                         "tct1810")
     ENDIF
     IF odbc_ant2000 < 0
          SQLSETPROP(0,  ;
                    "DispLogin",  ;
                    1)
          IF EMPTY(mdb)
               odbc_ant2000 = SQLCONNECT("ant2000",  ;
                              "ant",  ;
                              "tct1810")
          ELSE
               odbc_ant2000 = SQLCONNECT(mdb,  ;
                              "ant",  ;
                              "tct1810")
          ENDIF
     ENDIF
ENDIF
IF odbc_ant2000 < 0
     IF pub_language
          = MESSAGEBOX( ;
            "Database Connecting Error!",  ;
            64,  ;
            "Ant2000 System")
     ELSE
          = MESSAGEBOX("数据库连接错误！",  ;
            64,  ;
            "ANT2000人事考勤系统")
     ENDIF
     DO sysexit
ENDIF
IF SQLEXEC(odbc_ant2000,  ;
   "SELECT * FROM SYS_INI WHERE SEC='SERVER' AND VAR='DATABASE'",  ;
   "TEMP") = -1
     IF pub_language
          = MESSAGEBOX( ;
            "Database  Error!",  ;
            64,  ;
            "Ant2000 System")
     ELSE
          = MESSAGEBOX("数据库连接出现意外错误！",  ;
            64,  ;
            "ANT2000人事考勤系统")
     ENDIF
     DO sysexit
ENDIF
SELECT temp
USE
pub_ifrel = 0
pub_ifmove = 0
pub_ifbackup = 0
pub_level = 0
pub_database = UPPER(getantenv("SERVER",  ;
               "DATABASE"))
pub_company = getantenv("INFORMATION",  ;
              "CUSTOMER")
pub_serverpath = getantenv("SERVER",  ;
                 "ANT2000")
IF pub_banben <> "演示版"
     DO updateversion
     mv = getantenv("SYSPARA",  ;
          "VERSION")
     IF  .NOT. EMPTY(mv)
          nv = LEFT(mv, 2)
          DO CASE
               CASE nv = "M1"
                    pub_banben = "网络版 Ver" +  ;
                                 SUBSTR(mv,  ;
                                 4,  ;
                                 6)
               CASE nv = "S1"
                    pub_banben = "单机版 Ver" +  ;
                                 SUBSTR(mv,  ;
                                 4,  ;
                                 6)
               CASE nv = "PW"
                    pub_banben = "增强版 " +  ;
                                 TRIM(mv)
               OTHERWISE
                    pub_banben = "演示版"
          ENDCASE
     ENDIF
ENDIF
IF pub_banben = "演示版"
     _SCREEN.lab_demo.visible = .T.
     DO chkdate
ENDIF
DO FORM login NAME obj_form1
READ EVENTS
ENDPROC
**
*** 
*** ReFox - retrace your steps ... 
***
***
*** getantenv.fxp
***
*
**
FUNCTION GetAntEnv
PARAMETER section, variable
sret = ""
ssection = ALLTRIM(UPPER(section))
svariable = ALLTRIM(UPPER(variable))
marea = LTRIM(STR(SELECT()))
IF sqlexe_run(00000000014,  ;
   SYS(16),  ;
   "select * from sys_ini where SEC=?ssection and VAR=?sVariable",  ;
   "sys") = 1
     SELECT sys
     IF  .NOT. EOF()
          DO CASE
               CASE typ = 'N'
                    sret = VAL(sys.val)
               CASE typ = 'D'
                    sret = CTOD(sys.val)
               OTHERWISE
                    sret = TRIM(sys.val)
          ENDCASE
     ENDIF
     USE
ELSE
     = MESSAGEBOX("GetAntEnv函数Error！",  ;
       64, "考勤分析系统")
ENDIF
select &marea					
RETURN sret
ENDFUNC
**
***
*** sysexit.fxp
***
*
IF odbc_ant2000 = -1
     QUIT
     RETURN
ENDIF
syslog(1, "LOGOUT", "")
SAVE TO client ALL LIKE Sys*
_SCREEN.show
IF odbc_ant2000 <> -1
     = SQLDISCONNECT(odbc_ant2000)
ENDIF
odbc_ant2000 = -1
IF pub_language
     = closelanguage()
ENDIF
obj_ant2000 = .NULL.
obj_3ars = .NULL.
obj_3agz = .NULL.
obj_3aft = .NULL.
obj_3akq = .NULL.
obj_login = .NULL.
obj_tools = .NULL.
obj_active3 = .NULL.
obj_form = .NULL.
obj_toolbar = .NULL.
ERASE *.idx
ERASE *.cdx
mdbf = SYS(2000, "*.dbf")
DO WHILE  .NOT. EMPTY(mdbf)
     IF mdbf <> "FOXUSER.DBF"  ;
        .AND. LEFT(mdbf, 4) <>  ;
        "LOC_"
          erase &mdbf
     ENDIF
     mdbf = SYS(2000, "*.dbf", 1)
ENDDO
IF pub_banben <> "演示版"
     RELEASE ALL
     QUIT
ELSE
     RELEASE ALL
     CANCEL
ENDIF
ENDPROC
**
***
*** checkdate.fxp
***
*
PARAMETER checkdate_datestr
checkdate_str = ALLTRIM(checkdate_datestr)
IF ISNULL(checkdate_datestr) .OR.  ;
   CTOD(checkdate_datestr) <>  ;
   CTOD("") .OR.  ;
   EMPTY(checkdate_str) .OR.  ;
   checkdate_str = '//' .OR.  ;
   checkdate_str = "/ /" .OR.  ;
   checkdate_str = "/  /"
     mret = .T.
ELSE
     IF pub_language
          = MESSAGEBOX(getlanguage("s_ShiJianShuRuCuoWu"),  ;
            64,  ;
            "ANT2000 SYSTEM")
     ELSE
          = MESSAGEBOX("非法的日期输入，请确认。",  ;
            64,  ;
            "ANT2000 SYSTEM")
     ENDIF
     mret = .F.
ENDIF
RETURN mret
ENDFUNC
**
***
*** syspass.fxp
***
*
**
FUNCTION SYSPASS
PARAMETER pass_str, mod
mstr = ' '
i = 1
j = LEN(pass_str)
IF mod
     DO WHILE i<=j
          zf = CHR(MOD(ASC(SUBSTR(pass_str,  ;
               i, 1)) + j * 33,  ;
               100)) +  ;
               CHR(INT((ASC(SUBSTR(pass_str,  ;
               i, 1)) + j * 33) /  ;
               100))
          mstr = mstr + zf
          i = i + 1
     ENDDO
ELSE
     DO WHILE i<=j
          mchr = ASC(SUBSTR(pass_str,  ;
                 i + 1, 1)) * 100 +  ;
                 ASC(SUBSTR(pass_str,  ;
                 i, 1)) - j / 2 *  ;
                 33
          IF mchr < 0 .OR. mchr >  ;
             255
               mstr = ' '
               EXIT
          ENDIF
          zf = CHR(mchr)
          mstr = mstr + zf
          i = i + 2
     ENDDO
ENDIF
RETURN LTRIM(mstr)
ENDFUNC
**
***
*** getqx.fxp
***
*
**
FUNCTION GETQX
PARAMETER subsys, mode
marea = ALLTRIM(STR(SELECT()))
mret = "error"
DO CASE
     CASE subsys = "RS"
          DO CASE
               CASE mode = "BM"
                    = sqlexe_run(00000000023,  ;
                      SYS(16),  ;
                      "select * from  rs_qx_bm",  ;
                      "temp")
                    SELECT temp
                    SET FILTER TO name;
= pub_user
                    mret = ""
                    mall = .T.
                    SCAN
                         IF qx >  ;
                            0
                              IF EMPTY(mret)
                                   mret = "(@='" + ALLTRIM(bmbh) + "'"
                              ELSE
                                   mret = mret + " or @='" + ALLTRIM(bmbh) + "'"
                              ENDIF
                         ELSE
                              mall =  ;
                               .F.
                         ENDIF
                    ENDSCAN
                    IF mall
                         mret = "1=1"
                    ELSE
                         IF EMPTY(mret)
                              mret =  ;
                               "1=2"
                         ELSE
                              mret =  ;
                               mret +  ;
                               ")"
                         ENDIF
                    ENDIF
               CASE mode = "GYXZ"
                    = sqlexe_run(00000000053,  ;
                      SYS(16),  ;
                      "select * from  rs_qx_gyxz",  ;
                      "temp")
                    SELECT temp
                    SET FILTER TO name;
= pub_user
                    mret = ""
                    mall = .T.
                    SCAN
                         IF qx >  ;
                            0
                              IF EMPTY(mret)
                                   mret = "(@=" + ALLTRIM(STR(code))
                              ELSE
                                   mret = mret + " or @=" + ALLTRIM(STR(code))
                              ENDIF
                         ELSE
                              mall =  ;
                               .F.
                         ENDIF
                    ENDSCAN
                    IF mall
                         mret = "1=1"
                    ELSE
                         IF EMPTY(mret)
                              mret =  ;
                               "1=2"
                         ELSE
                              mret =  ;
                               mret +  ;
                               ")"
                         ENDIF
                    ENDIF
               OTHERWISE
                    = sqlexe_run(00000000083,  ;
                      SYS(16),  ;
                      "select * from rs_qx_hm",  ;
                      "temp")
                    SELECT temp
                    SET FILTER TO hmbh;
= mode
                    mret = "true"
                    IF  .NOT.  ;
                        EOF()
                         LOCATE FOR  ;
                                name =  ;
                                pub_user  ;
                                .AND.  ;
                                qx >  ;
                                0
                         IF EOF()
                              mret =  ;
                               "false"
                         ELSE
                              mret =  ;
                               mret +  ;
                               ALLTRIM(STR(qx))
                         ENDIF
                    ELSE
                         mret = "false"
                    ENDIF
          ENDCASE
     CASE subsys = "KQ"
          DO CASE
               CASE mode = "BM"
                    = sqlexe_run(00000000104,  ;
                      SYS(16),  ;
                      "select * from  kq_qx_bm",  ;
                      "temp")
                    SELECT temp
                    SET FILTER TO name;
= pub_user
                    mret = ""
                    mall = .T.
                    SCAN
                         IF qx >  ;
                            0
                              IF EMPTY(mret)
                                   mret = "(@='" + ALLTRIM(bmbh) + "'"
                              ELSE
                                   mret = mret + " or @='" + ALLTRIM(bmbh) + "'"
                              ENDIF
                         ELSE
                              mall =  ;
                               .F.
                         ENDIF
                    ENDSCAN
                    IF mall
                         mret = "1=1"
                    ELSE
                         IF EMPTY(mret)
                              mret =  ;
                               "1=2"
                         ELSE
                              mret =  ;
                               mret +  ;
                               ")"
                         ENDIF
                    ENDIF
               OTHERWISE
                    = sqlexe_run((00000000133),  ;
                      SYS(16),  ;
                      "select * from kq_qx_hm",  ;
                      "temp")
                    SELECT temp
                    SET FILTER TO hmbh;
= mode
                    mret = "true"
                    IF  .NOT.  ;
                        EOF()
                         LOCATE FOR  ;
                                name =  ;
                                pub_user  ;
                                .AND.  ;
                                qx >  ;
                                0
                         IF EOF()
                              mret =  ;
                               "false"
                         ELSE
                              mret =  ;
                               mret +  ;
                               ALLTRIM(STR(qx))
                         ENDIF
                    ELSE
                         mret = "false"
                    ENDIF
          ENDCASE
     CASE subsys = "GZ"
          DO CASE
               CASE mode = "XZDM"
                    = sqlexe_run((00000000154),  ;
                      SYS(16),  ;
                      "select * from  gz_qx_xzxm",  ;
                      "temp")
                    SELECT temp
                    SET FILTER TO name;
= pub_user
                    mret = ""
                    mall = .T.
                    SCAN
                         IF qx >  ;
                            0
                              IF EMPTY(mret)
                                   mret = "(@=" + ALLTRIM(STR(xuhao))
                              ELSE
                                   mret = mret + " or @=" + ALLTRIM(STR(xuhao))
                              ENDIF
                         ELSE
                              mall =  ;
                               .F.
                         ENDIF
                    ENDSCAN
                    IF mall
                         mret = "1=1"
                    ELSE
                         IF EMPTY(mret)
                              mret =  ;
                               "1=2"
                         ELSE
                              mret =  ;
                               mret +  ;
                               ")"
                         ENDIF
                    ENDIF
               CASE mode = "BM"
                    = sqlexe_run((00000000184),  ;
                      SYS(16),  ;
                      "select * from  gz_qx_bm",  ;
                      "temp")
                    SELECT temp
                    SET FILTER TO name;
= pub_user
                    mret = ""
                    mall = .T.
                    SCAN
                         IF qx >  ;
                            0
                              IF EMPTY(mret)
                                   mret = "(@='" + ALLTRIM(bmbh) + "'"
                              ELSE
                                   mret = mret + " or @='" + ALLTRIM(bmbh) + "'"
                              ENDIF
                         ELSE
                              mall =  ;
                               .F.
                         ENDIF
                    ENDSCAN
                    IF mall
                         mret = "1=1"
                    ELSE
                         IF EMPTY(mret)
                              mret =  ;
                               "1=2"
                         ELSE
                              mret =  ;
                               mret +  ;
                               ")"
                         ENDIF
                    ENDIF
               CASE mode = "YGLB"
                    = sqlexe_run((00000000214),  ;
                      SYS(16),  ;
                      "select * from  gz_qx_yglb",  ;
                      "temp")
                    SELECT temp
                    SET FILTER TO name;
= pub_user
                    mret = ""
                    mall = .T.
                    SCAN
                         IF qx >  ;
                            0
                              IF EMPTY(mret)
                                   mret = "(@='" + ALLTRIM(lbbh) + "'"
                              ELSE
                                   mret = mret + " or @='" + ALLTRIM(lbbh) + "'"
                              ENDIF
                         ELSE
                              mall =  ;
                               .F.
                         ENDIF
                    ENDSCAN
                    IF mall
                         mret = "1=1"
                    ELSE
                         IF EMPTY(mret)
                              mret =  ;
                               "1=2"
                         ELSE
                              mret =  ;
                               mret +  ;
                               ")"
                         ENDIF
                    ENDIF
               OTHERWISE
                    = sqlexe_run((00000000244),  ;
                      SYS(16),  ;
                      "select * from gz_qx_hm",  ;
                      "temp")
                    SELECT temp
                    SET FILTER TO hmbh;
= mode
                    mret = "true"
                    IF  .NOT.  ;
                        EOF()
                         LOCATE FOR  ;
                                name =  ;
                                pub_user  ;
                                .AND.  ;
                                qx >  ;
                                0
                         IF EOF()
                              mret =  ;
                               "false"
                         ELSE
                              mret =  ;
                               mret +  ;
                               ALLTRIM(STR(qx))
                         ENDIF
                    ELSE
                         mret = "false"
                    ENDIF
          ENDCASE
     CASE subsys = "FT"
          = sqlexe_run(00000000263,  ;
            SYS(16),  ;
            "select * from FT_qx_hm",  ;
            "temp")
          SELECT temp
          SET FILTER TO hmbh = mode
          mret = "true"
          IF  .NOT. EOF()
               LOCATE FOR name =  ;
                      pub_user  ;
                      .AND. qx >  ;
                      0
               IF EOF()
                    mret = "false"
               ELSE
                    mret = mret +  ;
                           ALLTRIM(STR(qx))
               ENDIF
          ELSE
               mret = "false"
          ENDIF
     CASE subsys = "TL"
          = sqlexe_run(00000000281,  ;
            SYS(16),  ;
            "select * from tl_qx_hm",  ;
            "temp")
          SELECT temp
          SET FILTER TO hmbh = mode
          mret = "true"
          IF  .NOT. EOF()
               LOCATE FOR name =  ;
                      pub_user  ;
                      .AND. qx >  ;
                      0
               IF EOF()
                    mret = "false"
               ELSE
                    mret = mret +  ;
                           ALLTRIM(STR(qx))
               ENDIF
          ELSE
               mret = "false"
          ENDIF
ENDCASE
IF mret = "error"
     = MESSAGEBOX("权限调用参数错误",  ;
       64,  ;
       "ANT2000人事考勤系统")
     mret = "false"
ENDIF
USE
select &marea
RETURN mret
ENDFUNC
**
***
*** getkqqj.fxp
***
*
gkq_yy = YEAR(DATE())
gkq_mm = MONTH(DATE())
IF gkq_mm > 1
     gkq_mm = gkq_mm - 1
ELSE
     gkq_mm = 12
     gkq_yy = gkq_yy - 1
ENDIF
gkq_dd = sjdate2
mdate = CTOD(STR(gkq_yy, 4) + '.' +  ;
        STR(gkq_mm, 2) + '.' +  ;
        STR(gkq_dd, 2))
i = 1
DO WHILE CTOD("")=mdate .AND. i<5
     gkq_dd = gkq_dd - 1
     mdate = CTOD(STR(gkq_yy, 4) +  ;
             '.' + STR(gkq_mm, 2) +  ;
             '.' + STR(gkq_dd,  ;
             2))
     i = i + 1
ENDDO
IF i >= 5
     mdate = CTOD("")
ENDIF
pub_kqjieshu = mdate
IF DATE() - pub_kqjieshu > sjdays
     gkq_yy = YEAR(DATE())
     gkq_mm = MONTH(DATE())
     gkq_dd = sjdate2
     mdate = CTOD(STR(gkq_yy, 4) +  ;
             '.' + STR(gkq_mm, 2) +  ;
             '.' + STR(gkq_dd,  ;
             2))
     i = 1
     DO WHILE CTOD("")=mdate  ;
        .AND. i<5
          gkq_dd = gkq_dd - 1
          mdate = CTOD(STR(gkq_yy,  ;
                  4) + '.' +  ;
                  STR(gkq_mm, 2) +  ;
                  '.' +  ;
                  STR(gkq_dd,  ;
                  2))
          i = i + 1
     ENDDO
     IF i >= 5
          mdate = CTOD("")
     ENDIF
     pub_kqjieshu = mdate
ENDIF
IF DATE() - pub_kqjieshu > sjdays
     gkq_yy = YEAR(pub_kqjieshu)
     gkq_mm = MONTH(pub_kqjieshu)
     IF gkq_mm < 12
          gkq_mm = gkq_mm + 1
     ELSE
          gkq_mm = 1
          gkq_yy = gkq_yy + 1
     ENDIF
     gkq_dd = sjdate2
     mdate = CTOD(STR(gkq_yy, 4) +  ;
             '.' + STR(gkq_mm, 2) +  ;
             '.' + STR(gkq_dd,  ;
             2))
     i = 1
     DO WHILE CTOD("")=mdate  ;
        .AND. i<5
          gkq_dd = gkq_dd - 1
          mdate = CTOD(STR(gkq_yy,  ;
                  4) + '.' +  ;
                  STR(gkq_mm, 2) +  ;
                  '.' +  ;
                  STR(gkq_dd,  ;
                  2))
          i = i + 1
     ENDDO
     IF i >= 5
          mdate = CTOD("")
     ENDIF
     pub_kqjieshu = mdate
ENDIF
gkq_dd = sjdate1
IF ABS(sjdate2 - sjdate1) >= 30
     mdate = CTOD(STR(gkq_yy, 4) +  ;
             '.' + STR(gkq_mm, 2) +  ;
             '.' + STR(gkq_dd,  ;
             2))
ELSE
     IF gkq_mm = 1
          mdate = CTOD(STR(gkq_yy -  ;
                  1, 4) + '.' +  ;
                  STR(12, 2) +  ;
                  '.' +  ;
                  STR(gkq_dd,  ;
                  2))
     ELSE
          mdate = CTOD(STR(gkq_yy,  ;
                  4) + '.' +  ;
                  STR(gkq_mm - 1,  ;
                  2) + '.' +  ;
                  STR(gkq_dd,  ;
                  2))
     ENDIF
ENDIF
i = 1
DO WHILE CTOD("")=mdate .AND. i<5
     gkq_dd = gkq_dd - 1
     mdate = CTOD(STR(gkq_yy, 4) +  ;
             '.' + STR(gkq_mm, 2) +  ;
             '.' + STR(gkq_dd,  ;
             2))
     i = i + 1
ENDDO
IF i >= 5
     mdate = CTOD("")
ENDIF
pub_kqkaishi = mdate
IF DATE() < pub_kqjieshu
     pub_kqjieshu = DATE()
ENDIF
ENDPROC
**
***
*** handle_err.fxp
***
*
**
FUNCTION Handle_err
PARAMETER errline, programname
DIMENSION aerrorarray(7)
cntrol = AERROR(aerrorarray)
IF cntrol <= 0
     RETURN 0
ELSE
     errno = aerrorarray(1)
     errtext = aerrorarray(2)
     errtext = errtext + CHR(13) +  ;
               CHR(13) +  ;
               "程序名:  " +  ;
               programname +  ;
               CHR(13) +  ;
               "错误行:  " +  ;
               ALLTRIM(STR(errline))
ENDIF
DO CASE
     CASE errno = 1
          MESSAGEBOX(errtext, 048,  ;
                    "严重错误")
          RETURN 2
     CASE errno = 9
          MESSAGEBOX(errtext, 048,  ;
                    "系统错误")
          RETURN 2
     CASE errno = 11
          MESSAGEBOX(errtext, 048,  ;
                    "系统错误")
          DO sysexit
     CASE errno = 12
          MESSAGEBOX(errtext, 048,  ;
                    "系统错误")
          DO sysexit
     CASE errno = 13
          MESSAGEBOX(errtext, 048,  ;
                    "系统错误")
          DO sysexit
     CASE errno = 107
          MESSAGEBOX(errtext, 048,  ;
                    "系统错误")
          DO sysexit
     CASE errno = 109
          MESSAGEBOX(errtext, 048,  ;
                    "系统错误")
          DO sysexit
     CASE errno = 1113
          MESSAGEBOX(errtext, 048,  ;
                    "系统错误")
          DO sysexit
     CASE errno = 1466
          MESSAGEBOX(errtext +  ;
                    CHR(13) +  ;
                    CHR(13) +  ;
                    "请检查ODBC数据源的名称和设置!",  ;
                    048,  ;
                    "系统错误")
          DO sysexit
     CASE errno = 1523
          MESSAGEBOX(errtext, 048,  ;
                    "系统错误")
          DO sysexit
     CASE errno = 1712
          MESSAGEBOX(errtext, 048,  ;
                    "语法错误")
          DO resetsys
          RETURN TO MASTER 
     CASE errno = 1734
          MESSAGEBOX(errtext, 048,  ;
                    "系统错误")
          DO sysexit
     CASE errno = 1742
          MESSAGEBOX(errtext, 048,  ;
                    "系统错误")
          DO sysexit
     CASE errno = 1925
          MESSAGEBOX(errtext, 048,  ;
                    "系统错误")
          DO sysexit
     CASE errno = 2005
          MESSAGEBOX(errtext, 048,  ;
                    "系统错误")
          DO sysexit
     CASE errno = 1427
          MESSAGEBOX(errtext, 016,  ;
                    "OLE错误")
          DO sysexit
     CASE errno = 1428
          MESSAGEBOX(errtext, 016,  ;
                    "OLE错误")
          DO sysexit
     CASE errno = 1429
          MESSAGEBOX(errtext, 016,  ;
                    "OLE错误")
          DO sysexit
     CASE errno = 1526
          errno = aerrorarray(5)
          errtext = aerrorarray(3)
          errtext = errtext +  ;
                    CHR(13) +  ;
                    CHR(13) +  ;
                    "程序名:  " +  ;
                    programname +  ;
                    CHR(13) +  ;
                    "错误行:  " +  ;
                    ALLTRIM(STR(errline))
          DO CASE
               CASE errno = 0
                    MESSAGEBOX(errtext,  ;
                              048,  ;
                              "系统错误")
                    DO sysexit
               CASE errno = -1302
                    errtext = errtext +  ;
                              CHR(13) +  ;
                              CHR(13) +  ;
                              "是否重试?"
                    result = MESSAGEBOX(errtext,  ;
                             050,  ;
                             "警告")
                    IF result = 4
                         RETURN 1
                    ELSE
                         IF result =  ;
                            3
                              RETURN  ;
                               2
                         ELSE
                              RETURN  ;
                               3
                         ENDIF
                    ENDIF
               CASE errno = -1303
                    errtext = errtext +  ;
                              CHR(13) +  ;
                              "其他用户正在使用!"
                    MESSAGEBOX(errtext,  ;
                              048,  ;
                              "警告")
                    RETURN 3
               CASE errno = -1605
                    RETURN 3
               CASE errno = -1305
                    MESSAGEBOX(errtext,  ;
                              048,  ;
                              "系统错误")
                    DO sysexit
               CASE errno = -3030
                    MESSAGEBOX(errtext,  ;
                              048,  ;
                              "系统错误")
                    DO sysexit
               CASE errno = -3100
                    MESSAGEBOX(errtext,  ;
                              048,  ;
                              "系统错误")
                    DO sysexit
               CASE errno = -3502
                    MESSAGEBOX(errtext,  ;
                              048,  ;
                              "系统错误")
                    DO sysexit
               CASE errno = -3503
                    MESSAGEBOX(errtext,  ;
                              048,  ;
                              "系统错误")
                    DO sysexit
               CASE errno = -3817
                    MESSAGEBOX(errtext,  ;
                              048,  ;
                              "严重错误")
                    RETURN 2
               OTHERWISE
                    errtext = STR(errno) +  ;
                              CHR(13) +  ;
                              errtext
                    MESSAGEBOX(errtext,  ;
                              048,  ;
                              "系统错误")
                    DO sysexit
          ENDCASE
     OTHERWISE
          errtext = STR(errno) +  ;
                    CHR(13) +  ;
                    errtext
          MESSAGEBOX(errtext, 048,  ;
                    "系统错误")
          DO sysexit
ENDCASE
ENDFUNC
**
***
*** openlanguage.fxp
***
*
**
FUNCTION OpenLanguage
PUBLIC languagefilepointer,  ;
       syslanguage, sysxianshisj,  ;
       sysbaohanxr
syslanguage = ""
sysxianshisj = 1
sysbaohanxr = 1
IF  .NOT. FILE("client.mem")
     RETURN .F.
ENDIF
RESTORE FROM client ADDITIVE
IF syslanguage <> "eng" .AND.  ;
   syslanguage <> "bg5"
     RETURN .F.
ENDIF
IF  .NOT.  ;
    FILE("language\ant2000." +  ;
    syslanguage)
     RETURN .F.
ENDIF
languagefilepointer = FOPEN("language\ant2000." +  ;
                      syslanguage,  ;
                      0)
IF languagefilepointer < 0
     RETURN .F.
ENDIF
RETURN .T.
ENDFUNC
**
***
*** getlanguage.fxp
***
*
**
FUNCTION GetLanguage
PARAMETER variable
SET EXACT ON
sret = ""
svariable = ALLTRIM(UPPER(variable))
IF languagefilepointer > 0
     FSEEK(languagefilepointer, 0,  ;
          0)
     DO WHILE  .NOT.  ;
        FEOF(languagefilepointer)
          sbuf = LTRIM(FGETS(languagefilepointer))
          sstr = UPPER(sbuf)
          l = AT("=", sstr)
          IF l < 2 .OR. svariable <>  ;
             ALLTRIM(SUBSTR(sstr,  ;
             1, l - 1))
               LOOP
          ENDIF
          sret = ALLTRIM(SUBSTR(sbuf,  ;
                 l + 1, 1024))
          EXIT
     ENDDO
ENDIF
SET EXACT ON
RETURN sret
ENDFUNC
**
***
*** closelanguage.fxp
***
*
**
PROCEDURE CloseLanguage
IF TYPE("LanguageFilePointer") =  ;
   "L"
     RETURN
ENDIF
IF languagefilepointer > 0
     FCLOSE(languagefilepointer)
ENDIF
RELEASE languagefilepointer
RETURN
ENDPROC
**
***
*** setantenv.fxp
***
*
**
FUNCTION SetAntEnv
PARAMETER section, variable,  ;
          value
sret = -1
ssection = ALLTRIM(UPPER(section))
svariable = ALLTRIM(UPPER(variable))
marea = LTRIM(STR(SELECT()))
IF sqlexe_run(00000000015,  ;
   SYS(16),  ;
   "select * from sys_ini where SEC=?sSection and VAR=?sVariable",  ;
   "sys") = 1
     DO CASE
          CASE typ = 'N'
               svalue = LTRIM(STR(value,  ;
                        8, 2))
          CASE typ = 'D'
               svalue = DTOC(value)
          OTHERWISE
               svalue = ALLTRIM(value)
               IF LEN(svalue) = 0
                    svalue = " "
               ENDIF
     ENDCASE
     IF  .NOT. EOF()
          sret = sqlexe_run(00000000029,  ;
                 SYS(16),  ;
                 "update sys_ini set VAL=?sValue where SEC=?sSection and VAR=?sVariable",  ;
                 "sys")
     ELSE
          sret = sqlexe_run(00000000031,  ;
                 SYS(16),  ;
                 "insert into sys_ini (SEC,VAR,VAL) values (?sSection,?sVariable,?sValue)",  ;
                 "sys")
     ENDIF
ELSE
     = MESSAGEBOX("SetAntEnv函数Error！",  ;
       64, "考勤分析系统")
ENDIF
select &marea					
RETURN sret
ENDFUNC
**
***
*** 3akq031.fxp
***
*
DO prginit
DO WHILE  .NOT. pub_escape .AND.   ;
   .NOT. EOF()
     obj_form4.txt_msg1.value = zgbh +  ;
                                ' ' +  ;
                                DTOC(mdate)
     IF EMPTY(mzgbh)
          SKIP
          mzgbh = zgbh
          mdate = CTOD(riqi) - 1
          recptr = RECNO()
          LOOP
     ENDIF
     m = getbctab()
     DO CASE
          CASE m = 0
               DO skipnext
               LOOP
          CASE m = -1
               = MESSAGEBOX( ;
                 "个人可上班次定义太多 " +  ;
                 TRIM(mzgbh), 064,  ;
                 "考勤分析系统")
               RELEASE sktabbou,  ;
                       sktabsel,  ;
                       sktabcnt,  ;
                       bctabbou,  ;
                       bctabsel,  ;
                       bctabcnt,  ;
                       addedflagtab
               RELEASE sktab,  ;
                       bctabbh,  ;
                       bctabsb,  ;
                       bctabxb,  ;
                       bctabss,  ;
                       bctablb,  ;
                       bctabcl,  ;
                       pub_12h,  ;
                       pub_bctabsel,  ;
                       pub_flag1,  ;
                       pub_flag2,  ;
                       pub_delta1,  ;
                       pub_delta2
               RELEASE delta2,  ;
                       delta3,  ;
                       delta4,  ;
                       delta8,  ;
                       delta9,  ;
                       delta9max,  ;
                       mzgbh,  ;
                       mdate
               RELEASE clbc, dsb,  ;
                       dxb, dlb,  ;
                       dxx, dss,  ;
                       dmark,  ;
                       wtsb1,  ;
                       wtxb1,  ;
                       wtsb2,  ;
                       wtxb2
               RELEASE mdate5
               RELEASE gs_entry,  ;
                       gs_recno
               RELEASE i_jbdelta,  ;
                       i_jbdelta1,  ;
                       i_qjdelta
               RELEASE itwo,  ;
                       ithree,  ;
                       imode
               RELEASE idengji,  ;
                       idengji1,  ;
                       pub_menjin
               RELEASE pub_lastdate,  ;
                       pub_lastbc,  ;
                       modisk_1440_sb,  ;
                       modisk_1440_xb
               RELEASE pub_jbss,  ;
                       pub_jblb,  ;
                       pub_jbks,  ;
                       pub_jbjs,  ;
                       pub_jbbc,  ;
                       pub_jbbcks,  ;
                       pub_jbbcjs,  ;
                       pub_jbbcss,  ;
                       pub_jbqj_no
               RELEASE pub_qjss,  ;
                       pub_qjlb,  ;
                       pub_qjks,  ;
                       pub_qjjs,  ;
                       pub_qjbc,  ;
                       pub_qjbcks,  ;
                       pub_qjbcjs,  ;
                       pub_qjbcss
               RELEASE pub_cqss,  ;
                       pub_cqks,  ;
                       pub_cqjs,  ;
                       pub_cqbc,  ;
                       pub_cqbcks,  ;
                       pub_cqbcjs,  ;
                       pub_cqbcss
               SET ESCAPE OFF
               RETURN
     ENDCASE
     IF mdate > pub_jieshuriqi
          DO skipnext
          LOOP
     ENDIF
     IF pub_menjin = "YES"
          DO 3AKQ0311
     ENDIF
     IF mdate < CTOD(riqi)
          SELECT xjjl_d
          SET EXACT OFF
          SEEK mzgbh +  ;
               DTOC(mdate) 
          SET EXACT ON
          IF  .NOT. EOF() .AND.  ;
              kqlb >= 93 .AND.  ;
              kqlb <= 94 .AND.  ;
              kssj > 0
               SELECT ardata_
               APPEND BLANK
               REPLACE zgbh WITH  ;
                       xjjl_d.zgbh,  ;
                       riqi WITH  ;
                       xjjl_d.riqi,  ;
                       shijian  ;
                       WITH  ;
                       xjjl_d.kssj
               recptr = RECNO()
               IF xjjl_d.jssj > 0
                    APPEND BLANK
                    REPLACE zgbh  ;
                            WITH  ;
                            xjjl_d.zgbh,  ;
                            shijian  ;
                            WITH  ;
                            xjjl_d.jssj
                    IF xjjl_d.jssj >=  ;
                       xjjl_d.kssj
                         REPLACE riqi  ;
                                 WITH  ;
                                 xjjl_d.riqi
                    ELSE
                         REPLACE riqi  ;
                                 WITH  ;
                                 DTOC(CTOD(xjjl_d.riqi) +  ;
                                 1)
                    ENDIF
               ENDIF
               GOTO recptr
          ENDIF
     ENDIF
     DO getjbqj
     DO getsktab
     DO skproc
     DO setmark
ENDDO
DO prgterm
RETURN
ENDPROC
**
PROCEDURE PrgInit
IF pub_language
     obj_form4.txt_msg.value = "Be loading the datas,please wait a minute..."
ELSE
     obj_form4.txt_msg.value = "正在加载考勤关联资料，请等待..."
ENDIF
PUBLIC sktabbou, sktabsel,  ;
       sktabcnt, bctabbou,  ;
       bctabsel, bctabcnt,  ;
       pub_12h, pub_bctabsel,  ;
       pub_flag1, pub_flag2,  ;
       pub_delta1, pub_delta2
PUBLIC itwo, ithree, imode
PUBLIC idengji, idengji1
sktabbou = 10
bctabbou = 30
PUBLIC sktab(sktabbou),  ;
       bztab(sktabbou),  ;
       bctabbh(bctabbou),  ;
       addedflagtab(bctabbou)
PUBLIC bctabsb(bctabbou),  ;
       bctabxb(bctabbou),  ;
       bctabss(bctabbou),  ;
       bctablb(bctabbou),  ;
       bctabcl(bctabbou)
PUBLIC delta0, delta2, delta3,  ;
       delta4, delta8, delta9,  ;
       delta9max, wtsb1, wtxb1,  ;
       wtsb2, wtxb2, mzgbh, mdate,  ;
       recptr, tabptr, mdate1
PUBLIC clbc(bctabbou),  ;
       dsb(bctabbou),  ;
       dxb(bctabbou),  ;
       dlb(bctabbou),  ;
       dxx(bctabbou),  ;
       dss(bctabbou),  ;
       dmark(bctabbou)
PUBLIC mdate5
PUBLIC gs_entry, gs_recno
PUBLIC i_jbdelta, i_jbdelta1,  ;
       i_qjdelta, pub_menjin
PUBLIC pub_lastdate, pub_lastbc,  ;
       modisk_1440_sb,  ;
       modisk_1440_xb
PUBLIC pub_jbss(3, 3), pub_jblb(3,  ;
       3), pub_jbks(3, 3),  ;
       pub_jbjs(3, 3), pub_jbbc(3,  ;
       3), pub_jbbcks(3, 3),  ;
       pub_jbbcjs(3, 3),  ;
       pub_jbbcss(3, 3)
PUBLIC pub_qjss(3, 3), pub_qjlb(3,  ;
       3), pub_qjks(3, 3),  ;
       pub_qjjs(3, 3), pub_qjbc(3,  ;
       3), pub_qjbcks(3, 3),  ;
       pub_qjbcjs(3, 3),  ;
       pub_qjbcss(3, 3)
PUBLIC pub_cqss(3, 3), pub_cqks(3,  ;
       3), pub_cqjs(3, 3),  ;
       pub_cqbc(3, 3),  ;
       pub_cqbcks(3, 3),  ;
       pub_cqbcjs(3, 3),  ;
       pub_cqbcss(3, 3)
PUBLIC pub_jbqj_no
pub_lastdate = CTOD("")
pub_lastbc = ""
i_qjdelta = 60
gs_entry = 0
gs_recno = 0
mdate5 = CTOD("")
mdate = CTOD("")
pub_escape = .F.
mquan = 0
delta0 = getantenv("FXPARA",  ;
         "DELTA0")
delta2 = getantenv("FXPARA",  ;
         "DELTA2")
delta3 = getantenv("FXPARA",  ;
         "DELTA3")
delta4 = getantenv("FXPARA",  ;
         "DELTA4")
wtsb1 = getantenv("FXPARA",  ;
        "WTSB1")
wtxb1 = getantenv("FXPARA",  ;
        "WTXB1")
wtsb2 = getantenv("FXPARA",  ;
        "WTSB2")
wtxb2 = getantenv("FXPARA",  ;
        "WTXB2")
delta8 = 360
delta9 = 0.3 
delta9max = 120
pub_menjin = getantenv("FXPARA",  ;
             "MENJIN")
strsql = "SELECT * from kq_ZG WHERE " +  ;
         STRTRAN(str_bmbh, "@",  ;
         "BMBH") +  ;
         STRTRAN(pub_zgbh_filter,  ;
         "@", "kq_zg")
sqlexe_run((00000000153), SYS(16),  ;
          strsql, "zg")
SELECT zg
INDEX ON zgbh TO zg
sqlexe_run((00000000157), SYS(16),  ;
          "select * from kq_BcType where lb<>' '",  ;
          "BcType")
SELECT bctype
INDEX ON lb TAG lb
sqlexe_run((00000000161), SYS(16),  ;
          "select * from kq_time",  ;
          "time")
SELECT time
INDEX ON bc TO time
sqlexe_run((00000000165), SYS(16),  ;
          "select * from kq_time where bc<>' '",  ;
          "bctmp")
SELECT bctmp
INDEX ON bc TO bctmp
ndate = DTOC(pub_kaishiriqi)
kdate = DTOC(pub_jieshuriqi)
strsql = "select distinct kq_xjjl_d.ID,kq_xjjl_d.ZGBH,kq_xjjl_d.RIQI,kq_xjjl_d.KQLB,kq_xjjl_d.BC,kq_xjjl_d.SS,kq_xjjl_d.TS,kq_xjjl_d.JBATTR,kq_xjjl_d.KSSJ,kq_xjjl_d.JSSJ"
strsql = strsql +  ;
         ",0 as mark from kq_xjjl_d,kq_zg where kq_xjjl_d.RIQI>=?ndate and kq_xjjl_d.RIQI<=?kdate"
strsql = strsql +  ;
         " and kq_xjjl_d.zgbh=kq_zg.zgbh and " +  ;
         STRTRAN(str_bmbh, "@",  ;
         "kq_zg.BMBH")
strsql = strsql +  ;
         STRTRAN(pub_zgbh_filter,  ;
         "@", "kq_xjjl_d")
sqlexe_run((00000000177), SYS(16),  ;
          strsql, "xjjl_d")
SELECT xjjl_d
INDEX ON zgbh + riqi TO XJJL_D
DO preprocess
SET ESCAPE ON
ON ESCAPE DO P_ESC		
IF pub_language
     obj_form4.txt_msg.value = "Be processing the time records,please wait a minute..."
ELSE
     obj_form4.txt_msg.value = "正在处理考勤刷卡数据，请等待..."
ENDIF
RETURN
ENDPROC
**
PROCEDURE PrgTerm
IF  .NOT. pub_escape
     obj_form4.txt_msg1.value = ""
     IF pub_language
          obj_form4.txt_msg.value =  ;
           "It is ready for analysis,please wait a minute..."
     ELSE
          obj_form4.txt_msg.value =  ;
           "正在进行分析准备工作，请等待..."
     ENDIF
     DO savecl1
     DO savecl2
     SELECT ardata_
     COPY TO ardata
     USE ardata ALIAS ardata IN 0
     SELECT ardata
     INDEX ON zgbh + riqi +  ;
           STR(shijian, 4) TO  ;
           ARDATA
     SCAN
          IF EMPTY(donedate)  ;
             .AND. CTOD(riqi) <  ;
             pub_jieshuriqi
               REPLACE donedate  ;
                       WITH riqi
          ENDIF
     ENDSCAN
ENDIF
RELEASE sktabbou, sktabsel,  ;
        sktabcnt, bctabbou,  ;
        bctabsel, bctabcnt,  ;
        addedflagtab
RELEASE sktab, bctabbh, bctabsb,  ;
        bctabxb, bctabss, bctablb,  ;
        bctabcl, pub_12h,  ;
        pub_bctabsel, pub_flag1,  ;
        pub_flag2, pub_delta1,  ;
        pub_delta2
RELEASE delta2, delta3, delta4,  ;
        delta8, delta9, delta9max,  ;
        mzgbh, mdate
RELEASE clbc, dsb, dxb, dlb, dxx,  ;
        dss, dmark, wtsb1, wtxb1,  ;
        wtsb2, wtxb2
RELEASE mdate5
RELEASE gs_entry, gs_recno
RELEASE i_jbdelta, i_jbdelta1,  ;
        i_qjdelta
RELEASE itwo, ithree, imode
RELEASE idengji, idengji1,  ;
        pub_menjin
RELEASE pub_lastdate, pub_lastbc,  ;
        modisk_1440_sb,  ;
        modisk_1440_xb
RELEASE pub_jbss, pub_jblb,  ;
        pub_jbks, pub_jbjs,  ;
        pub_jbbc, pub_jbbcks,  ;
        pub_jbbcjs, pub_jbbcss,  ;
        pub_jbqj_no
RELEASE pub_qjss, pub_qjlb,  ;
        pub_qjks, pub_qjjs,  ;
        pub_qjbc, pub_qjbcks,  ;
        pub_qjbcjs, pub_qjbcss
RELEASE pub_cqss, pub_cqks,  ;
        pub_cqjs, pub_cqbc,  ;
        pub_cqbcks, pub_cqbcjs,  ;
        pub_cqbcss
SELECT ardata_
USE
SET ESCAPE OFF
SET EXACT OFF
RETURN
ENDPROC
**
FUNCTION GetBcTab
bctabcnt = 0
v_ksbc = ALLTRIM(zg.ksbc)
mbc = LEFT(v_ksbc, IIF(AT(",",  ;
      v_ksbc) = 0, 3, AT(",",  ;
      v_ksbc) - 1))
v_ksbc = RIGHT(v_ksbc,  ;
         LEN(v_ksbc) - LEN(mbc) -  ;
         1)
SELECT time
DO WHILE  .NOT. EMPTY(mbc)
     SEEK mbc 
     DO WHILE  .NOT. EOF() .AND.  ;
        bc=mbc
          bctabcnt = bctabcnt + 1
          IF bctabcnt > bctabbou
               RETURN -1
          ENDIF
          bctabbh(bctabcnt) = bc
          bctabsb(bctabcnt) =  ;
                 sbsj
          IF xbsj <= sbsj
               bctabxb(bctabcnt) =  ;
                      xbsj +  ;
                      1440
          ELSE
               bctabxb(bctabcnt) =  ;
                      xbsj
          ENDIF
          bctabss(bctabcnt) = ss
          bctablb(bctabcnt) = lb
          SKIP
     ENDDO
     mbc = LEFT(v_ksbc, IIF(AT( ;
           ",", v_ksbc) = 0, 3,  ;
           AT(",", v_ksbc) - 1))
     v_ksbc = RIGHT(v_ksbc,  ;
              LEN(v_ksbc) -  ;
              LEN(mbc) - 1)
ENDDO
SELECT ardata_
RETURN bctabcnt
ENDFUNC
**
PROCEDURE GetSkTab
PRIVATE mzg
SELECT ardata_
GOTO recptr
SKIP -1
mzg = zgbh
mdate5 = CTOD(riqi)
GOTO recptr
IF gs_recno = RECNO()
     gs_entry = gs_entry + 1
ELSE
     gs_recno = RECNO()
     gs_entry = 0
ENDIF
itwo = 0
ithree = 0
sktabcnt = 0
tabptr = 1
rp = 0
DO WHILE sktabcnt<sktabbou .AND.   ;
   .NOT. EOF() .AND. mzgbh=zgbh  ;
   .AND. mdate=CTOD(riqi)
     sktabcnt = sktabcnt + 1
     DO CASE
          CASE mdate = CTOD(riqi) +  ;
               1
               sktab(sktabcnt) =  ;
                    shijian -  ;
                    1440
          CASE mdate = CTOD(riqi)
               sktab(sktabcnt) =  ;
                    shijian
     ENDCASE
     bztab(sktabcnt) = 9
     addedflagtab(sktabcnt) =  ;
                 addedflag
     SKIP
ENDDO
DO WHILE sktabcnt<sktabbou .AND.   ;
   .NOT. EOF() .AND. mzgbh=zgbh  ;
   .AND. mdate=CTOD(riqi)-1
     sktabcnt = sktabcnt + 1
     IF itwo = 0 .AND. shijian >  ;
        delta0
          itwo = sktabcnt
     ENDIF
     sktab(sktabcnt) = shijian +  ;
          1440
     bztab(sktabcnt) = 9
     addedflagtab(sktabcnt) =  ;
                 addedflag
     SKIP
ENDDO
DO WHILE sktabcnt<sktabbou .AND.   ;
   .NOT. EOF() .AND. mzgbh=zgbh  ;
   .AND. mdate=CTOD(riqi)-2
     sktabcnt = sktabcnt + 1
     IF ithree = 0 .AND. shijian >  ;
        delta0
          sktab(sktabcnt) =  ;
               shijian + 2880
          bztab(sktabcnt) = 9
          addedflagtab(sktabcnt) =  ;
                      addedflag
          ithree = sktabcnt
          EXIT
     ELSE
          IF itwo = 0 .AND.  ;
             shijian <= delta0
               itwo = sktabcnt
          ENDIF
     ENDIF
     sktab(sktabcnt) = shijian +  ;
          2880
     bztab(sktabcnt) = 9
     addedflagtab(sktabcnt) =  ;
                 addedflag
     SKIP
ENDDO
IF rp <> 0
     IF EOF()
          GOTO BOTTOM
     ENDIF
     rp1 = RECNO()
     GOTO rp
     SKIP
     recptr = RECNO()
     GOTO rp1
ENDIF
RETURN
ENDPROC
**
PROCEDURE SkProc
FOR i = 1 TO sktabbou
     bctabcl(i) = .F.
ENDFOR
mloop = .T.
pub_lastbc = ""
pub_lastdate = CTOD("")
mresults = ""
FOR skscan = 1 TO 10
     IF  .NOT. mloop
          FOR i = 1 TO sktabcnt
               FOR p = i TO  ;
                   sktabcnt
                    IF bztab(p) <>  ;
                       9 .OR.  ;
                       sktab(p) >=  ;
                       1440 +  ;
                       delta0
                         EXIT
                    ENDIF
               ENDFOR
               IF p > i + 1 .AND.  ;
                  p <= sktabcnt
                    FOR q = i TO  ;
                        p - 1
                         bztab(q) =  ;
                              3
                    ENDFOR
                    i = p
               ENDIF
               IF bztab(i) = 9
                    bztab(i) = 3
                    IF sktab(i) <  ;
                       1440 +  ;
                       delta0
                         mcnt = 0
                         mcnt1 = 0
                         FOR j =  ;
                             i -  ;
                             1 TO  ;
                             1  ;
                             STEP - ;
                             1
                              IF bztab(j) =  ;
                                 1
                                   mcnt = mcnt + 1
                                   IF mcnt1 = 0
                                        mcnt1 = j
                                   ENDIF
                              ENDIF
                              IF mcnt >  ;
                                 1
                                   EXIT
                              ENDIF
                         ENDFOR
                         IF mcnt >  ;
                            1
                              tabptr =  ;
                               j
                              bctabsel = - ;
                               1
                              k =  ;
                               chkbc(mcnt1)
                              mbctabsel =  ;
                               bctabsel
                              tabptr =  ;
                               j
                              bctabsel = - ;
                               1
                              k =  ;
                               chkbc(i)
                              IF bctabsel >  ;
                                 0  ;
                                 .AND.  ;
                                 mbctabsel =  ;
                                 bctabsel
                                   IF mcnt1 > tabptr + 1 .AND. sktab(mcnt1 - 1) >= bctabxb(bctabsel) - sjzt1
                                        bztab(mcnt1 - 1) = 1
                                        bztab(mcnt1) = 3
                                        msele = LTRIM(STR(SELECT()))
                                        SELECT clfx
                                        mrec = RECNO()
                                        DO WHILE mzgbh=zgbh .AND. mdate=CTOD(riqi) .AND.  .NOT. BOF()
                                             SKIP -1
                                        ENDDO
                                        SKIP
                                        DO WHILE mzgbh=zgbh .AND. mdate=CTOD(riqi) .AND.  .NOT. EOF()
                                             IF (bc = bctabbh(bctabsel) .OR. EMPTY(bc)) .AND. xbsk = sktab(mcnt1)
                                                  REPLACE xbsk WITH IIF(sktab(mcnt1 - 1) > 1440, sktab(mcnt1 - 1) - 1440, sktab(mcnt1 - 1))
                                                  DO skproc_end_modify
                                                  EXIT
                                             ENDIF
                                             SKIP
                                        ENDDO
                                        GOTO mrec
                                        SELECT &msele
                                   ELSE
                                        FOR x = mcnt1 TO i - 1
                                             bztab(x) = 2
                                        ENDFOR
                                        bztab(i) = 1
                                        msele = LTRIM(STR(SELECT()))
                                        SELECT clfx
                                        mrec = RECNO()
                                        DO WHILE mzgbh=zgbh .AND. mdate=CTOD(riqi) .AND.  .NOT. BOF()
                                             SKIP -1
                                        ENDDO
                                        SKIP
                                        DO WHILE mzgbh=zgbh .AND. mdate=CTOD(riqi) .AND.  .NOT. EOF()
                                             IF (bc = bctabbh(bctabsel) .OR. EMPTY(bc)) .AND. xbsk = sktab(mcnt1)
                                                  REPLACE xbsk WITH IIF(sktab(i) > 1440, sktab(i) - 1440, sktab(i))
                                                  DO skproc_end_modify
                                                  EXIT
                                             ENDIF
                                             SKIP
                                        ENDDO
                                        GOTO mrec
                                        SELECT &msele
                                   ENDIF
                              ENDIF
                         ELSE
                              mcnt =  ;
                               0
                              mcnt1 =  ;
                               0
                              FOR  ;
                               j =  ;
                               i +  ;
                               1  ;
                               TO  ;
                               sktabcnt
                                   IF (itwo > 0 .AND. j >= itwo) .OR. (ithree > 0 .AND. j >= ithree)
                                        EXIT
                                   ENDIF
                                   IF bztab(j) = 1
                                        mcnt = mcnt + 1
                                        IF mcnt1 = 0
                                             mcnt1 = j
                                        ENDIF
                                   ENDIF
                                   IF mcnt > 1
                                        EXIT
                                   ENDIF
                              ENDFOR
                              IF mcnt >  ;
                                 1
                                   tabptr = mcnt1
                                   bctabsel = -1
                                   k = chkbc(j)
                                   mbctabsel = bctabsel
                                   tabptr = i
                                   bctabsel = -1
                                   k = chkbc(j)
                                   IF k < 9999 .AND. bctabsel > 0 .AND. mbctabsel = bctabsel
                                        FOR x = mcnt1 TO i - 1
                                             bztab(x) = 2
                                        ENDFOR
                                        bztab(i) = 1
                                        msele = LTRIM(STR(SELECT()))
                                        SELECT clfx
                                        mrec = RECNO()
                                        DO WHILE mzgbh=zgbh .AND. mdate=CTOD(riqi) .AND.  .NOT. BOF()
                                             SKIP -1
                                        ENDDO
                                        SKIP
                                        DO WHILE mzgbh=zgbh .AND. mdate=CTOD(riqi) .AND.  .NOT. EOF()
                                             IF (bc = bctabbh(bctabsel) .OR. EMPTY(bc)) .AND. sbsk = sktab(mcnt1)
                                                  REPLACE sbsk WITH IIF(sktab(i) > 1440, sktab(i) - 1440, sktab(i))
                                                  DO skproc_end_modify
                                                  EXIT
                                             ENDIF
                                             SKIP
                                        ENDDO
                                        GOTO mrec
                                        SELECT &msele
                                   ENDIF
                              ENDIF
                         ENDIF
                    ENDIF
               ENDIF
          ENDFOR
          EXIT
     ENDIF
     FOR y = sktabcnt TO 1 STEP - ;
         1
          IF bztab(y) <> 3
               EXIT
          ENDIF
     ENDFOR
     sktabcnt = y
     mloop = .F.
     i1 = -1
     j1 = -1
     k1 = 1
     d1 = 9999
     d = 9999
     mbtb = .F.
     bctabsel = -1
     sktabsel = -1
     iflag1 = 0
     iflag2 = 0
     idelta1 = 9999
     idelta2 = 9999
     imode1 = 0
     idengji1 = .F.
     idengji = .F.
     FOR tabptr = 1 TO sktabcnt -  ;
         1
          IF bztab(tabptr) <> 9
               LOOP
          ENDIF
          FOR i = sktabcnt TO  ;
              tabptr + 1 STEP -1
               IF bztab(i) <> 9
                    LOOP
               ENDIF
               FOR p = tabptr + 1  ;
                   TO i - 1
                    IF bztab(p) =  ;
                       1
                         EXIT
                    ENDIF
               ENDFOR
               IF p <= i - 1
                    LOOP
               ENDIF
               d = chkbc(i)
               IF d = -9999
                    IF pub_jblb(1,  ;
                       pub_jbqj_no) =  ;
                       92
                         IF j1 >  ;
                            0  ;
                            .AND.  ;
                            d1 <  ;
                            9999
                              DO modisk_1440  ;
                                 WITH  ;
                                 sktab(tabptr),  ;
                                 sktab(i)
                              isb =  ;
                               modisk_1440_sb
                              ixb =  ;
                               modisk_1440_xb
                              DO modisk_1440  ;
                                 WITH  ;
                                 sktab(k1),  ;
                                 sktab(i1)
                              ksb =  ;
                               IIF(modisk_1440_sb <  ;
                               bctabsb(j1),  ;
                               modisk_1440_sb,  ;
                               bctabsb(j1))
                              kxb =  ;
                               IIF(modisk_1440_xb >  ;
                               bctabxb(j1),  ;
                               modisk_1440_xb,  ;
                               bctabxb(j1))
                              kdelta9 =  ;
                               IIF(delta9 *  ;
                               pub_jbss(1,  ;
                               pub_jbqj_no) <  ;
                               delta9max,  ;
                               delta9 *  ;
                               pub_jbss(1,  ;
                               pub_jbqj_no),  ;
                               delta9max)
                              DO CASE
                                   CASE isb < ksb .AND. ixb >= ksb .AND. ixb <= kxb .AND. ksb - isb < kdelta9
                                        DO CASE
                                             CASE i1 = i + 1 .AND. (sktab(i1) - sktab(k1)) / pub_jbss(1, pub_jbqj_no) > 1.2 
                                                  msw = .F.
                                             CASE i1 > i + 1 .AND. sktab(i1) - sktab(i + 1) > sjcq * 0.7 
                                                  msw = .F.
                                             OTHERWISE
                                                  msw = .T.
                                        ENDCASE
                                   CASE isb >= ksb .AND. isb <= kxb .AND. ixb > kxb .AND. ixb - kxb < kdelta9
                                        DO CASE
                                             CASE k1 = tabptr - 1 .AND. (sktab(i1) - sktab(k1)) / pub_jbss(1, pub_jbqj_no) > 1.2 
                                                  msw = .F.
                                             CASE k1 < tabptr - 1 .AND. sktab(tabptr - 1) - sktab(k1) > sjcq * 0.7 
                                                  msw = .F.
                                             OTHERWISE
                                                  msw = .T.
                                        ENDCASE
                                   CASE isb >= ksb .AND. isb <= kxb .AND. ixb >= ksb .AND. ixb <= kxb
                                        DO CASE
                                             CASE (sktab(i1) - sktab(k1)) / sjcq < 0.8 
                                                  msw = .F.
                                             CASE i1 = i + 1 .AND. (sktab(i1) - sktab(k1)) / pub_jbss(1, pub_jbqj_no) > 1.2 
                                                  msw = .F.
                                             CASE i1 > i + 1 .AND. sktab(i1) - sktab(i + 1) > sjcq * 0.7 
                                                  msw = .F.
                                             CASE k1 = tabptr - 1 .AND. (sktab(i1) - sktab(k1)) / pub_jbss(1, pub_jbqj_no) > 1.2 
                                                  msw = .F.
                                             CASE k1 < tabptr - 1 .AND. sktab(tabptr - 1) - sktab(k1) > sjcq * 0.7 
                                                  msw = .F.
                                             OTHERWISE
                                                  msw = .T.
                                        ENDCASE
                                   OTHERWISE
                                        IF j1 > 0 .AND. LEN(TRIM(bctabbh(j1))) > 2
                                             msw = .T.
                                        ELSE
                                             msw = .F.
                                        ENDIF
                              ENDCASE
                              IF msw
                                   bctabsel = -1
                                   sktabsel = -1
                                   LOOP
                              ENDIF
                         ENDIF
                         IF tabptr +  ;
                            1 <  ;
                            i
                              bctabsel = - ;
                               1
                              sktabsel = - ;
                               1
                              LOOP
                         ENDIF
                         IF tabptr =  ;
                            2
                              bctabsel = - ;
                               1
                              sktabsel = - ;
                               1
                              LOOP
                         ENDIF
                    ELSE
                         IF itwo >  ;
                            0  ;
                            .AND.  ;
                            tabptr >=  ;
                            itwo  ;
                            .AND.  ;
                            pub_jblb(2,  ;
                            pub_jbqj_no) =  ;
                            93  ;
                            .AND.  ;
                            tabptr =  ;
                            2
                              bctabsel = - ;
                               1
                              sktabsel = - ;
                               1
                              LOOP
                         ENDIF
                    ENDIF
                    sktabsel = i
                    EXIT
               ENDIF
               IF pub_jblb(1,  ;
                  pub_jbqj_no) >  ;
                  91 .AND.  ;
                  pub_jblb(1,  ;
                  pub_jbqj_no) <  ;
                  95 .AND. (itwo =  ;
                  0 .OR. tabptr <  ;
                  itwo)
                    isb = IIF(sktab(tabptr) >  ;
                          2880 +  ;
                          delta0,  ;
                          sktab(tabptr) -  ;
                          2880,  ;
                          IIF(sktab(tabptr) >  ;
                          1440 +  ;
                          delta0,  ;
                          sktab(tabptr) -  ;
                          1440,  ;
                          sktab(tabptr)))
                    ixb = IIF(sktab(tabptr) >  ;
                          2880 +  ;
                          delta0,  ;
                          sktab(i) -  ;
                          2880,  ;
                          IIF(sktab(tabptr) >  ;
                          1440 +  ;
                          delta0,  ;
                          sktab(i) -  ;
                          1440,  ;
                          sktab(i)))
                    d = d +  ;
                        chkjb(isb,  ;
                        ixb, 0)
               ENDIF
               mflag = .F.
               DO CASE
                    CASE bctabsel >  ;
                         0 .AND.  ;
                         j1 <= 0
                         mflag = .T.
                    CASE bctabsel >  ;
                         0 .AND.  ;
                         j1 > 0  ;
                         .AND.  ;
                         LEN(TRIM(bctabbh(j1))) >=  ;
                         3 .AND.  ;
                         bctabbh(j1) =  ;
                         bctabbh(bctabsel)
                         mflag = .T.
                    CASE bctabsel >  ;
                         0 .AND.  ;
                         j1 > 0  ;
                         .AND.  ;
                         LEN(TRIM(bctabbh(j1))) <  ;
                         3
                         mflag = .T.
               ENDCASE
               IF bctabsel > 0
                    mflag1 = 0
                    IF mflag1 = 0  ;
                       .AND.  ;
                       ABS(d1 -  ;
                       d) <= 30  ;
                       .AND. j1 <>  ;
                       bctabsel  ;
                       .AND. k1 =  ;
                       tabptr
                         mflag1 =  ;
                          2
                    ENDIF
                    IF mflag1 = 0  ;
                       .AND.  ;
                       ABS(d1 -  ;
                       d) <=  ;
                       delta8
                         mflag11 =  ;
                          0
                         DO CASE
                              CASE  ;
                               k1 >=  ;
                               ithree  ;
                               .AND.  ;
                               ithree >  ;
                               0
                                   mday = 3
                              CASE  ;
                               k1 >=  ;
                               itwo  ;
                               .AND.  ;
                               itwo >  ;
                               0
                                   mday = 2
                              OTHERWISE
                                   mday = 1
                         ENDCASE
                         IF i1 >  ;
                            0  ;
                            .AND.  ;
                            pub_jbss(mday,  ;
                            pub_jbqj_no) >  ;
                            0
                              mflag11 =  ;
                               chkdup(sktab(k1),  ;
                               sktab(i1),  ;
                               pub_jbks(mday,  ;
                               pub_jbqj_no),  ;
                               pub_jbjs(mday,  ;
                               pub_jbqj_no))
                         ENDIF
                         IF i1 >  ;
                            0  ;
                            .AND.  ;
                            pub_qjss(mday,  ;
                            pub_jbqj_no) >  ;
                            0
                              mflag11 =  ;
                               chkdup(sktab(k1),  ;
                               sktab(i1),  ;
                               pub_qjks(mday,  ;
                               pub_jbqj_no),  ;
                               pub_qjjs(mday,  ;
                               pub_jbqj_no))
                         ENDIF
                         mflag12 =  ;
                          0
                         DO CASE
                              CASE  ;
                               tabptr >=  ;
                               ithree  ;
                               .AND.  ;
                               ithree >  ;
                               0
                                   mday = 3
                              CASE  ;
                               tabptr >=  ;
                               itwo  ;
                               .AND.  ;
                               itwo >  ;
                               0
                                   mday = 2
                              OTHERWISE
                                   mday = 1
                         ENDCASE
                         IF pub_jbss(mday,  ;
                            pub_jbqj_no) >  ;
                            0
                              mflag10 =  ;
                               0
                              IF i1 =  ;
                                 tabptr
                                   mflag10 = chkdupforall(tabptr + 1, i, mday)
                              ENDIF
                              IF mflag10 =  ;
                                 0
                                   mflag12 = chkdup(sktab(tabptr), sktab(i), pub_jbks(mday, pub_jbqj_no), pub_jbjs(mday, pub_jbqj_no))
                              ELSE
                                   IF mday > 1
                                        sktabcnt = mflag10 - 1
                                        EXIT
                                   ENDIF
                              ENDIF
                         ENDIF
                         IF pub_qjss(mday,  ;
                            pub_jbqj_no) >  ;
                            0
                              mflag12 =  ;
                               chkdup(sktab(tabptr),  ;
                               sktab(i),  ;
                               pub_qjks(mday,  ;
                               pub_jbqj_no),  ;
                               pub_qjjs(mday,  ;
                               pub_jbqj_no))
                         ENDIF
                         IF pub_qjss(mday,  ;
                            pub_jbqj_no) >  ;
                            0
                              IF mflag12 =  ;
                                 2  ;
                                 .AND.  ;
                                 mflag11 <>  ;
                                 2  ;
                                 .AND.  ;
                                 tabptr +  ;
                                 1 =  ;
                                 i  ;
                                 .AND.   ;
                                 .NOT.  ;
                                 (tabptr >=  ;
                                 k1  ;
                                 .AND.  ;
                                 i <=  ;
                                 i1)
                                   mflag1 = 2
                              ENDIF
                         ELSE
                              IF mflag12 >  ;
                                 mflag11
                                   mflag1 = 2
                              ENDIF
                         ENDIF
                         IF mflag1 =  ;
                            0  ;
                            .AND.  ;
                            itwo >  ;
                            0  ;
                            .AND.  ;
                            k1 <  ;
                            itwo  ;
                            .AND.  ;
                            tabptr =  ;
                            k1  ;
                            .AND.  ;
                            i <  ;
                            itwo  ;
                            .AND.  ;
                            i1 >=  ;
                            itwo  ;
                            .AND.  ;
                            bctabsel <>  ;
                            j1
                              mflag1 =  ;
                               2
                         ENDIF
                    ENDIF
                    IF mflag1 = 0  ;
                       .AND. (d1 >  ;
                       d + delta8  ;
                       .OR. (d <  ;
                       delta8 / 4  ;
                       .AND. d1 >  ;
                       delta8 * 3 /  ;
                       4))
                         IF  .NOT.  ;
                             (ABS(d1 -  ;
                             d) <=  ;
                             delta8  ;
                             .AND.  ;
                             k1 =  ;
                             1  ;
                             .AND.  ;
                             i1 =  ;
                             tabptr  ;
                             .AND.  ;
                             itwo >  ;
                             0  ;
                             .AND.  ;
                             i >=  ;
                             itwo)
                              mflag1 =  ;
                               2
                         ENDIF
                    ENDIF
                    IF mflag1 = 0  ;
                       .AND. d1 -  ;
                       d >= 0  ;
                       .AND. d1 -  ;
                       d <=  ;
                       delta8
                         IF j1 >  ;
                            0  ;
                            .AND.  ;
                            ((bctabbh(bctabsel) =  ;
                            bctabbh(j1)  ;
                            .AND.  ;
                            LEN(TRIM(bctabbh(bctabsel))) >  ;
                            2  ;
                            .AND.  ;
                            idengji1 =  ;
                            idengji)  ;
                            .OR.  ;
                            (  ;
                            .NOT.  ;
                            idengji1  ;
                            .AND.  ;
                            idengji))  ;
                            .AND.  ;
                            tabptr <=  ;
                            i1
                              mflag1 =  ;
                               2
                         ENDIF
                    ENDIF
                    IF mflag1 = 2
                         i1 = i
                         j1 = bctabsel
                         k1 = tabptr
                         d1 = d
                         idelta1 =  ;
                          pub_delta1
                         idelta2 =  ;
                          pub_delta2
                         iflag1 =  ;
                          pub_flag1
                         iflag2 =  ;
                          pub_flag2
                         imode1 =  ;
                          imode
                         idengji1 =  ;
                          idengji
                    ENDIF
               ENDIF
               bctabsel = -1
               sktabsel = -1
          ENDFOR
          IF d = -9999
               EXIT
          ENDIF
     ENDFOR
     IF d1 < d
          d = d1
     ENDIF
     SELECT clfx
     IF d = -9999 .AND. sktabsel >  ;
        0
          mloop = .T.
          mtemp = .T.
          IF tabptr = 1 .AND.  ;
             (tabptr = itwo .OR.  ;
             tabptr = ithree)
               FOR i = 1 TO  ;
                   sktabcnt
                    bztab(i) = 3
               ENDFOR
               mloop = .F.
               mtemp = .F.
          ENDIF
          IF mtemp .AND. (itwo >  ;
             0 .AND. tabptr >=  ;
             itwo) .OR. (ithree >  ;
             0 .AND. tabptr >=  ;
             ithree)
               FOR i = tabptr TO  ;
                   sktabcnt
                    bztab(i) = 3
               ENDFOR
               mtemp = .F.
          ENDIF
          IF mtemp
               bztab(tabptr) = 1
               bztab(sktabsel) =  ;
                    1
               FOR i = tabptr + 1  ;
                   TO sktabsel -  ;
                   1
                    bztab(i) = 2
               ENDFOR
               DO appejbsk
               pub_jblb(1,  ;
                       pub_jbqj_no) =  ;
                       0
          ENDIF
     ELSE
          sktabsel = i1
          bctabsel = j1
          tabptr = k1
          IF  .NOT. (idelta1 >  ;
              iflag1 * delta4  ;
              .OR. idelta2 >  ;
              iflag2 * delta4  ;
              .OR. sktabsel = -1  ;
              .OR. bctabsel = -1  ;
              .OR.  ;
              (LEN(TRIM(mresults)) =  ;
              2 .AND. d >  ;
              delta4))
               mflag = .F.
               IF itwo > 0 .AND.  ;
                  tabptr >= itwo  ;
                  .AND.  ;
                  sktab(tabptr) <=  ;
                  1440 + delta0
                    SELECT time
                    SEEK bctabbh(bctabsel) 
                    IF EOF()
                         mflag = .T.
                    ELSE
                         IF lb <>  ;
                            '3'  ;
                            .AND.  ;
                            lb <>  ;
                            '4'
                              mflag =  ;
                               .T.
                         ENDIF
                    ENDIF
                    SELECT clfx
               ENDIF
               IF mflag .OR.  ;
                  (itwo > 0 .AND.  ;
                  tabptr >= itwo  ;
                  .AND.  ;
                  sktab(tabptr) >  ;
                  1440 + delta0)  ;
                  .OR. (ithree >  ;
                  0 .AND. tabptr >=  ;
                  ithree)
                    FOR i =  ;
                        tabptr TO  ;
                        sktabcnt
                         bztab(i) =  ;
                              3
                    ENDFOR
               ELSE
                    bctabcl(bctabsel) =  ;
                           .T.
                    mresults = bctabbh(bctabsel)
                    DO appetwosk
                    bztab(tabptr) =  ;
                         1
                    bztab(sktabsel) =  ;
                         1
                    FOR i =  ;
                        tabptr +  ;
                        1 TO  ;
                        sktabsel -  ;
                        1
                         bztab(i) =  ;
                              2
                    ENDFOR
                    IF sktabcnt >  ;
                       sktabsel  ;
                       .AND.  ;
                       ((itwo > 0  ;
                       .AND.  ;
                       sktabsel +  ;
                       1 >= itwo)  ;
                       .OR.  ;
                       (ithree >  ;
                       0 .AND.  ;
                       sktabsel +  ;
                       1 >=  ;
                       ithree))
                         FOR i =  ;
                             sktabsel +  ;
                             1 TO  ;
                             sktabcnt
                              bztab(i) =  ;
                               3
                         ENDFOR
                    ENDIF
               ENDIF
               mloop = .T.
          ENDIF
     ENDIF
ENDFOR
SELECT ardata_
RETURN
ENDPROC
**
PROCEDURE SkipNext
m = zgbh
DO WHILE  .NOT. pub_escape .AND.   ;
   .NOT. EOF() .AND. m=zgbh
     SKIP
ENDDO
IF  .NOT. EOF()
     recptr = RECNO()
     mzgbh = zgbh
     mdate = CTOD(riqi) - 1
ENDIF
RETURN
ENDPROC
**
FUNCTION ChkSbXb
PARAMETER t, b
IF t < delta0
     t = 1440 + delta0
ENDIF
dj = t - bctabsb(1)
dk = t - bctabxb(1)
b = bctabbh(1)
j = 1
k = 1
FOR i = 2 TO bctabcnt
     IF ABS(dj) > ABS(t -  ;
        bctabsb(i))
          dj = t - bctabsb(i)
          j = i
     ENDIF
     IF ABS(dk) > ABS(t -  ;
        bctabxb(i))
          dk = t - bctabxb(i)
          k = i
     ENDIF
ENDFOR
DO CASE
     CASE ABS(dj) < delta4 / 3  ;
          .AND. ABS(dk) >= delta4 /  ;
          3
          ret = 0
          b = bctabbh(j)
     CASE ABS(dj) >= delta4 / 3  ;
          .AND. ABS(dk) < delta4 /  ;
          3
          ret = 1
          b = bctabbh(k)
     OTHERWISE
          IF ABS(ABS(dj) -  ;
             ABS(dk)) < delta4 /  ;
             4 .AND. dj > 0 .AND.  ;
             dk > 0
               ret = 1
               b = bctabbh(k)
          ELSE
               ret = 0
               b = bctabbh(j)
          ENDIF
ENDCASE
RETURN ret
ENDFUNC
**
PROCEDURE AppeTwoSk
APPEND BLANK
m = IIF(sktab(tabptr) >= 0,  ;
    sktab(tabptr), 1440 +  ;
    sktab(tabptr))
n = IIF(sktab(sktabsel) >= 0,  ;
    sktab(sktabsel), 1440 +  ;
    sktab(sktabsel))
REPLACE zgbh WITH mzgbh, riqi  ;
        WITH DTOC(mdate)
IF addedflagtab(tabptr) = 0
     REPLACE sbsk WITH m
ENDIF
IF addedflagtab(sktabsel) = 0
     REPLACE xbsk WITH n
ENDIF
REPLACE bc WITH bctabbh(bctabsel),  ;
        lb WITH time.lb
REPLACE sbsj WITH  ;
        bctabsb(bctabsel), xbsj  ;
        WITH bctabxb(bctabsel)
REPLACE zdcl WITH 98
pub_lastdate = mdate
pub_lastbc = bc
mcd = sbsk - sbsj
mzt = xbsj - xbsk
IF mcd > sjcd1 .OR. mzt > sjzt1
     IF  .NOT. chk98(mzgbh,  ;
         DTOC(mdate))
          IF mcd > sjcd1
               REPLACE cdss WITH  ;
                       IIF(sjcd2 >  ;
                       1, sjcd2 *  ;
                       (INT(mcd /  ;
                       sjcd2) +  ;
                       1), mcd)
               REPLACE zdcl WITH  ;
                       80
          ENDIF
          IF mzt > sjzt1
               REPLACE ztss WITH  ;
                       IIF(sjzt2 >  ;
                       1, sjzt2 *  ;
                       (INT(mzt /  ;
                       sjzt2) +  ;
                       1), mzt)
               REPLACE zdcl WITH  ;
                       IIF(zdcl =  ;
                       80, 82,  ;
                       81)
          ENDIF
     ENDIF
ENDIF
IF cdss >= sjcd3 .OR. ztss >=  ;
   sjzt3
     IF (sbsj > 0 .AND. sbsk <  ;
        sbsj .AND. xbsk < sbsj)  ;
        .OR. (xbsj > 0 .AND. sbsk >  ;
        xbsj .AND. xbsk > xbsj)
          REPLACE sbsj WITH 0,  ;
                  xbsj WITH 0, bc  ;
                  WITH '', lb  ;
                  WITH '', cdss  ;
                  WITH 0, ztss  ;
                  WITH 0, zdcl  ;
                  WITH 0
     ELSE
          REPLACE kgss WITH  ;
                  bctabss(bctabsel)
          REPLACE zdcl WITH 85
          REPLACE cdss WITH 0,  ;
                  ztss WITH 0
     ENDIF
ELSE
     REPLACE cqss WITH  ;
             bctabss(bctabsel)
ENDIF
DO writeztwc
RETURN
ENDPROC
**
PROCEDURE AppeJbSk
APPEND BLANK
m = IIF(sktab(tabptr) >= 0,  ;
    sktab(tabptr), 1440 +  ;
    sktab(tabptr))
n = IIF(sktab(sktabsel) >= 0,  ;
    sktab(sktabsel), 1440 +  ;
    sktab(sktabsel))
REPLACE zgbh WITH mzgbh, riqi  ;
        WITH DTOC(mdate)
IF addedflagtab(tabptr) = 0
     REPLACE sbsk WITH m
ENDIF
IF addedflagtab(sktabsel) = 0
     REPLACE xbsk WITH n
ENDIF
m_zjks = 0
m_zjjs = 0
IF bctabsel > 0
     REPLACE bc WITH  ;
             bctabbh(bctabsel)
     REPLACE lb WITH time.lb
     REPLACE sbsj WITH  ;
             bctabsb(bctabsel),  ;
             xbsj WITH  ;
             bctabxb(bctabsel)
     m_zjks = time.zjks
     m_zjjs = IIF(time.zjks >  ;
              time.zjjs, 1440, 0) +  ;
              time.zjjs
ELSE
     REPLACE bc WITH xjjl_d.bc
     SELECT time
     SEEK xjjl_d.bc 
     SELECT clfx
     IF  .NOT. EOF("XJJL_D")
          REPLACE lb WITH time.lb
          REPLACE sbsj WITH  ;
                  time.sbsj, xbsj  ;
                  WITH time.xbsj
          m_zjks = time.zjks
          m_zjjs = IIF(time.zjks >  ;
                   time.zjjs,  ;
                   1440, 0) +  ;
                   time.zjjs
     ENDIF
ENDIF
DO writeztwc
RETURN
ENDPROC
**
FUNCTION ChkBc
PARAMETER n
pub_jbqj_no = 1
ret = 9999
mdelta = 9999
pub_bctabsel = -1
mbctabsel = -1
t_sb = sktab(tabptr)
t_xb = sktab(n)
DO CASE
     CASE ithree > 0 .AND. tabptr >=  ;
          ithree
          mday = 3
     CASE itwo > 0 .AND. tabptr >=  ;
          itwo
          mday = 2
     OTHERWISE
          mday = 1
ENDCASE
DO modisk_1440 WITH sktab(tabptr),  ;
   sktab(n)
sktab_tabptr = modisk_1440_sb
sktab_n = modisk_1440_xb
t_sb = sktab_tabptr
t_xb = sktab_n
IF mday = 1 .AND. pub_cqss(1, 1) >  ;
   0
     IF t_sb - 60 > pub_cqks(1,  ;
        1) .AND. t_sb + 60 <  ;
        pub_cqjs(1, 1)
          RETURN ret
     ENDIF
     IF t_xb - 60 > pub_cqks(1,  ;
        1) .AND. t_xb + 60 <  ;
        pub_cqjs(1, 1)
          RETURN ret
     ENDIF
ENDIF
mentry = .F.
FOR jb_no = 1 TO 3
     IF pub_cqss(mday, jb_no) = 0  ;
        .AND. pub_jblb(mday,  ;
        jb_no) = 0 .AND.  ;
        pub_qjlb(mday, jb_no) = 0  ;
        .AND.  .NOT. (sktab_n >  ;
        1440 .AND. mday < 3 .AND.  ;
        pub_jblb(mday + 1, 1) >  ;
        92 .AND. pub_jblb(mday +  ;
        1, 1) < 95)
          LOOP
     ENDIF
     DO CASE
          CASE pub_cqss(mday,  ;
               jb_no) > 0
               IF pub_cqks(mday,  ;
                  jb_no) = 0  ;
                  .AND.  ;
                  pub_cqjs(mday,  ;
                  jb_no) = 0
                    IF pub_cqss(mday,  ;
                       jb_no) >  ;
                       0
                         mdt = pub_cqss(mday,  ;
                               jb_no) /  ;
                               (sktab_n -  ;
                               sktab_tabptr)
                         IF mdt >  ;
                            0.8   ;
                            .AND.  ;
                            mdt <  ;
                            1.2 
                              IF EMPTY(pub_cqbc(mday,  ;
                                 jb_no))
                                   trybc(sktab_tabptr, sktab_n)
                                   mbctabsel = pub_bctabsel
                              ELSE
                                   pub_bctabsel = getselbc(pub_cqbc(mday, jb_no))
                              ENDIF
                              ret = - ;
                               9999
                         ENDIF
                    ENDIF
               ELSE
                    i_jbks = 9999
                    i_jbjs = 9999
                    i_jbtype = 0
                    DO CASE
                         CASE pub_cqks(mday,  ;
                              jb_no) >=  ;
                              sktab_tabptr  ;
                              .AND.  ;
                              pub_cqks(mday,  ;
                              jb_no) <=  ;
                              sktab_n  ;
                              .AND.  ;
                              pub_cqjs(mday,  ;
                              jb_no) >=  ;
                              sktab_tabptr  ;
                              .AND.  ;
                              pub_cqjs(mday,  ;
                              jb_no) <=  ;
                              sktab_n
                              i_jbks =  ;
                               pub_cqks(mday,  ;
                               jb_no) -  ;
                               sktab_tabptr
                              i_jbjs =  ;
                               sktab_n -  ;
                               pub_cqjs(mday,  ;
                               jb_no)
                              i_jbtype =  ;
                               1
                         CASE pub_cqks(mday,  ;
                              jb_no) <=  ;
                              sktab_tabptr  ;
                              .AND.  ;
                              pub_cqks(mday,  ;
                              jb_no) <=  ;
                              sktab_n  ;
                              .AND.  ;
                              pub_cqjs(mday,  ;
                              jb_no) >=  ;
                              sktab_tabptr  ;
                              .AND.  ;
                              pub_cqjs(mday,  ;
                              jb_no) >=  ;
                              sktab_n
                              i_jbks =  ;
                               sktab_tabptr -  ;
                               pub_cqks(mday,  ;
                               jb_no)
                              i_jbjs =  ;
                               pub_cqjs(mday,  ;
                               jb_no) -  ;
                               sktab_n
                              i_jbtype =  ;
                               2
                         CASE pub_cqks(mday,  ;
                              jb_no) <=  ;
                              sktab_tabptr  ;
                              .AND.  ;
                              pub_cqks(mday,  ;
                              jb_no) <=  ;
                              sktab_n  ;
                              .AND.  ;
                              pub_cqjs(mday,  ;
                              jb_no) >=  ;
                              sktab_tabptr  ;
                              .AND.  ;
                              pub_cqjs(mday,  ;
                              jb_no) <=  ;
                              sktab_n
                              i_jbks =  ;
                               sktab_tabptr -  ;
                               pub_cqks(mday,  ;
                               jb_no)
                              i_jbjs =  ;
                               sktab_n -  ;
                               pub_cqjs(mday,  ;
                               jb_no)
                              i_jbtype =  ;
                               3
                         CASE pub_cqks(mday,  ;
                              jb_no) >=  ;
                              sktab_tabptr  ;
                              .AND.  ;
                              pub_cqks(mday,  ;
                              jb_no) <=  ;
                              sktab_n  ;
                              .AND.  ;
                              pub_cqjs(mday,  ;
                              jb_no) >=  ;
                              sktab_tabptr  ;
                              .AND.  ;
                              pub_cqjs(mday,  ;
                              jb_no) >=  ;
                              sktab_n
                              i_jbks =  ;
                               pub_cqks(mday,  ;
                               jb_no) -  ;
                               sktab_tabptr
                              i_jbjs =  ;
                               pub_cqjs(mday,  ;
                               jb_no) -  ;
                               sktab_n
                              i_jbtype =  ;
                               4
                    ENDCASE
                    kdelta9 = IIF(delta9 *  ;
                              pub_cqss(mday,  ;
                              jb_no) <  ;
                              delta9max,  ;
                              delta9 *  ;
                              pub_cqss(mday,  ;
                              jb_no),  ;
                              delta9max)
                    IF i_jbks <  ;
                       kdelta9  ;
                       .AND.  ;
                       i_jbjs <  ;
                       kdelta9
                         IF EMPTY(pub_cqbc(mday,  ;
                            jb_no))
                              trybc(sktab_tabptr,  ;
                               sktab_n)
                              mbctabsel =  ;
                               pub_bctabsel
                         ELSE
                              pub_bctabsel =  ;
                               getselbc(pub_cqbc(mday,  ;
                               jb_no))
                         ENDIF
                         ret = -9999
                    ENDIF
               ENDIF
          CASE pub_jblb(mday,  ;
               jb_no) = 97
               IF pub_jbks(mday,  ;
                  jb_no) = 0  ;
                  .AND.  ;
                  pub_jbjs(mday,  ;
                  jb_no) = 0
                    t_xb = sktab_n -  ;
                           pub_jbss(mday,  ;
                           jb_no)
                    idengji = .T.
               ELSE
                    DO CASE
                         CASE ABS(pub_jbks(mday,  ;
                              jb_no) -  ;
                              sktab_tabptr) <  ;
                              ABS(pub_jbjs(mday,  ;
                              jb_no) -  ;
                              sktab_n)
                              IF ABS(pub_jbks(mday,  ;
                                 jb_no) -  ;
                                 sktab_tabptr) <  ;
                                 120
                                   t_sb = pub_jbjs(mday, jb_no)
                                   t_xb = sktab_n
                                   idengji = .T.
                              ENDIF
                         CASE ABS(pub_jbks(mday,  ;
                              jb_no) -  ;
                              sktab_tabptr) >=  ;
                              ABS(pub_jbjs(mday,  ;
                              jb_no) -  ;
                              sktab_n)
                              IF ABS(pub_jbjs(mday,  ;
                                 jb_no) -  ;
                                 sktab_n) <  ;
                                 120
                                   t_sb = sktab_tabptr
                                   t_xb = pub_jbks(mday, jb_no)
                                   idengji = .T.
                              ENDIF
                    ENDCASE
               ENDIF
          CASE pub_jblb(mday,  ;
               jb_no) = 92
               IF pub_jbks(mday,  ;
                  jb_no) = 0  ;
                  .AND.  ;
                  pub_jbjs(mday,  ;
                  jb_no) = 0
                    IF pub_jbss(mday,  ;
                       jb_no) >  ;
                       0
                         mdt = pub_jbss(mday,  ;
                               jb_no) /  ;
                               (sktab_n -  ;
                               sktab_tabptr -  ;
                               getrest(sktab_tabptr,  ;
                               sktab_n))
                         IF mdt >  ;
                            0.8   ;
                            .AND.  ;
                            mdt <  ;
                            1.2 
                              = trybc(sktab_tabptr,  ;
                                sktab_n)
                              ret = - ;
                               9999
                         ELSE
                              IF pub_jbss(mday,  ;
                                 jb_no) <  ;
                                 (450^1)
                                   try1 = trybc(sktab_tabptr, sktab_n - pub_jbss(mday, jb_no))
                                   try2 = trybc(sktab_tabptr + pub_jbss(mday, jb_no), sktab_n)
                                   IF try1 < 120 .OR. try2 < 120
                                        IF try1 <= try2
                                             IF sktab_n - pub_jbss(mday, jb_no) > t_sb
                                                  t_xb = sktab_n - pub_jbss(mday, jb_no)
                                                  idengji = .T.
                                             ENDIF
                                        ELSE
                                             IF sktab_tabptr + pub_jbss(mday, jb_no) < t_xb
                                                  t_sb = sktab_tabptr + pub_jbss(mday, jb_no)
                                                  idengji = .T.
                                             ENDIF
                                        ENDIF
                                   ENDIF
                              ENDIF
                         ENDIF
                    ENDIF
               ELSE
                    i_jbks = 9999
                    i_jbjs = 9999
                    i_jbtype = 0
                    DO CASE
                         CASE pub_jbks(mday,  ;
                              jb_no) >=  ;
                              sktab_tabptr  ;
                              .AND.  ;
                              pub_jbks(mday,  ;
                              jb_no) <=  ;
                              sktab_n  ;
                              .AND.  ;
                              pub_jbjs(mday,  ;
                              jb_no) >=  ;
                              sktab_tabptr  ;
                              .AND.  ;
                              pub_jbjs(mday,  ;
                              jb_no) <=  ;
                              sktab_n
                              i_jbks =  ;
                               pub_jbks(mday,  ;
                               jb_no) -  ;
                               sktab_tabptr
                              i_jbjs =  ;
                               sktab_n -  ;
                               pub_jbjs(mday,  ;
                               jb_no)
                              i_jbtype =  ;
                               1
                         CASE pub_jbks(mday,  ;
                              jb_no) <=  ;
                              sktab_tabptr  ;
                              .AND.  ;
                              pub_jbks(mday,  ;
                              jb_no) <=  ;
                              sktab_n  ;
                              .AND.  ;
                              pub_jbjs(mday,  ;
                              jb_no) >=  ;
                              sktab_tabptr  ;
                              .AND.  ;
                              pub_jbjs(mday,  ;
                              jb_no) >=  ;
                              sktab_n
                              i_jbks =  ;
                               sktab_tabptr -  ;
                               pub_jbks(mday,  ;
                               jb_no)
                              i_jbjs =  ;
                               pub_jbjs(mday,  ;
                               jb_no) -  ;
                               sktab_n
                              i_jbtype =  ;
                               2
                         CASE pub_jbks(mday,  ;
                              jb_no) <=  ;
                              sktab_tabptr  ;
                              .AND.  ;
                              pub_jbks(mday,  ;
                              jb_no) <=  ;
                              sktab_n  ;
                              .AND.  ;
                              pub_jbjs(mday,  ;
                              jb_no) >=  ;
                              sktab_tabptr  ;
                              .AND.  ;
                              pub_jbjs(mday,  ;
                              jb_no) <=  ;
                              sktab_n
                              i_jbks =  ;
                               sktab_tabptr -  ;
                               pub_jbks(mday,  ;
                               jb_no)
                              i_jbjs =  ;
                               sktab_n -  ;
                               pub_jbjs(mday,  ;
                               jb_no)
                              i_jbtype =  ;
                               3
                         CASE pub_jbks(mday,  ;
                              jb_no) >=  ;
                              sktab_tabptr  ;
                              .AND.  ;
                              pub_jbks(mday,  ;
                              jb_no) <=  ;
                              sktab_n  ;
                              .AND.  ;
                              pub_jbjs(mday,  ;
                              jb_no) >=  ;
                              sktab_tabptr  ;
                              .AND.  ;
                              pub_jbjs(mday,  ;
                              jb_no) >=  ;
                              sktab_n
                              i_jbks =  ;
                               pub_jbks(mday,  ;
                               jb_no) -  ;
                               sktab_tabptr
                              i_jbjs =  ;
                               pub_jbjs(mday,  ;
                               jb_no) -  ;
                               sktab_n
                              i_jbtype =  ;
                               4
                    ENDCASE
                    kdelta9 = IIF(delta9 *  ;
                              pub_jbss(mday,  ;
                              jb_no) <  ;
                              delta9max,  ;
                              delta9 *  ;
                              pub_jbss(mday,  ;
                              jb_no),  ;
                              delta9max)
                    DO CASE
                         CASE i_jbks <  ;
                              kdelta9  ;
                              .AND.  ;
                              i_jbjs <  ;
                              kdelta9
                              ret = - ;
                               9999
                         CASE i_jbks =  ;
                              9999  ;
                              .AND.  ;
                              i_jbjs =  ;
                              9999
                         OTHERWISE
                              DO CASE
                                   CASE i_jbtype = 1
                                        IF i_jbks <= i_jbjs
                                             IF i_jbks < 120
                                                  t_sb = pub_jbjs(mday, jb_no)
                                                  idengji = .T.
                                             ENDIF
                                        ELSE
                                             IF i_jbjs < 120
                                                  t_xb = pub_jbks(mday, jb_no)
                                                  idengji = .T.
                                             ENDIF
                                        ENDIF
                                   CASE i_jbtype = 3 .AND. i_jbks < 120
                                        t_sb = pub_jbjs(mday, jb_no)
                                        idengji = .T.
                                   CASE i_jbtype = 4 .AND. i_jbjs < 120
                                        t_xb = pub_jbks(mday, jb_no)
                                        idengji = .T.
                              ENDCASE
                    ENDCASE
               ENDIF
          CASE pub_jblb(mday,  ;
               jb_no) > 92 .AND.  ;
               pub_jblb(mday,  ;
               jb_no) < 95
               IF pub_jbks(mday,  ;
                  jb_no) = 0  ;
                  .AND.  ;
                  pub_jbjs(mday,  ;
                  jb_no) = 0
                    IF pub_jbss(mday,  ;
                       jb_no) >  ;
                       0
                         mdt = pub_jbss(mday,  ;
                               jb_no) /  ;
                               (sktab_n -  ;
                               sktab_tabptr)
                         IF mdt >  ;
                            0.8   ;
                            .AND.  ;
                            mdt <  ;
                            1.2 
                              IF EMPTY(pub_jbbc(mday,  ;
                                 jb_no))
                                   trybc(sktab_tabptr, sktab_n)
                                   mbctabsel = pub_bctabsel
                              ELSE
                                   pub_bctabsel = getselbc(pub_jbbc(mday, jb_no))
                              ENDIF
                              ret = - ;
                               9999
                         ENDIF
                    ENDIF
               ELSE
                    i_jbks = 9999
                    i_jbjs = 9999
                    i_jbtype = 0
                    DO CASE
                         CASE pub_jbks(mday,  ;
                              jb_no) >=  ;
                              sktab_tabptr  ;
                              .AND.  ;
                              pub_jbks(mday,  ;
                              jb_no) <=  ;
                              sktab_n  ;
                              .AND.  ;
                              pub_jbjs(mday,  ;
                              jb_no) >=  ;
                              sktab_tabptr  ;
                              .AND.  ;
                              pub_jbjs(mday,  ;
                              jb_no) <=  ;
                              sktab_n
                              i_jbks =  ;
                               pub_jbks(mday,  ;
                               jb_no) -  ;
                               sktab_tabptr
                              i_jbjs =  ;
                               sktab_n -  ;
                               pub_jbjs(mday,  ;
                               jb_no)
                              i_jbtype =  ;
                               1
                         CASE pub_jbks(mday,  ;
                              jb_no) <=  ;
                              sktab_tabptr  ;
                              .AND.  ;
                              pub_jbks(mday,  ;
                              jb_no) <=  ;
                              sktab_n  ;
                              .AND.  ;
                              pub_jbjs(mday,  ;
                              jb_no) >=  ;
                              sktab_tabptr  ;
                              .AND.  ;
                              pub_jbjs(mday,  ;
                              jb_no) >=  ;
                              sktab_n
                              i_jbks =  ;
                               sktab_tabptr -  ;
                               pub_jbks(mday,  ;
                               jb_no)
                              i_jbjs =  ;
                               pub_jbjs(mday,  ;
                               jb_no) -  ;
                               sktab_n
                              i_jbtype =  ;
                               2
                         CASE pub_jbks(mday,  ;
                              jb_no) <=  ;
                              sktab_tabptr  ;
                              .AND.  ;
                              pub_jbks(mday,  ;
                              jb_no) <=  ;
                              sktab_n  ;
                              .AND.  ;
                              pub_jbjs(mday,  ;
                              jb_no) >=  ;
                              sktab_tabptr  ;
                              .AND.  ;
                              pub_jbjs(mday,  ;
                              jb_no) <=  ;
                              sktab_n
                              i_jbks =  ;
                               sktab_tabptr -  ;
                               pub_jbks(mday,  ;
                               jb_no)
                              i_jbjs =  ;
                               sktab_n -  ;
                               pub_jbjs(mday,  ;
                               jb_no)
                              i_jbtype =  ;
                               3
                         CASE pub_jbks(mday,  ;
                              jb_no) >=  ;
                              sktab_tabptr  ;
                              .AND.  ;
                              pub_jbks(mday,  ;
                              jb_no) <=  ;
                              sktab_n  ;
                              .AND.  ;
                              pub_jbjs(mday,  ;
                              jb_no) >=  ;
                              sktab_tabptr  ;
                              .AND.  ;
                              pub_jbjs(mday,  ;
                              jb_no) >=  ;
                              sktab_n
                              i_jbks =  ;
                               pub_jbks(mday,  ;
                               jb_no) -  ;
                               sktab_tabptr
                              i_jbjs =  ;
                               pub_jbjs(mday,  ;
                               jb_no) -  ;
                               sktab_n
                              i_jbtype =  ;
                               4
                    ENDCASE
                    kdelta9 = IIF(delta9 *  ;
                              pub_jbss(mday,  ;
                              jb_no) <  ;
                              delta9max,  ;
                              delta9 *  ;
                              pub_jbss(mday,  ;
                              jb_no),  ;
                              delta9max)
                    IF i_jbks <  ;
                       kdelta9  ;
                       .AND.  ;
                       i_jbjs <  ;
                       kdelta9
                         IF EMPTY(pub_jbbc(mday,  ;
                            jb_no))
                              trybc(sktab_tabptr,  ;
                               sktab_n)
                              mbctabsel =  ;
                               pub_bctabsel
                         ELSE
                              pub_bctabsel =  ;
                               getselbc(pub_jbbc(mday,  ;
                               jb_no))
                         ENDIF
                         ret = -9999
                    ENDIF
               ENDIF
          CASE sktab_n > 1440  ;
               .AND. mday = 1  ;
               .AND.  ;
               pub_jblb(mday + 1,  ;
               1) > 92 .AND.  ;
               pub_jblb(mday + 1,  ;
               1) < 95
               IF pub_jbks(mday +  ;
                  1, 1) = 0
                    IF pub_jbss(mday +  ;
                       1, 1) > 0
                         t_xb = sktab_n -  ;
                                pub_jbss(mday +  ;
                                1,  ;
                                1)
                         idengji =  ;
                          .T.
                    ENDIF
               ELSE
                    IF sktab_n >  ;
                       1440 +  ;
                       pub_jbks(mday +  ;
                       1, 1)  ;
                       .AND.  ;
                       pub_jbss(mday +  ;
                       1, 1) > 0
                         t_xb = sktab_n -  ;
                                pub_jbss(mday +  ;
                                1,  ;
                                1)
                         idengji =  ;
                          .T.
                    ENDIF
               ENDIF
     ENDCASE
     IF pub_qjlb(mday, jb_no) > 0  ;
        .AND. pub_qjlb(mday,  ;
        jb_no) < 31
          IF pub_qjks(mday,  ;
             jb_no) = 0 .AND.  ;
             pub_qjjs(mday,  ;
             jb_no) = 0
               IF  .NOT.  ;
                   EMPTY(pub_qjbc(mday,  ;
                   jb_no))
                    IF ABS(pub_qjbcks(mday,  ;
                       jb_no) -  ;
                       sktab_tabptr) <  ;
                       ABS(pub_qjbcjs(mday,  ;
                       jb_no) -  ;
                       sktab_n)
                         t_sb = sktab_tabptr
                         t_xb = pub_qjbcjs(mday,  ;
                                jb_no)
                    ELSE
                         t_sb = pub_qjbcks(mday,  ;
                                jb_no)
                         t_xb = sktab_n
                    ENDIF
                    idengji = .T.
               ELSE
                    IF sktab_n -  ;
                       sktab_tabptr -  ;
                       pub_qjss(mday,  ;
                       jb_no) <  ;
                       sjcq
                         IF ABS(sktab_tabptr -  ;
                            480) >  ;
                            ABS(sktab_n -  ;
                            1020)
                              t_sb =  ;
                               sktab_tabptr
                              t_xb =  ;
                               sktab_n +  ;
                               pub_qjss(mday,  ;
                               jb_no)
                         ELSE
                              t_sb =  ;
                               sktab_tabptr -  ;
                               pub_qjss(mday,  ;
                               jb_no)
                              t_xb =  ;
                               sktab_n
                         ENDIF
                         idengji =  ;
                          .T.
                    ENDIF
               ENDIF
          ELSE
               kdelta9 = IIF(delta9 *  ;
                         pub_qjss(mday,  ;
                         jb_no) <  ;
                         delta9max,  ;
                         delta9 *  ;
                         pub_qjss(mday,  ;
                         jb_no),  ;
                         delta9max)
               DO CASE
                    CASE pub_qjks(mday,  ;
                         jb_no) <=  ;
                         sktab_tabptr  ;
                         .AND.  ;
                         pub_qjjs(mday,  ;
                         jb_no) <=  ;
                         sktab_tabptr
                         IF sktab_tabptr -  ;
                            pub_qjjs(mday,  ;
                            jb_no) <  ;
                            kdelta9
                              t_sb =  ;
                               pub_qjks(mday,  ;
                               jb_no)
                              idengji =  ;
                               .T.
                         ENDIF
                    CASE pub_qjks(mday,  ;
                         jb_no) >=  ;
                         sktab_n  ;
                         .AND.  ;
                         pub_qjjs(mday,  ;
                         jb_no) >=  ;
                         sktab_n
                         IF pub_qjks(mday,  ;
                            jb_no) -  ;
                            sktab_n <  ;
                            kdelta9
                              t_xb =  ;
                               pub_qjjs(mday,  ;
                               jb_no)
                              idengji =  ;
                               .T.
                         ENDIF
                    CASE pub_qjks(mday,  ;
                         jb_no) <=  ;
                         sktab_tabptr  ;
                         .AND.  ;
                         pub_qjjs(mday,  ;
                         jb_no) >=  ;
                         sktab_tabptr  ;
                         .AND.  ;
                         pub_qjjs(mday,  ;
                         jb_no) <=  ;
                         sktab_n  ;
                         .AND.  ;
                         sktab_n -  ;
                         pub_qjks(mday,  ;
                         jb_no) <  ;
                         2 *  ;
                         sjcq
                         t_sb = pub_qjks(mday,  ;
                                jb_no)
                         idengji =  ;
                          .T.
                    CASE pub_qjks(mday,  ;
                         jb_no) >=  ;
                         sktab_tabptr  ;
                         .AND.  ;
                         pub_qjks(mday,  ;
                         jb_no) <=  ;
                         sktab_n  ;
                         .AND.  ;
                         pub_qjjs(mday,  ;
                         jb_no) >=  ;
                         sktab_n  ;
                         .AND.  ;
                         pub_qjjs(mday,  ;
                         jb_no) -  ;
                         sktab_tabptr <  ;
                         2 *  ;
                         sjcq
                         t_xb = pub_qjjs(mday,  ;
                                jb_no)
                         idengji =  ;
                          .T.
               ENDCASE
          ENDIF
     ENDIF
     IF ret = -9999
          pub_jbqj_no = jb_no
          mbctabsel = pub_bctabsel
          mentry = .T.
          EXIT
     ELSE
          mdelta1 = trybc(t_sb,  ;
                    t_xb)
          IF mdelta > mdelta1
               pub_jbqj_no = jb_no
               mdelta = mdelta1
               mbctabsel = pub_bctabsel
               mentry = .T.
          ENDIF
     ENDIF
ENDFOR
IF  .NOT. mentry
     mdelta = trybc(t_sb, t_xb)
     mbctabsel = pub_bctabsel
ENDIF
IF mbctabsel > 0
     IF bctablb(mbctabsel) <> '3'  ;
        .AND. sktab(tabptr) -  ;
        1440 > 0 .AND.  ;
        sktab(tabptr) - 1440 <  ;
        delta0 .AND. ret <> - ;
        9999
          ret = 9999
     ELSE
          pub_bctabsel = mbctabsel
          bctabsel = pub_bctabsel
     ENDIF
ENDIF
IF ret <> -9999
     ret = mdelta
ENDIF
RETURN ret
ENDFUNC
**
FUNCTION TryBc
PARAMETER t_sb, t_xb
DO modisk_1440 WITH t_sb, t_xb
t_sb = modisk_1440_sb
t_xb = modisk_1440_xb
pub_bctabsel = 0
pub_delta1 = 9999
pub_delta2 = 9999
pub_flag1 = 0
pub_flag2 = 0
FOR x = 1 TO bctabcnt
     i_sb = bctabsb(x)
     i_xb = bctabxb(x)
     DO CASE
          CASE t_sb >= i_sb .AND.  ;
               t_sb <= i_xb .AND.  ;
               t_xb >= i_sb .AND.  ;
               t_xb <= i_xb .AND.  ;
               ((t_xb <= 1440  ;
               .AND. i_xb <=  ;
               1440) .OR. (t_xb >  ;
               1440 .AND. i_xb >  ;
               1440))
               mx = (t_sb - i_sb) *  ;
                    wtsb2
               my = (i_xb - t_xb) *  ;
                    wtxb2
               mf1 = wtsb2
               mf2 = wtxb2
               imode = 0
          CASE t_sb <= i_sb .AND.  ;
               t_sb <= i_xb .AND.  ;
               t_xb >= i_sb .AND.  ;
               t_xb >= i_xb .AND.  ;
               ((t_xb <= 1440  ;
               .AND. i_xb <=  ;
               1440) .OR. (t_xb >  ;
               1440 .AND. i_xb >  ;
               1440))
               mx = (i_sb - t_sb) *  ;
                    wtsb1
               my = (t_xb - i_xb) *  ;
                    wtxb1
               mf1 = wtsb1
               mf2 = wtxb1
               imode = 1
          CASE t_sb >= i_sb .AND.  ;
               t_sb <= i_xb .AND.  ;
               t_xb >= i_sb .AND.  ;
               t_xb >= i_xb .AND.  ;
               ((t_xb <= 1440  ;
               .AND. i_xb <=  ;
               1440) .OR. (t_xb >  ;
               1440 .AND. i_xb >  ;
               1440))
               mx = (t_sb - i_sb) *  ;
                    wtsb2
               my = (t_xb - i_xb) *  ;
                    wtxb1
               mf1 = wtsb2
               mf2 = wtxb1
               imode = 0
          CASE t_sb <= i_sb .AND.  ;
               t_sb <= i_xb .AND.  ;
               t_xb >= i_sb .AND.  ;
               t_xb <= i_xb .AND.  ;
               ((t_xb <= 1440  ;
               .AND. i_xb <=  ;
               1440) .OR. (t_xb >  ;
               1440 .AND. i_xb >  ;
               1440))
               mx = (i_sb - t_sb) *  ;
                    wtsb1
               my = (i_xb - t_xb) *  ;
                    wtxb2
               mf1 = wtsb1 +  ;
                     wtxb2
               mf2 = wtsb1 +  ;
                     wtxb2
               imode = 0
          CASE t_sb >= i_sb .AND.  ;
               t_sb <= i_xb .AND.  ;
               t_xb >= i_sb .AND.  ;
               t_xb <= i_xb .AND.  ;
               t_xb <= 1440 .AND.  ;
               i_xb > 1440
               mx = (t_sb - i_sb) *  ;
                    wtsb2
               my = (i_xb - t_xb) *  ;
                    wtxb2
               mf1 = wtsb2
               mf2 = wtxb2
               imode = 0
          CASE t_sb < delta0  ;
               .AND. 1440 + t_sb >=  ;
               i_sb .AND. 1440 +  ;
               t_sb <= i_xb .AND.  ;
               1440 + t_xb >=  ;
               i_sb .AND. 1440 +  ;
               t_xb <= i_xb .AND.  ;
               t_xb <= 1440 .AND.  ;
               i_xb > 1440
               mx = (1440 + t_sb -  ;
                    i_sb) *  ;
                    wtsb2
               my = (1440 + i_xb -  ;
                    t_xb) *  ;
                    wtxb2
               mf1 = wtsb2
               mf2 = wtxb2
               imode = 0
          CASE t_sb <= i_sb .AND.  ;
               t_sb <= i_xb .AND.  ;
               t_xb >= i_sb .AND.  ;
               t_xb <= i_xb .AND.  ;
               t_xb <= 1440 .AND.  ;
               i_xb > 1440
               mx = (i_sb - t_sb) *  ;
                    wtsb1
               my = (i_xb - t_xb) *  ;
                    wtxb2
               mf1 = wtsb1
               mf2 = wtxb2
               imode = 0
          CASE t_sb < delta0  ;
               .AND. 1440 + t_sb >=  ;
               i_sb .AND. 1440 +  ;
               t_sb <= i_xb .AND.  ;
               1440 + t_xb >=  ;
               i_sb .AND. 1440 +  ;
               t_xb >= i_xb .AND.  ;
               t_xb <= 1440 .AND.  ;
               i_xb > 1440
               mx = (1440 + t_sb -  ;
                    i_sb) *  ;
                    wtsb2
               my = (1440 + t_xb -  ;
                    i_xb) *  ;
                    wtxb1
               mf1 = wtsb2
               mf2 = wtxb1
               imode = 0
          CASE t_sb <= i_sb .AND.  ;
               t_sb <= i_xb .AND.  ;
               t_xb >= i_sb .AND.  ;
               t_xb >= i_xb .AND.  ;
               t_xb > 1440 .AND.  ;
               i_xb <= 1440
               mx = (i_sb - t_sb) *  ;
                    wtsb1
               my = (t_xb - i_xb) *  ;
                    wtxb1
               mf1 = wtsb1
               mf2 = wtxb1
               imode = 2
          CASE t_sb <= 1440 +  ;
               i_sb .AND. t_sb <=  ;
               1440 + i_xb .AND.  ;
               t_xb >= 1440 +  ;
               i_sb .AND. t_xb >=  ;
               1440 + i_xb .AND.  ;
               t_xb > 1440 .AND.  ;
               i_xb <= 1440
               mx = (1440 + i_sb -  ;
                    t_sb) *  ;
                    wtsb1
               my = (t_xb - i_xb -  ;
                    1440) *  ;
                    wtxb1
               mf1 = wtsb1
               mf2 = wtxb1
               imode = 3
          CASE t_sb >= i_sb .AND.  ;
               t_sb <= i_xb .AND.  ;
               t_xb >= i_sb .AND.  ;
               t_xb >= i_xb .AND.  ;
               t_xb > 1440 .AND.  ;
               i_xb <= 1440
               mx = (t_sb - i_sb) *  ;
                    wtsb2
               my = (t_xb - i_xb) *  ;
                    wtxb1
               mf1 = wtsb2
               mf2 = wtxb1
               imode = 0
          CASE t_sb <= 1440 +  ;
               i_sb .AND. t_sb <=  ;
               1440 + i_xb .AND.  ;
               t_xb >= 1440 +  ;
               i_sb .AND. t_xb <=  ;
               1440 + i_xb .AND.  ;
               t_xb > 1440 .AND.  ;
               i_xb <= 1440
               mx = (1440 + i_sb -  ;
                    t_sb) *  ;
                    wtsb1
               my = (1440 + i_xb -  ;
                    t_xb) *  ;
                    wtxb2
               mf1 = wtsb1
               mf2 = wtxb2
               imode = 0
          OTHERWISE
               mx = 9999
               my = 9999
               mf1 = 0
               mf2 = 0
               imode = 0
     ENDCASE
     IF mx + my < pub_delta1 +  ;
        pub_delta2
          pub_delta1 = mx
          pub_delta2 = my
          pub_flag1 = mf1
          pub_flag2 = mf2
          pub_bctabsel = x
     ENDIF
ENDFOR
IF pub_delta1 < pub_flag1 *  ;
   delta4 .AND. pub_delta2 <  ;
   pub_flag2 * delta4
     iret = pub_delta1 +  ;
            pub_delta2
ELSE
     iret = 9999
ENDIF
RETURN iret
ENDFUNC
**
PROCEDURE SetMark
k = IIF(itwo > 0, itwo,  ;
    IIF(ithree > 0, ithree, 0))
i = 0
FOR j = 1 TO sktabcnt
     IF bztab(j) = 1
          i = i + 1
     ENDIF
     IF k > 0 .AND. j >= k .AND.  ;
        MOD(i, 2) = 0
          EXIT
     ENDIF
ENDFOR
IF j > sktabcnt
     j = j - 1
ENDIF
IF j > 0 .AND. bztab(j) <> 1  ;
   .AND. j >= k .AND. k > 0
     j = j - 1
ENDIF
mdays = 0
SELECT ardata_
GOTO recptr
FOR i = 1 TO j
     REPLACE mark WITH  ;
             IIF(bztab(i) = 9, 3,  ;
             bztab(i))
     IF bztab(i) < 3 .AND.  ;
        EMPTY(donedate)
          REPLACE donedate WITH  ;
                  DTOC(mdate)
     ENDIF
     mmdate = CTOD(riqi)
     mmrec = RECNO()
     mmmark = mark
     mdays = CTOD(riqi) - mdate
     SKIP
ENDFOR
IF  .NOT. EOF()
     SKIP
ENDIF
IF  .NOT. EOF()
     IF j > 0 .AND. mmdate >  ;
        mdate .AND. mmdate <  ;
        CTOD(riqi) .AND. mmmark =  ;
        3
          GOTO mmrec
     ELSE
          SKIP -1
     ENDIF
ELSE
     GOTO BOTTOM
     IF  .NOT. EOF() .AND. mzgbh =  ;
         zgbh .AND. mdate + mdays =  ;
         CTOD(riqi) .AND. mark >  ;
         0
          SKIP
     ENDIF
ENDIF
IF  .NOT. EOF()
     recptr = RECNO()
     IF mzgbh <> zgbh
          mdate = CTOD(riqi) - 1
     ELSE
          mdate = IIF(CTOD(riqi) >  ;
                  mdate + 1 .AND.  ;
                  shijian <  ;
                  delta0,  ;
                  CTOD(riqi) - 1,  ;
                  CTOD(riqi))
     ENDIF
     mzgbh = zgbh
ENDIF
RETURN
ENDPROC
**
PROCEDURE SaveCl1
DO modibc
SELECT clfx
INDEX ON zgbh + riqi + bc TO CLFX  ;
      FOR LEN(TRIM(bc)) = 3 .OR.  ;
      EMPTY(bc)
GOTO TOP
DO WHILE  .NOT. EOF()
     obj_form4.txt_msg1.value = zgbh +  ;
                                ' ' +  ;
                                riqi
     IF EMPTY(bc)
          SKIP
          LOOP
     ENDIF
     mzgbh = zgbh
     mdate = CTOD(riqi)
     mbc = bc
     cnt = 0
     mcqss = 0
     mcqss1 = 0
     rec = RECNO()
     SELECT time
     SEEK LEFT(mbc, 2) 
     v_scq = 0
     DO WHILE  .NOT. EOF() .AND.  ;
        LEFT(mbc, 2)=LEFT(bc, 2)
          IF cnt >= bctabbou
               WAIT WINDOW  ;
                    "错误: 分段班次太多!"
               RETURN
          ENDIF
          cnt = cnt + 1
          clbc(cnt) = bc
          dlb(cnt) = lb
          dsb(cnt) = sbsj
          dxb(cnt) = xbsj
          dxx(cnt) = zjxx
          dss(cnt) = ss
          v_scq = v_scq + (xbsj -  ;
                  sbsj)
          dmark(cnt) = 0
          SKIP
     ENDDO
     SELECT clfx
     IF LEN(TRIM(mbc)) = 3
          SKIP
          i = 2
          DO WHILE  .NOT. EOF()  ;
             .AND. mzgbh=zgbh  ;
             .AND. mdate= ;
             CTOD(riqi) .AND. i<= ;
             cnt
               IF LEFT(mbc, 2) <>  ;
                  LEFT(bc, 2)
                    REPLACE bc  ;
                            WITH  ;
                            clbc(i),  ;
                            lb  ;
                            WITH  ;
                            dlb(i)
                    REPLACE sbsj  ;
                            WITH  ;
                            dsb(i),  ;
                            xbsj  ;
                            WITH  ;
                            dxb(i),  ;
                            zdcl  ;
                            WITH  ;
                            98
                    REPLACE cdss  ;
                            WITH  ;
                            0,  ;
                            ztss  ;
                            WITH  ;
                            0
                    mcd = sbsk -  ;
                          sbsj
                    IF mcd >  ;
                       sjcd1
                         REPLACE cdss  ;
                                 WITH  ;
                                 IIF(sjcd2 >  ;
                                 1,  ;
                                 sjcd2 *  ;
                                 (INT(mcd /  ;
                                 sjcd2) +  ;
                                 1),  ;
                                 mcd)
                         REPLACE zdcl  ;
                                 WITH  ;
                                 80
                    ENDIF
                    mzt = xbsj -  ;
                          xbsk
                    IF mzt >  ;
                       sjzt1
                         REPLACE ztss  ;
                                 WITH  ;
                                 IIF(sjzt2 >  ;
                                 1,  ;
                                 sjzt2 *  ;
                                 (INT(mzt /  ;
                                 sjzt2) +  ;
                                 1),  ;
                                 mzt)
                         REPLACE zdcl  ;
                                 WITH  ;
                                 IIF(zdcl =  ;
                                 80,  ;
                                 82,  ;
                                 81)
                    ENDIF
                    IF cdss >=  ;
                       sjcd3 .OR.  ;
                       ztss >=  ;
                       sjzt3
                         REPLACE zdcl  ;
                                 WITH  ;
                                 85
                         REPLACE kgss  ;
                                 WITH  ;
                                 dss(i)
                         REPLACE cdss  ;
                                 WITH  ;
                                 0,  ;
                                 ztss  ;
                                 WITH  ;
                                 0
                    ELSE
                         REPLACE cqss  ;
                                 WITH  ;
                                 dss(i)
                    ENDIF
               ENDIF
               SKIP
               i = i + 1
          ENDDO
     ENDIF
     GOTO rec
     DO WHILE  .NOT. EOF() .AND.  ;
        mzgbh=zgbh .AND. mdate= ;
        CTOD(riqi)
          IF  .NOT. EMPTY(bc)
               mcqss = mcqss +  ;
                       IIF(cqss >  ;
                       0, cqss,  ;
                       xbsk -  ;
                       sbsk)
               DO setdmark
          ENDIF
          SKIP
     ENDDO
     IF mcqss < v_scq
          SELECT clfx
          FOR i = 1 TO cnt
               IF dmark(i) = 0
                    APPEND BLANK
                    REPLACE zgbh  ;
                            WITH  ;
                            mzgbh,  ;
                            riqi  ;
                            WITH  ;
                            DTOC(mdate)
                    REPLACE bc  ;
                            WITH  ;
                            clbc(i),  ;
                            lb  ;
                            WITH  ;
                            dlb(i),  ;
                            zdcl  ;
                            WITH  ;
                            85
                    REPLACE kgss  ;
                            WITH  ;
                            dss(i)
                    REPLACE sbsj  ;
                            WITH  ;
                            dsb(i),  ;
                            xbsj  ;
                            WITH  ;
                            dxb(i)
               ENDIF
          ENDFOR
          GOTO rec
          DO WHILE  .NOT. EOF()  ;
             .AND. mzgbh=zgbh  ;
             .AND. mdate= ;
             CTOD(riqi)
               SKIP
          ENDDO
     ELSE
          SELECT clfx
          FOR i = 1 TO cnt
               IF dmark(i) = 0
                    APPEND BLANK
                    REPLACE zgbh  ;
                            WITH  ;
                            mzgbh,  ;
                            riqi  ;
                            WITH  ;
                            DTOC(mdate)
                    REPLACE bc  ;
                            WITH  ;
                            clbc(i),  ;
                            lb  ;
                            WITH  ;
                            dlb(i),  ;
                            zdcl  ;
                            WITH  ;
                            98
                    REPLACE cqss  ;
                            WITH  ;
                            dss(i)
                    REPLACE sbsj  ;
                            WITH  ;
                            dsb(i),  ;
                            xbsj  ;
                            WITH  ;
                            dxb(i)
               ENDIF
          ENDFOR
          GOTO rec
          DO WHILE  .NOT. EOF()  ;
             .AND. mzgbh=zgbh  ;
             .AND. mdate= ;
             CTOD(riqi)
               SKIP
          ENDDO
     ENDIF
ENDDO
RETURN
ENDPROC
**
PROCEDURE SaveCl2
SELECT clfx
INDEX ON zgbh + riqi +  ;
      STR(IIF(sbsk > 0, sbsk,  ;
      xbsk), 4) TO CLFX
SELECT ardata_
SET RELATION TO zgbh INTO zg
GOTO TOP
mzg = ''
DO WHILE  .NOT. EOF()
     IF CTOD(riqi) <  ;
        pub_kaishiriqi
          SKIP
          LOOP
     ENDIF
     obj_form4.txt_msg1.value = zgbh +  ;
                                ' ' +  ;
                                riqi
     DO CASE
          CASE mark = 3
               mzgbh = zgbh
               mdate = CTOD(riqi)
               SELECT clfx
               SEEK mzgbh +  ;
                    DTOC(mdate) 
               IF FOUND() .AND.   ;
                  .NOT. EMPTY(bc)  ;
                  .AND. zdcl <>  ;
                  98 .AND. rgcl =  ;
                  0 .AND. (sbsk =  ;
                  0 .OR. xbsk =  ;
                  0)
                    sw = .F.
                    DO WHILE   ;
                       .NOT.  ;
                       EOF()  ;
                       .AND. zgbh= ;
                       mzgbh  ;
                       .AND. riqi= ;
                       DTOC(mdate)
                         IF zdcl =  ;
                            85
                              DO CASE
                                   CASE sbsk = 0
                                        REPLACE sbsk WITH ardata_.shijian
                                        REPLACE zdcl WITH 73
                                   CASE xbsk = 0
                                        REPLACE xbsk WITH ardata_.shijian
                                        REPLACE zdcl WITH 73
                              ENDCASE
                              sw =  ;
                               .T.
                         ENDIF
                         SKIP
                    ENDDO
                    IF  .NOT. sw
                         SKIP -1
                         SELECT ardata_
                         mtime1 =  ;
                          shijian
                         DO WHILE   ;
                            .NOT.  ;
                            EOF()  ;
                            .AND.  ;
                            zgbh= ;
                            mzgbh  ;
                            .AND.  ;
                            riqi= ;
                            DTOC(mdate)
                              SKIP
                         ENDDO
                         SKIP -1
                         mtime2 =  ;
                          shijian
                         SELECT clfx
                         IF ardata_.shijian -  ;
                            xbsj >  ;
                            0
                              REPLACE  ;
                               xbsk  ;
                               WITH  ;
                               ardata_.shijian
                              mzt =  ;
                               xbsj -  ;
                               xbsk
                              IF mzt >  ;
                                 sjzt1
                                   REPLACE ztss WITH IIF(sjzt2 > 1, sjzt2 * (INT(mzt / sjzt2) + 1), mzt)
                                   REPLACE zdcl WITH IIF(zdcl = 80, 82, 81)
                              ELSE
                                   v_1 = zdcl
                                   IF v_1 = 82
                                        v_1 = 80
                                   ELSE
                                        IF v_1 = 81
                                             v_1 = 98
                                        ENDIF
                                   ENDIF
                                   REPLACE ztss WITH 0, zdcl WITH v_1
                              ENDIF
                         ELSE
                              APPEND  ;
                               BLANK
                              REPLACE  ;
                               zgbh  ;
                               WITH  ;
                               ardata_.zgbh,  ;
                               riqi  ;
                               WITH  ;
                               ardata_.riqi
                              REPLACE  ;
                               zdcl  ;
                               WITH  ;
                               72,  ;
                               xbsk  ;
                               WITH  ;
                               ardata_.shijian,  ;
                               bc  ;
                               WITH  ;
                               ""
                              IF ardata_.shijian <  ;
                                 delta0
                                   REPLACE riqi WITH DTOC(CTOD(ardata_.riqi) - 1)
                              ENDIF
                         ENDIF
                    ENDIF
               ELSE
                    IF mzg <>  ;
                       ardata_.zgbh
                         mzg = ardata_.zgbh
                         = getbctab()
                         SELECT clfx
                    ENDIF
                    APPEND BLANK
                    REPLACE zgbh  ;
                            WITH  ;
                            ardata_.zgbh,  ;
                            riqi  ;
                            WITH  ;
                            ardata_.riqi,  ;
                            bc  ;
                            WITH  ;
                            ""
                    b = ''
                    IF chksbxb(ardata_.shijian,  ;
                       b) = 0
                         REPLACE zdcl  ;
                                 WITH  ;
                                 71,  ;
                                 sbsk  ;
                                 WITH  ;
                                 ardata_.shijian
                    ELSE
                         REPLACE zdcl  ;
                                 WITH  ;
                                 72,  ;
                                 xbsk  ;
                                 WITH  ;
                                 ardata_.shijian
                         IF ardata_.shijian <  ;
                            delta0
                              REPLACE  ;
                               riqi  ;
                               WITH  ;
                               DTOC(CTOD(ardata_.riqi) -  ;
                               1)
                         ENDIF
                    ENDIF
               ENDIF
     ENDCASE
     SELECT ardata_
     SKIP
ENDDO
SELECT clfx
SET RELATION TO zgbh INTO zg
GOTO TOP
mzgbh = zgbh
mdate = CTOD(riqi)
rec = -1
t1 = -1
t2 = -1
mtogether = 0
DO WHILE  .NOT. EOF()
     obj_form4.txt_msg1.value = zgbh +  ;
                                ' ' +  ;
                                riqi
     IF mzgbh <> zgbh .OR. mdate <>  ;
        CTOD(riqi)
          IF t2 >= 0 .AND.  ;
             mtogether > 0
               GOTO rec
               REPLACE sbsk WITH  ;
                       t1, xbsk  ;
                       WITH t2,  ;
                       zdcl WITH  ;
                       73
               SKIP
               DO WHILE  .NOT.  ;
                  EOF() .AND.  ;
                  mzgbh=zgbh  ;
                  .AND. mdate= ;
                  CTOD(riqi)
                    IF EMPTY(bc)
                         DELETE
                    ENDIF
                    SKIP
               ENDDO
          ENDIF
          t1 = -1
          t2 = -1
          mtogether = 0
          rec = RECNO()
          mzgbh = zgbh
          mdate = CTOD(riqi)
     ENDIF
     IF zdcl = 71 .OR. zdcl = 72
          IF mtogether = 0
               t1 = IIF(zdcl = 71,  ;
                    sbsk, xbsk)
               rec = RECNO()
          ELSE
               t2 = IIF(zdcl = 71,  ;
                    sbsk, xbsk)
          ENDIF
          mtogether = mtogether +  ;
                      1
     ELSE
          IF mtogether < 2
               t1 = -1
               t2 = -1
               mtogether = 0
               rec = RECNO()
          ENDIF
     ENDIF
     IF (zg.mk = '1' .OR. zg.mk =  ;
        '4' .OR. zg.mk = '5' .OR.  ;
        zg.mk = '7') .AND. (zdcl <  ;
        71 .OR. zdcl > 73) .AND.  ;
        zdcl <> 0
          REPLACE cdss WITH 0,  ;
                  ztss WITH 0,  ;
                  kgss WITH 0,  ;
                  jbss WITH 0
          REPLACE cqss WITH xbsk -  ;
                  sbsk, zdcl WITH  ;
                  98
     ENDIF
     SKIP
ENDDO
IF t2 >= 0 .AND. EOF() .AND.  ;
   mtogether > 0
     GOTO rec
     REPLACE sbsk WITH t1, xbsk  ;
             WITH t2, zdcl WITH  ;
             73
     SKIP
     DO WHILE  .NOT. EOF() .AND.  ;
        mzgbh=zgbh .AND. mdate= ;
        CTOD(riqi)
          IF EMPTY(bc)
               DELETE
          ENDIF
          SKIP
     ENDDO
     GOTO rec
     IF (zg.mk = '1' .OR. zg.mk =  ;
        '4' .OR. zg.mk = '5' .OR.  ;
        zg.mk = '7') .AND. (zdcl <  ;
        71 .OR. zdcl > 73) .AND.  ;
        zdcl <> 0
          REPLACE cdss WITH 0,  ;
                  ztss WITH 0,  ;
                  kgss WITH 0,  ;
                  jbss WITH 0
          REPLACE cqss WITH xbsk -  ;
                  sbsk, zdcl WITH  ;
                  98
     ENDIF
ENDIF
SELECT clfx
GOTO TOP
DO WHILE  .NOT. EOF()
     obj_form4.txt_msg1.value = zgbh +  ;
                                ' ' +  ;
                                riqi
     IF sbsk > 0 .AND. xbsk > 0
          SKIP
          LOOP
     ENDIF
     mzgbh = zgbh
     mdate = CTOD(riqi)
     SKIP
     IF  .NOT. EOF() .AND. sbsk >  ;
         0 .AND. xbsk > 0
          SKIP
          LOOP
     ENDIF
     IF  .NOT. EOF() .AND. mdate <>  ;
         CTOD(riqi) - 1 .OR. sbsk >  ;
         delta0 .OR. xbsk >  ;
         delta0
          SKIP
          LOOP
     ENDIF
     msk2 = IIF(sbsk > 0, sbsk,  ;
            xbsk)
     SKIP -1
     IF xbsk > 0
          REPLACE sbsk WITH xbsk
     ENDIF
     REPLACE xbsk WITH msk2, zdcl  ;
             WITH 0
     IF  .NOT. EOF()
          SKIP
     ENDIF
     DELETE
     IF  .NOT. EOF()
          SKIP
     ENDIF
ENDDO
SELECT clfx
mzgbh = ""
mdate = CTOD("")
mzdcl = 0
mbc = ""
SCAN
     obj_form4.txt_msg1.value = zgbh +  ;
                                ' ' +  ;
                                riqi
     DO CASE
          CASE zdcl >= 92 .AND.  ;
               zdcl <= 94
          CASE zdcl >= 71 .AND.  ;
               zdcl <= 73 .AND.  ;
               ((sbsk > 0 .AND.  ;
               xbsk = 0) .OR.  ;
               (sbsk = 0 .AND.  ;
               xbsk > 0))
          CASE mzdcl = 85
               IF zdcl = 98 .AND.  ;
                  zgbh = mzgbh  ;
                  .AND.  ;
                  CTOD(riqi) =  ;
                  mdate
                    SKIP -1
                    REPLACE zdcl  ;
                            WITH  ;
                            0,  ;
                            kgss  ;
                            WITH  ;
                            0,  ;
                            kgts  ;
                            WITH  ;
                            0
                    SKIP
               ENDIF
          CASE zdcl = 85
               IF mzdcl = 98  ;
                  .AND. zgbh =  ;
                  mzgbh .AND.  ;
                  CTOD(riqi) =  ;
                  mdate
                    REPLACE zdcl  ;
                            WITH  ;
                            0,  ;
                            kgss  ;
                            WITH  ;
                            0,  ;
                            kgts  ;
                            WITH  ;
                            0
               ENDIF
     ENDCASE
     mzgbh = zgbh
     mdate = CTOD(riqi)
     mzdcl = zdcl
     mbc = bc
ENDSCAN
SELECT clfx
SET RELATION TO lb INTO bctype
SCAN
     obj_form4.txt_msg1.value = zgbh +  ;
                                ' ' +  ;
                                riqi
     IF  .NOT. EMPTY(lb) .AND.  ;
         bctype.day2th = "1"
          REPLACE riqi WITH  ;
                  DTOC(CTOD(riqi) +  ;
                  1)
     ENDIF
ENDSCAN
RETURN
ENDPROC
**
PROCEDURE SetDMark
FOR i = 1 TO cnt
     IF bc = clbc(i)
          dmark(i) = 1
          EXIT
     ENDIF
ENDFOR
RETURN
ENDPROC
**
PROCEDURE ModiBC
DIMENSION sc_rec(3), sc_bc(3),  ;
          sc_sb(3), sc_xb(3),  ;
          sc_bc1(3), sc_bc2(3)
SELECT clfx
INDEX ON zgbh + riqi TO CLFX
GOTO TOP
DO WHILE  .NOT. EOF()
     obj_form4.txt_msg1.value = zgbh +  ;
                                ' ' +  ;
                                riqi
     mzgbh = zgbh
     mdate = CTOD(riqi)
     mbc = bc
     cnt = 0
     sw = .F.
     sw1 = .F.
     rec = RECNO()
     DO WHILE  .NOT. EOF() .AND.  ;
        mzgbh=zgbh .AND. mdate= ;
        CTOD(riqi) .AND. cnt<3
          cnt = cnt + 1
          IF LEFT(mbc, 2) <>  ;
             LEFT(bc, 2)
               sw = .T.
          ENDIF
          IF LEN(ALLTRIM(bc)) = 3
               sw1 = .T.
          ENDIF
          sc_rec(cnt) = RECNO()
          sc_bc(cnt) = bc
          sc_sb(cnt) = sbsk
          sc_xb(cnt) = xbsk
          SKIP
     ENDDO
     IF  .NOT. sw .OR.  .NOT. sw1
          LOOP
     ENDIF
     sc_dt1 = 999999
     FOR i = 1 TO cnt
          SELECT time
          SEEK LEFT(sc_bc(i), 2) 
          k = 0
          DO WHILE  .NOT. EOF()  ;
             .AND. LEFT(sc_bc(i),  ;
             2)=LEFT(bc, 2) .AND.  ;
             k<=bctabbou
               k = k + 1
               clbc(k) = bc
               dsb(k) = sbsj
               dxb(k) = xbsj
               SKIP
          ENDDO
          sc_dt2 = 0
          FOR j = 1 TO cnt
               IF LEFT(sc_bc(j),  ;
                  2) =  ;
                  LEFT(sc_bc(i),  ;
                  2) .OR. k < 1
                    sc_bc2(j) =  ;
                          ""
               ELSE
                    p = 1
                    dk_sb = IIF(sc_sb(j) >  ;
                            dsb(p),  ;
                            (sc_sb(j) -  ;
                            dsb(p)) *  ;
                            wtsb2,  ;
                            (sc_sb(j) -  ;
                            dsb(p)) *  ;
                            wtsb1)
                    dk_xb = IIF(sc_xb(j) >  ;
                            dxb(p),  ;
                            (sc_xb(j) -  ;
                            dxb(p)) *  ;
                            wtxb1,  ;
                            (sc_xb(j) -  ;
                            dxb(p)) *  ;
                            wtxb2)
                    dt = dk_sb +  ;
                         dk_xb
                    sc_bc2(j) =  ;
                          clbc(p)
                    FOR p = 2 TO  ;
                        k
                         dk_sb = IIF(sc_sb(j) >  ;
                                 dsb(p),  ;
                                 (sc_sb(j) -  ;
                                 dsb(p)) *  ;
                                 wtsb2,  ;
                                 (dsb(p) -  ;
                                 sc_sb(j)) *  ;
                                 wtsb1)
                         dk_xb = IIF(sc_xb(j) >  ;
                                 dxb(p),  ;
                                 (sc_xb(j) -  ;
                                 dxb(p)) *  ;
                                 wtxb1,  ;
                                 (dxb(p) -  ;
                                 sc_xb(j)) *  ;
                                 wtxb2)
                         IF dt >  ;
                            dk_sb +  ;
                            dk_xb
                              dt =  ;
                               dk_sb +  ;
                               dk_xb
                              sc_bc2(j) =  ;
                               clbc(p)
                         ENDIF
                    ENDFOR
                    sc_dt2 = sc_dt2 +  ;
                             dt
               ENDIF
          ENDFOR
          IF sc_dt1 > sc_dt2  ;
             .AND. sc_dt2 > 0
               sc_dt1 = sc_dt2
               FOR j = 1 TO cnt
                    sc_bc1(j) =  ;
                          sc_bc2(j)
               ENDFOR
          ENDIF
     ENDFOR
     IF sc_dt1 < 999999
          FOR i = 1 TO cnt
               IF  .NOT.  ;
                   EMPTY(sc_bc1(i))  ;
                   .AND.  ;
                   sc_bc1(i) <>  ;
                   sc_bc(i)
                    SELECT clfx
                    GOTO sc_rec(i)
                    SELECT time
                    SEEK sc_bc1(i) 
                    IF  .NOT.  ;
                        EOF()
                         m = IIF(xbsj <  ;
                             sbsj,  ;
                             1440 +  ;
                             xbsj,  ;
                             xbsj)
                         REPLACE clfx.bc  ;
                                 WITH  ;
                                 bc,  ;
                                 clfx.lb  ;
                                 WITH  ;
                                 lb,  ;
                                 clfx.sbsj  ;
                                 WITH  ;
                                 sbsj,  ;
                                 clfx.xbsj  ;
                                 WITH  ;
                                 m,  ;
                                 clfx.zdcl  ;
                                 WITH  ;
                                 98
                         mcd = clfx.sbsk -  ;
                               sbsj
                         IF mcd >  ;
                            sjcd1
                              REPLACE  ;
                               clfx.cdss  ;
                               WITH  ;
                               IIF(sjcd2 >  ;
                               1,  ;
                               sjcd2 *  ;
                               (INT(mcd /  ;
                               sjcd2) +  ;
                               1),  ;
                               mcd),  ;
                               clfx.zdcl  ;
                               WITH  ;
                               80
                         ENDIF
                         mzt = m -  ;
                               clfx.xbsk
                         IF mzt >  ;
                            sjzt1
                              REPLACE  ;
                               clfx.ztss  ;
                               WITH  ;
                               IIF(sjzt2 >  ;
                               1,  ;
                               sjzt2 *  ;
                               (INT(mzt /  ;
                               sjzt2) +  ;
                               1),  ;
                               mzt),  ;
                               clfx.zdcl  ;
                               WITH  ;
                               IIF(clfx.zdcl =  ;
                               80,  ;
                               82,  ;
                               81)
                         ENDIF
                         IF clfx.cdss >=  ;
                            sjcd3  ;
                            .OR.  ;
                            clfx.ztss >=  ;
                            sjzt3
                              REPLACE  ;
                               clfx.kgss  ;
                               WITH  ;
                               ss,  ;
                               clfx.zdcl  ;
                               WITH  ;
                               85
                              REPLACE  ;
                               clfx.cdss  ;
                               WITH  ;
                               0,  ;
                               clfx.ztss  ;
                               WITH  ;
                               0
                         ELSE
                              REPLACE  ;
                               clfx.cqss  ;
                               WITH  ;
                               ss
                         ENDIF
                    ENDIF
               ENDIF
          ENDFOR
          SELECT clfx
          SKIP
     ENDIF
     SELECT clfx
ENDDO
RETURN
ENDPROC
**
PROCEDURE PreProcess
IF pub_language
     obj_form4.txt_msg.value = "Be preprocessing the datas..."
ELSE
     obj_form4.txt_msg.value = "正在预处理刷卡数据..."
ENDIF
SELECT ardata_
INDEX ON zgbh + riqi +  ;
      STR(shijian, 4) TAG zrs_d  ;
      DESCENDING ADDITIVE
SET ORDER TO zrs_d
GOTO TOP
mz = zgbh
md = CTOD(riqi)
mt = shijian
SKIP
DO WHILE  .NOT. EOF()
     IF mz <> zgbh .OR. md <>  ;
        CTOD(riqi) .OR. ABS(mt -  ;
        shijian) > sjcfsj
          IF mz = zgbh .AND. md =  ;
             CTOD(riqi) + 1 .AND.  ;
             ABS(shijian - 1440 -  ;
             mt) <= sjcfsj
               sqlexe_run(00000002319,  ;
                         SYS(16),  ;
                         "DELETE FROM KQ_ARDATA WHERE ID=?ID",  ;
                         "")
               DELETE
          ELSE
               mz = zgbh
               md = CTOD(riqi)
               mt = shijian
          ENDIF
     ELSE
          sqlexe_run(00000002327,  ;
                    SYS(16),  ;
                    "DELETE FROM KQ_ARDATA WHERE ID=?ID",  ;
                    "")
          DELETE
     ENDIF
     SKIP
ENDDO
SET ORDER TO zrs_a
SELECT xjjl_d
SET FILTER TO kqlb = 75;
.OR. kqlb = 76;
.OR. kqlb = 41;
.OR. (kqlb = 98;
.AND. kssj > 0;
.AND. jssj > 0);
.OR. (kqlb >= 93;
.AND. kqlb <= 94;
.AND. kssj > 0)
GOTO TOP
SCAN
     SELECT ardata_
     DO CASE
          CASE xjjl_d.kqlb = 98
               mflag = 0
               SET EXACT OFF
               SEEK xjjl_d.zgbh +  ;
                    xjjl_d.riqi 
               SET EXACT ON
               IF  .NOT. EOF()
                    mflag = chk_dupaddrecord()
               ENDIF
               IF mflag = 10 .OR.  ;
                  mflag = 11
                    APPEND BLANK
                    REPLACE zgbh  ;
                            WITH  ;
                            xjjl_d.zgbh,  ;
                            riqi  ;
                            WITH  ;
                            xjjl_d.riqi,  ;
                            shijian  ;
                            WITH  ;
                            xjjl_d.kssj,  ;
                            addedflag  ;
                            WITH  ;
                            1
               ENDIF
               IF mflag = 1 .OR.  ;
                  mflag = 11
                    APPEND BLANK
                    REPLACE zgbh  ;
                            WITH  ;
                            xjjl_d.zgbh,  ;
                            riqi  ;
                            WITH  ;
                            IIF(xjjl_d.jssj <  ;
                            xjjl_d.kssj,  ;
                            DTOC(CTOD(xjjl_d.riqi) +  ;
                            1),  ;
                            xjjl_d.riqi)
                    REPLACE shijian  ;
                            WITH  ;
                            xjjl_d.jssj,  ;
                            addedflag  ;
                            WITH  ;
                            1
               ENDIF
               IF mflag > 0 .AND.  ;
                  mflag < 99
                    REPLACE xjjl_d.mark  ;
                            WITH  ;
                            1
               ENDIF
          CASE xjjl_d.kqlb >= 93  ;
               .AND. xjjl_d.kqlb <=  ;
               94
               mflag = 0
               SET EXACT OFF
               SEEK xjjl_d.zgbh +  ;
                    xjjl_d.riqi 
               SET EXACT ON
               IF  .NOT. EOF()
                    mflag = chk_dupaddrecord()
               ENDIF
               IF mflag = 10 .OR.  ;
                  mflag = 11
                    APPEND BLANK
                    REPLACE zgbh  ;
                            WITH  ;
                            xjjl_d.zgbh,  ;
                            riqi  ;
                            WITH  ;
                            xjjl_d.riqi,  ;
                            shijian  ;
                            WITH  ;
                            xjjl_d.kssj,  ;
                            addedflag  ;
                            WITH  ;
                            1
               ENDIF
               IF mflag = 1 .OR.  ;
                  mflag = 11
                    APPEND BLANK
                    REPLACE zgbh  ;
                            WITH  ;
                            xjjl_d.zgbh,  ;
                            riqi  ;
                            WITH  ;
                            IIF(xjjl_d.jssj <  ;
                            xjjl_d.kssj,  ;
                            DTOC(CTOD(xjjl_d.riqi) +  ;
                            1),  ;
                            xjjl_d.riqi)
                    REPLACE shijian  ;
                            WITH  ;
                            xjjl_d.jssj,  ;
                            addedflag  ;
                            WITH  ;
                            1
               ENDIF
          CASE xjjl_d.kqlb = 75
               REPLACE xjjl_d.mark  ;
                       WITH 1
               APPEND BLANK
               IF xjjl_d.kssj >  ;
                  1440
                    REPLACE zgbh  ;
                            WITH  ;
                            xjjl_d.zgbh,  ;
                            riqi  ;
                            WITH  ;
                            DTOC(CTOD(xjjl_d.riqi) +  ;
                            1),  ;
                            shijian  ;
                            WITH  ;
                            xjjl_d.kssj -  ;
                            1440
               ELSE
                    REPLACE zgbh  ;
                            WITH  ;
                            xjjl_d.zgbh,  ;
                            riqi  ;
                            WITH  ;
                            xjjl_d.riqi,  ;
                            shijian  ;
                            WITH  ;
                            xjjl_d.kssj
               ENDIF
               APPEND BLANK
               IF xjjl_d.jssj <  ;
                  xjjl_d.kssj
                    REPLACE zgbh  ;
                            WITH  ;
                            xjjl_d.zgbh,  ;
                            riqi  ;
                            WITH  ;
                            DTOC(CTOD(xjjl_d.riqi) +  ;
                            1),  ;
                            shijian  ;
                            WITH  ;
                            xjjl_d.jssj
               ELSE
                    IF xjjl_d.jssj >  ;
                       1440
                         REPLACE zgbh  ;
                                 WITH  ;
                                 xjjl_d.zgbh,  ;
                                 riqi  ;
                                 WITH  ;
                                 DTOC(CTOD(xjjl_d.riqi) +  ;
                                 1),  ;
                                 shijian  ;
                                 WITH  ;
                                 xjjl_d.jssj -  ;
                                 1440
                    ELSE
                         REPLACE zgbh  ;
                                 WITH  ;
                                 xjjl_d.zgbh,  ;
                                 riqi  ;
                                 WITH  ;
                                 xjjl_d.riqi,  ;
                                 shijian  ;
                                 WITH  ;
                                 xjjl_d.jssj
                    ENDIF
               ENDIF
          CASE xjjl_d.kqlb = 76
               REPLACE xjjl_d.mark  ;
                       WITH 1
               APPEND BLANK
               IF xjjl_d.kssj >  ;
                  1440
                    REPLACE zgbh  ;
                            WITH  ;
                            xjjl_d.zgbh,  ;
                            riqi  ;
                            WITH  ;
                            DTOC(CTOD(xjjl_d.riqi) +  ;
                            1),  ;
                            shijian  ;
                            WITH  ;
                            xjjl_d.kssj -  ;
                            1440
               ELSE
                    REPLACE zgbh  ;
                            WITH  ;
                            xjjl_d.zgbh,  ;
                            riqi  ;
                            WITH  ;
                            xjjl_d.riqi,  ;
                            shijian  ;
                            WITH  ;
                            xjjl_d.kssj
               ENDIF
          CASE xjjl_d.kqlb = 41
               REPLACE xjjl_d.mark  ;
                       WITH 1
               SET EXACT OFF
               SEEK xjjl_d.zgbh +  ;
                    xjjl_d.riqi 
               SET EXACT ON
               mkssj = xjjl_d.kssj
               mjssj = IIF(xjjl_d.kssj >  ;
                       xjjl_d.jssj,  ;
                       1440 +  ;
                       xjjl_d.jssj,  ;
                       xjjl_d.jssj)
               DO WHILE  .NOT.  ;
                  EOF() .AND.  ;
                  xjjl_d.zgbh= ;
                  zgbh .AND.  ;
                  xjjl_d.riqi= ;
                  riqi
                    IF xjjl_d.kssj =  ;
                       0 .AND.  ;
                       xjjl_d.jssj =  ;
                       0
                         DELETE
                    ELSE
                         IF shijian >=  ;
                            mkssj  ;
                            .AND.  ;
                            shijian <=  ;
                            mjssj
                              DELETE
                         ENDIF
                    ENDIF
                    SKIP
               ENDDO
               IF mjssj >= 1440
                    DO WHILE   ;
                       .NOT.  ;
                       EOF()  ;
                       .AND.  ;
                       xjjl_d.zgbh= ;
                       zgbh .AND.  ;
                       CTOD(xjjl_d.riqi)+ ;
                       1= ;
                       CTOD(riqi)
                         IF shijian >=  ;
                            0  ;
                            .AND.  ;
                            shijian <=  ;
                            mjssj -  ;
                            1440
                              DELETE
                         ENDIF
                         SKIP
                    ENDDO
               ENDIF
     ENDCASE
     SELECT xjjl_d
ENDSCAN
SELECT xjjl_d
SET RELATION TO bc INTO time
SET FILTER TO kqlb = 98
GOTO TOP
SCAN
     IF  .NOT. EMPTY(bc)
          SELECT ardata_
          SEEK xjjl_d.zgbh +  ;
               xjjl_d.riqi 
          IF FOUND()
               mrec = 0
               mzgbh = zgbh
               mdate = CTOD(riqi)
               msbsj = time.sbsj
               mxbsj = IIF(time.xbsj >  ;
                       time.sbsj,  ;
                       time.xbsj,  ;
                       1440 +  ;
                       time.xbsj)
               mcnt = 0
               DO CASE
                    CASE time.lb =  ;
                         "1"
                         DO WHILE   ;
                            .NOT.  ;
                            EOF()  ;
                            .AND.  ;
                            mzgbh= ;
                            zgbh  ;
                            .AND.  ;
                            mdate= ;
                            CTOD(riqi)
                              IF (ABS(shijian -  ;
                                 msbsj) <  ;
                                 delta4  ;
                                 .OR.  ;
                                 ABS(shijian -  ;
                                 mxbsj) <  ;
                                 delta4)  ;
                                 .AND.  ;
                                 mark <  ;
                                 1
                                   IF mrec = 0
                                        mrec = RECNO()
                                   ENDIF
                                   REPLACE mark WITH 8
                                   mcnt = mcnt + 1
                              ENDIF
                              SKIP
                         ENDDO
                    CASE time.lb =  ;
                         "2"
                         DO WHILE   ;
                            .NOT.  ;
                            EOF()  ;
                            .AND.  ;
                            mzgbh= ;
                            zgbh  ;
                            .AND.  ;
                            mdate= ;
                            CTOD(riqi)
                              IF (ABS(shijian -  ;
                                 msbsj) <  ;
                                 delta4  ;
                                 .OR.  ;
                                 ABS(shijian -  ;
                                 mxbsj) <  ;
                                 delta4)  ;
                                 .AND.  ;
                                 mark <  ;
                                 1
                                   IF mrec = 0
                                        mrec = RECNO()
                                   ENDIF
                                   REPLACE mark WITH 8
                                   mcnt = mcnt + 1
                              ENDIF
                              SKIP
                         ENDDO
                         DO WHILE   ;
                            .NOT.  ;
                            EOF()  ;
                            .AND.  ;
                            mzgbh= ;
                            zgbh  ;
                            .AND.  ;
                            mdate= ;
                            CTOD(riqi)- ;
                            1  ;
                            .AND.  ;
                            shijian< ;
                            delta4* ;
                            2/3
                              IF (ABS(1440 +  ;
                                 shijian -  ;
                                 msbsj) <  ;
                                 delta4  ;
                                 .OR.  ;
                                 ABS(1440 +  ;
                                 shijian -  ;
                                 mxbsj) <  ;
                                 delta4)  ;
                                 .AND.  ;
                                 mark <  ;
                                 1
                                   IF mrec = 0
                                        mrec = RECNO()
                                   ENDIF
                                   REPLACE riqi WITH DTOC(mdate), shijian WITH 1440 + shijian, mark WITH 8
                                   mcnt = mcnt + 1
                              ENDIF
                              SKIP
                         ENDDO
                    CASE time.lb =  ;
                         "3"
                         DO WHILE   ;
                            .NOT.  ;
                            EOF()  ;
                            .AND.  ;
                            mzgbh= ;
                            zgbh  ;
                            .AND.  ;
                            mdate= ;
                            CTOD(riqi)
                              IF (ABS(shijian -  ;
                                 msbsj) <  ;
                                 delta4  ;
                                 .OR.  ;
                                 ABS(shijian -  ;
                                 mxbsj) <  ;
                                 delta4)  ;
                                 .AND.  ;
                                 mark <  ;
                                 1
                                   IF mrec = 0
                                        mrec = RECNO()
                                   ENDIF
                                   REPLACE mark WITH 8
                                   mcnt = mcnt + 1
                              ENDIF
                              SKIP
                         ENDDO
                         DO WHILE   ;
                            .NOT.  ;
                            EOF()  ;
                            .AND.  ;
                            mzgbh= ;
                            zgbh  ;
                            .AND.  ;
                            mdate= ;
                            CTOD(riqi)- ;
                            1
                              IF (ABS(1440 +  ;
                                 shijian -  ;
                                 msbsj) <  ;
                                 delta4  ;
                                 .OR.  ;
                                 ABS(1440 +  ;
                                 shijian -  ;
                                 mxbsj) <  ;
                                 delta4)  ;
                                 .AND.  ;
                                 mark <  ;
                                 1
                                   IF mrec = 0
                                        mrec = RECNO()
                                   ENDIF
                                   REPLACE riqi WITH DTOC(mdate), shijian WITH 1440 + shijian, mark WITH 8
                                   mcnt = mcnt + 1
                              ENDIF
                              SKIP
                         ENDDO
               ENDCASE
               IF mrec > 0
                    GOTO mrec
                    DO CASE
                         CASE mcnt =  ;
                              1
                              SELECT  ;
                               zg
                              SEEK  ;
                               mzgbh 
                              SELECT  ;
                               clfx
                              APPEND  ;
                               BLANK
                              REPLACE  ;
                               zgbh  ;
                               WITH  ;
                               mzgbh,  ;
                               riqi  ;
                               WITH  ;
                               DTOC(mdate),  ;
                               bc  ;
                               WITH  ;
                               time.bc,  ;
                               lb  ;
                               WITH  ;
                               time.lb
                              REPLACE  ;
                               sbsj  ;
                               WITH  ;
                               msbsj,  ;
                               xbsj  ;
                               WITH  ;
                               mxbsj,  ;
                               zdcl  ;
                               WITH  ;
                               73,  ;
                               rgcl  ;
                               WITH  ;
                               98
                              IF ABS(ardata_.shijian -  ;
                                 msbsj) >  ;
                                 ABS(ardata_.shijian -  ;
                                 mxbsj)
                                   REPLACE xbsk WITH ardata_.shijian
                              ELSE
                                   REPLACE sbsk WITH ardata_.shijian
                              ENDIF
                              REPLACE  ;
                               cqss  ;
                               WITH  ;
                               time.ss
                              SELECT  ;
                               ardata_
                         CASE mcnt >=  ;
                              2
                              SELECT  ;
                               zg
                              SEEK  ;
                               mzgbh 
                              SELECT  ;
                               clfx
                              APPEND  ;
                               BLANK
                              REPLACE  ;
                               zgbh  ;
                               WITH  ;
                               mzgbh,  ;
                               riqi  ;
                               WITH  ;
                               DTOC(mdate),  ;
                               bc  ;
                               WITH  ;
                               time.bc,  ;
                               lb  ;
                               WITH  ;
                               time.lb
                              REPLACE  ;
                               sbsk  ;
                               WITH  ;
                               ardata_.shijian,  ;
                               sbsj  ;
                               WITH  ;
                               msbsj,  ;
                               xbsj  ;
                               WITH  ;
                               mxbsj,  ;
                               rgcl  ;
                               WITH  ;
                               98
                              SELECT  ;
                               ardata_
                              i =  ;
                               1
                              DO WHILE  ;
                                 i< ;
                                 mcnt- ;
                                 1
                                   SKIP
                                   REPLACE mark WITH 9
                                   i = i + 1
                              ENDDO
                              SKIP
                              SELECT  ;
                               clfx
                              REPLACE  ;
                               xbsk  ;
                               WITH  ;
                               ardata_.shijian
                              mcd =  ;
                               sbsk -  ;
                               sbsj
                              IF mcd >  ;
                                 sjcd1  ;
                                 .AND.  ;
                                 rgcl =  ;
                                 0
                                   REPLACE cdss WITH IIF(sjcd2 > 1, sjcd2 * (INT(mcd / sjcd2) + 1), mcd)
                                   REPLACE zdcl WITH 80
                              ENDIF
                              mzt =  ;
                               xbsj -  ;
                               xbsk
                              IF mzt >  ;
                                 sjzt1  ;
                                 .AND.  ;
                                 rgcl =  ;
                                 0
                                   REPLACE ztss WITH IIF(sjzt2 > 1, sjzt2 * (INT(mzt / sjzt2) + 1), mzt)
                                   REPLACE zdcl WITH IIF(zdcl = 80, 82, 81)
                              ENDIF
                              IF (cdss >=  ;
                                 sjcd3  ;
                                 .OR.  ;
                                 ztss >=  ;
                                 sjzt3)  ;
                                 .AND.  ;
                                 rgcl =  ;
                                 0
                                   REPLACE kgss WITH time.ss
                                   REPLACE zdcl WITH 85
                                   REPLACE cdss WITH 0, ztss WITH 0
                              ELSE
                                   REPLACE cqss WITH time.ss
                              ENDIF
                              SELECT  ;
                               ardata_
                    ENDCASE
               ENDIF
               IF mcnt > 0
                    REPLACE xjjl_d.mark  ;
                            WITH  ;
                            1
               ENDIF
          ENDIF
          SELECT xjjl_d
     ENDIF
ENDSCAN
SELECT clfx
SET RELATION TO bc INTO time
GOTO TOP
SET EXACT ON
SELECT xjjl_d
SET FILTER TO (kqlb = 92;
.OR. kqlb = 93;
.OR. kqlb = 94;
.OR. kqlb = 97;
.OR. (kqlb > 0;
.AND. kqlb < 31);
.OR. kqlb = 98);
.AND. mark <> 1
mzgbh = ""
mdate = CTOD("")
mkqlb = 0
mbc = ""
mjbattr = 0
mkssj = 0
mjssj = 0
mss = 0
mts = 0
mrec = RECNO()
SCAN
     IF mzgbh <> zgbh .OR. mkqlb <>  ;
        kqlb .OR. mbc <> bc .OR.  ;
        mjbattr <> jbattr .OR.  ;
        mdate <> CTOD(riqi)
          mzgbh = zgbh
          mdate = CTOD(riqi)
          mkqlb = kqlb
          mbc = bc
          mjbattr = jbattr
          mkssj = kssj
          mjssj = IIF(kssj >=  ;
                  jssj, 1440 +  ;
                  jssj, jssj)
          mss = ss
          mts = ts
          mrec = RECNO()
          LOOP
     ENDIF
     nkssj = kssj
     njssj = IIF(kssj >= jssj,  ;
             1440 + jssj, jssj)
     DO CASE
          CASE ABS(mjssj - nkssj) <  ;
               10
               REPLACE mark WITH  ;
                       1
               mjssj = jssj
               mss = mss + ss
               mts = mts + ts
               DELETE
               GOTO mrec
               REPLACE jssj WITH  ;
                       mjssj, ss  ;
                       WITH mss,  ;
                       ts WITH  ;
                       mts
          CASE ABS(njssj - mkssj) <  ;
               10
               REPLACE mark WITH  ;
                       1
               mkssj = kssj
               mss = mss + ss
               mts = mts + ts
               DELETE
               GOTO mrec
               REPLACE kssj WITH  ;
                       mkssj, ss  ;
                       WITH mss,  ;
                       ts WITH  ;
                       mts
     ENDCASE
ENDSCAN
SET RELATION TO bc INTO bctmp
GOTO TOP
SELECT ardata_
SET FILTER TO mark < 8
SET RELATION TO zgbh INTO zg
GOTO TOP
mz = ''
SCAN
     IF CTOD(zg.jzsj) <> CTOD("")
          IF CTOD(riqi) <  ;
             CTOD(zg.jzsj) - 1
               DELETE
          ENDIF
     ENDIF
     IF CTOD(zg.lzsj) <> CTOD("")
          IF CTOD(riqi) >  ;
             CTOD(zg.lzsj) + 1
               DELETE
          ENDIF
     ENDIF
     IF mz = zgbh .AND. md =  ;
        CTOD(riqi) .AND. mt =  ;
        shijian .AND. mi = io
          DELETE
     ELSE
          mz = zgbh
          md = CTOD(riqi)
          mt = shijian
          mi = io
     ENDIF
ENDSCAN
GOTO TOP
IF  .NOT. EOF()
     recptr = RECNO()
     mzgbh = zgbh
     mdate = CTOD(riqi) - 1
ENDIF
RETURN
ENDPROC
**
FUNCTION chk_DupAddRecord
mret = 0
mkssj = IIF(xjjl_d.kssj >= 1440,  ;
        xjjl_d.kssj - 1440,  ;
        xjjl_d.kssj)
mjssj = IIF(xjjl_d.jssj >= 1440,  ;
        xjjl_d.jssj - 1440,  ;
        xjjl_d.jssj)
mrec = RECNO()
DO WHILE mret=0
     IF mkssj >= shijian - 60  ;
        .AND. mkssj <= shijian -  ;
        60
          mret = mret + 10
     ENDIF
     IF mjssj >= shijian - 60  ;
        .AND. mjssj <= shijian -  ;
        60
          mret = mret + 1
     ENDIF
     IF xjjl_d.zgbh <> zgbh .OR.  ;
        xjjl_d.riqi < riqi
          mret = 99
     ELSE
          SKIP
          IF EOF()
               mret = 99
          ENDIF
     ENDIF
ENDDO
GOTO mrec
RETURN mret
ENDFUNC
**
FUNCTION ModiSk_jb
PARAMETER l_sks, l_sjs, l_jbss,  ;
          l_jbks, l_jbjs
l_ret = 0
l_tks = l_sks
l_tjs = l_sjs
IF l_jbks = 0 .AND. l_jbjs = 0
     mdt = l_jbss / (l_sjs -  ;
           l_sks)
     IF mdt > 0.8  .AND. mdt <  ;
        1.2 
          l_ret = 1
     ELSE
          IF l_sjs - l_jbss >  ;
             l_sks .AND. l_jbss <  ;
             7.5 
               l_tjs = l_sjs -  ;
                       l_jbss
          ENDIF
     ENDIF
ELSE
     i_jbks = 9999
     i_jbjs = 9999
     i_jbtype = 0
     DO CASE
          CASE l_jbks >= l_sks  ;
               .AND. l_jbks <=  ;
               l_sjs .AND. l_jbjs >=  ;
               l_sks .AND. l_jbjs <=  ;
               l_sjs
               i_jbks = l_jbks -  ;
                        l_sks
               i_jbjs = l_sjs -  ;
                        l_jbjs
               i_jbtype = 1
          CASE l_jbks <= l_sks  ;
               .AND. l_jbks <=  ;
               l_sjs .AND. l_jbjs >=  ;
               l_sks .AND. l_jbjs >=  ;
               l_sjs
               i_jbks = l_sks -  ;
                        l_jbks
               i_jbjs = l_jbjs -  ;
                        l_sjs
               i_jbtype = 2
          CASE l_jbks <= l_sks  ;
               .AND. l_jbks <=  ;
               l_sjs .AND. l_jbjs >=  ;
               l_sks .AND. l_jbjs <=  ;
               l_sjs
               i_jbks = l_sks -  ;
                        l_jbks
               i_jbjs = l_sjs -  ;
                        l_jbjs
               i_jbtype = 3
          CASE l_jbks >= l_sks  ;
               .AND. l_jbks <=  ;
               l_sjs .AND. l_jbjs >=  ;
               l_sks .AND. l_jbjs >=  ;
               l_sjs
               i_jbks = l_jbks -  ;
                        l_sks
               i_jbjs = l_jbjs -  ;
                        l_sjs
               i_jbtype = 4
     ENDCASE
     DO CASE
          CASE i_jbks <  ;
               i_jbdelta1 .AND.  ;
               i_jbjs <  ;
               i_jbdelta1
               l_ret = 1
          CASE i_jbks = 9999  ;
               .AND. i_jbjs =  ;
               9999
          OTHERWISE
               DO CASE
                    CASE i_jbtype =  ;
                         1
                         IF i_jbks <=  ;
                            i_jbjs
                              l_tks =  ;
                               l_jbjs
                         ELSE
                              l_tjs =  ;
                               l_jbks
                         ENDIF
                    CASE i_jbtype =  ;
                         3
                         l_tks = l_jbjs
                    CASE i_jbtype =  ;
                         4
                         l_tjs = l_jbks
               ENDCASE
     ENDCASE
ENDIF
RETURN l_ret
ENDFUNC
**
FUNCTION chkjb
PARAMETER m_sb1, m_xb1, m_mode
m_xb1 = m_xb1 + IIF(m_xb1 < m_sb1,  ;
        1440, 0)
IF m_mode = 0
     m_sb2 = pub_jbks(1,  ;
             pub_jbqj_no)
     m_xb2 = IIF(pub_jbjs(1,  ;
             pub_jbqj_no) <  ;
             pub_jbks(1,  ;
             pub_jbqj_no), 1440 +  ;
             pub_jbjs(1,  ;
             pub_jbqj_no),  ;
             pub_jbjs(1,  ;
             pub_jbqj_no))
ELSE
     m_sb2 = pub_jbks(2,  ;
             pub_jbqj_no)
     m_xb2 = IIF(pub_jbjs(2,  ;
             pub_jbqj_no) <  ;
             pub_jbks(2,  ;
             pub_jbqj_no), 1440 +  ;
             pub_jbjs(2,  ;
             pub_jbqj_no),  ;
             pub_jbjs(2,  ;
             pub_jbqj_no))
ENDIF
IF m_sb2 = 0 .OR. m_xb2 = 0
     ret = -1
ELSE
     ret = 0
     kdelta9 = IIF(delta9 *  ;
               pub_jbss(1,  ;
               pub_jbqj_no) <  ;
               delta9max, delta9 *  ;
               pub_jbss(1,  ;
               pub_jbqj_no),  ;
               delta9max)
     DO CASE
          CASE m_sb2 >= m_sb1  ;
               .AND. m_sb2 <=  ;
               m_xb1 .AND. m_xb2 >=  ;
               m_sb1 .AND. m_xb2 <=  ;
               m_xb1
               IF m_sb2 - m_sb1 <  ;
                  kdelta9 .AND.  ;
                  m_xb1 - m_xb2 <  ;
                  kdelta9
                    ret = -9999
               ENDIF
          CASE m_sb2 <= m_sb1  ;
               .AND. m_sb2 <=  ;
               m_xb1 .AND. m_xb2 >=  ;
               m_sb1 .AND. m_xb2 <=  ;
               m_xb1
               IF m_sb1 - m_sb2 <  ;
                  kdelta9 .AND.  ;
                  m_xb1 - m_xb2 <  ;
                  kdelta9
                    ret = -9999
               ENDIF
          CASE m_sb2 >= m_sb1  ;
               .AND. m_sb2 <=  ;
               m_xb1 .AND. m_xb2 >=  ;
               m_sb1 .AND. m_xb2 >=  ;
               m_xb1
               IF m_sb2 - m_sb1 <  ;
                  kdelta9 .AND.  ;
                  m_xb2 - m_xb1 <  ;
                  kdelta9
                    ret = -9999
               ENDIF
     ENDCASE
ENDIF
RETURN ret
ENDFUNC
**
PROCEDURE WriteZtwc
msele = LTRIM(STR(SELECT()))
SELECT ztwc
IF sktabsel > tabptr + 1
     APPEND BLANK
     REPLACE zgbh WITH mzgbh,  ;
             riqi WITH  ;
             DTOC(mdate)
     IF bctabsel > 0
          REPLACE bc WITH  ;
                  bctabbh(bctabsel)
     ENDIF
     m = IIF(sktab(tabptr + 1) >=  ;
         0, IIF(sktab(tabptr + 1) <=  ;
         1440, sktab(tabptr + 1),  ;
         sktab(tabptr + 1) -  ;
         1440), 1440 +  ;
         sktab(tabptr + 1))
     REPLACE sk1 WITH m
ENDIF
FOR i = tabptr + 2 TO sktabsel -  ;
    1
     m = IIF(sktab(i) >= 0,  ;
         IIF(sktab(i) <= 1440,  ;
         sktab(i), sktab(i) -  ;
         1440), 1440 + sktab(i))
     IF sk2 > 0
          APPEND BLANK
          REPLACE zgbh WITH mzgbh,  ;
                  riqi WITH  ;
                  DTOC(mdate)
          IF bctabsel > 0
               REPLACE bc WITH  ;
                       bctabbh(bctabsel)
          ENDIF
          REPLACE sk1 WITH m
     ELSE
          REPLACE sk2 WITH m
          REPLACE ss WITH  ;
                  (IIF(sk2 >= sk1,  ;
                  0, 1440) + sk2 -  ;
                  sk1) / 60
          REPLACE ts WITH  ;
                  (IIF(sk2 >= sk1,  ;
                  0, 1440) + sk2 -  ;
                  sk1) / sjcq
     ENDIF
ENDFOR
SELECT &msele
RETURN
ENDPROC
**
PROCEDURE ModiSk_1440
PARAMETER para_sb, para_xb
modisk_1440_sb = para_sb
modisk_1440_xb = para_xb
mx = 0
DO WHILE modisk_1440_sb>=1440+ ;
   delta0
     modisk_1440_sb = modisk_1440_sb -  ;
                      1440
     mx = mx + 1
ENDDO
my = 0
DO WHILE modisk_1440_xb>=1440  ;
   .AND. modisk_1440_xb-1440>= ;
   modisk_1440_sb .AND. my<mx
     modisk_1440_xb = modisk_1440_xb -  ;
                      1440
     my = my + 1
ENDDO
RETURN
ENDPROC
**
PROCEDURE GetJbQj
FOR i = 1 TO 3
     FOR j = 1 TO 3
          STORE 0 TO pub_jbss(i,  ;
                j), pub_jblb(i,  ;
                j), pub_jbks(i,  ;
                j), pub_jbjs(i,  ;
                j), pub_jbbcks(i,  ;
                j), pub_jbbcjs(i,  ;
                j), pub_jbbcss(i,  ;
                j)
          STORE 0 TO pub_qjss(i,  ;
                j), pub_qjlb(i,  ;
                j), pub_qjks(i,  ;
                j), pub_qjjs(i,  ;
                j), pub_qjbcks(i,  ;
                j), pub_qjbcjs(i,  ;
                j), pub_qjbcss(i,  ;
                j)
          STORE 0 TO pub_cqss(i,  ;
                j), pub_cqks(i,  ;
                j), pub_cqjs(i,  ;
                j), pub_cqbcks(i,  ;
                j), pub_cqbcjs(i,  ;
                j), pub_cqbcss(i,  ;
                j)
          STORE "" TO pub_jbbc(i,  ;
                j), pub_qjbc(i,  ;
                j), pub_cqbc(i,  ;
                j)
     ENDFOR
ENDFOR
SELECT xjjl_d
SET EXACT OFF
SEEK mzgbh 
IF  .NOT. EOF()
     DO WHILE  .NOT. EOF() .AND.  ;
        zgbh=mzgbh .AND.  ;
        CTOD(riqi)<mdate
          SKIP
     ENDDO
ENDIF
gj_recno = RECNO()
IF  .NOT. EOF()
     FOR i = 1 TO 3
          j = 0
          DO WHILE  .NOT. EOF()  ;
             .AND. zgbh=mzgbh  ;
             .AND. CTOD(riqi)= ;
             mdate+i-1
               DO CASE
                    CASE kqlb =  ;
                         98 .AND.  ;
                         kssj > 0  ;
                         .AND.  ;
                         jssj >  ;
                         0
                         IF j < 3
                              j =  ;
                               j +  ;
                               1
                              pub_cqss(i,  ;
                               j) =  ;
                               ss
                              pub_cqks(i,  ;
                               j) =  ;
                               kssj
                              pub_cqjs(i,  ;
                               j) =  ;
                               IIF(jssj >=  ;
                               kssj,  ;
                               jssj,  ;
                               1440 +  ;
                               jssj)
                              IF   ;
                               .NOT.  ;
                               EMPTY(bc)
                                   pub_cqbc(i, j) = bc
                                   pub_cqbcks(i, j) = bctmp.sbsj
                                   pub_cqbcjs(i, j) = IIF(bctmp.xbsj >= bctmp.sbsj, bctmp.xbsj, 1440 + bctmp.xbsj)
                                   pub_cqbcss(i, j) = IIF(bctmp.xbsj < bctmp.sbsj, 1440, 0) + bctmp.xbsj - bctmp.sbsj - bctmp.zjxx
                              ENDIF
                         ENDIF
                    CASE (kqlb >=  ;
                         92 .AND.  ;
                         kqlb <=  ;
                         94) .OR.  ;
                         kqlb =  ;
                         97
                         IF j < 3
                              j =  ;
                               j +  ;
                               1
                              pub_jblb(i,  ;
                               j) =  ;
                               kqlb
                              pub_jbss(i,  ;
                               j) =  ;
                               ss
                              pub_jbks(i,  ;
                               j) =  ;
                               kssj
                              pub_jbjs(i,  ;
                               j) =  ;
                               IIF(jssj >=  ;
                               kssj,  ;
                               jssj,  ;
                               1440 +  ;
                               jssj)
                              IF   ;
                               .NOT.  ;
                               EMPTY(bc)
                                   pub_jbbc(i, j) = bc
                                   pub_jbbcks(i, j) = bctmp.sbsj
                                   pub_jbbcjs(i, j) = IIF(bctmp.xbsj >= bctmp.sbsj, bctmp.xbsj, 1440 + bctmp.xbsj)
                                   pub_jbbcss(i, j) = IIF(bctmp.xbsj < bctmp.sbsj, 1440, 0) + bctmp.xbsj - bctmp.sbsj - bctmp.zjxx
                              ENDIF
                         ENDIF
               ENDCASE
               SKIP
          ENDDO
     ENDFOR
     GOTO gj_recno
     FOR i = 1 TO 3
          j = 0
          DO WHILE  .NOT. EOF()  ;
             .AND. zgbh=mzgbh  ;
             .AND. CTOD(riqi)= ;
             mdate+i-1
               DO CASE
                    CASE kqlb >=  ;
                         1 .AND.  ;
                         kqlb <=  ;
                         30
                         IF j < 3
                              j =  ;
                               j +  ;
                               1
                              pub_qjlb(i,  ;
                               j) =  ;
                               kqlb
                              pub_qjss(i,  ;
                               j) =  ;
                               ss
                              pub_qjks(i,  ;
                               j) =  ;
                               kssj
                              pub_qjjs(i,  ;
                               j) =  ;
                               IIF(jssj >=  ;
                               kssj,  ;
                               jssj,  ;
                               1440 +  ;
                               jssj)
                              IF   ;
                               .NOT.  ;
                               EMPTY(bc)
                                   pub_qjbc(i, j) = bc
                                   pub_qjbcks(i, j) = bctmp.sbsj
                                   pub_qjbcjs(i, j) = IIF(bctmp.xbsj >= bctmp.sbsj, bctmp.xbsj, 1440 + bctmp.xbsj)
                                   pub_qjbcss(i, j) = IIF(bctmp.xbsj < bctmp.sbsj, 1440, 0) + bctmp.xbsj - bctmp.sbsj - bctmp.zjxx
                              ENDIF
                         ENDIF
               ENDCASE
               SKIP
          ENDDO
     ENDFOR
ENDIF
SET EXACT ON
RETURN
ENDPROC
**
FUNCTION ChkDup
LPARAMETERS cd_sbsk1, cd_xbsk1,  ;
            cd_sbsk2, cd_xbsk2
IF cd_sbsk1 = 0 .OR. cd_xbsk1 = 0  ;
   .OR. cd_sbsk2 = 0 .OR.  ;
   cd_xbsk2 = 0
     RETURN 0
ENDIF
DO modisk_1440 WITH cd_sbsk1,  ;
   IIF(cd_xbsk1<cd_sbsk1, 1440+ ;
   cd_xbsk1, cd_xbsk1)
mcd_sbsk1 = modisk_1440_sb
mcd_xbsk1 = modisk_1440_xb
mcd_sbsk2 = cd_sbsk2
mcd_xbsk2 = IIF(cd_xbsk2 <  ;
            cd_sbsk2, 1440 +  ;
            cd_xbsk2, cd_xbsk2)
DO CASE
     CASE ABS(mcd_sbsk2 -  ;
          mcd_sbsk1) <= 120 .AND.  ;
          ABS(mcd_xbsk2 -  ;
          mcd_xbsk1) <= 120
          cd_ret = 4
     CASE mcd_sbsk1 >= mcd_sbsk2  ;
          .AND. mcd_sbsk1 <=  ;
          mcd_xbsk2 .AND.  ;
          mcd_xbsk1 >= mcd_sbsk2  ;
          .AND. mcd_xbsk1 <=  ;
          mcd_xbsk2
          cd_ret = 3
     CASE mcd_sbsk2 >= mcd_sbsk1  ;
          .AND. mcd_sbsk2 <=  ;
          mcd_xbsk1 .AND.  ;
          mcd_xbsk2 >= mcd_sbsk1  ;
          .AND. mcd_xbsk2 <=  ;
          mcd_xbsk1
          cd_ret = 3
     CASE mcd_sbsk1 >= mcd_sbsk2  ;
          .AND. mcd_sbsk1 <=  ;
          mcd_xbsk2 .AND.  ;
          (mcd_xbsk1 < mcd_sbsk2  ;
          .OR. mcd_xbsk1 >  ;
          mcd_xbsk2)
          IF mcd_sbsk1 -  ;
             mcd_sbsk2 >  ;
             mcd_xbsk2 -  ;
             mcd_sbsk1
               cd_ret = 2
          ELSE
               cd_ret = 2.5 
          ENDIF
     CASE mcd_sbsk2 >= mcd_sbsk1  ;
          .AND. mcd_sbsk2 <=  ;
          mcd_xbsk1 .AND.  ;
          (mcd_xbsk2 < mcd_sbsk1  ;
          .OR. mcd_xbsk2 >  ;
          mcd_xbsk1)
          IF mcd_xbsk2 -  ;
             mcd_xbsk1 >  ;
             mcd_xbsk1 -  ;
             mcd_sbsk2
               cd_ret = 2
          ELSE
               cd_ret = 2.5 
          ENDIF
     CASE (mcd_sbsk1 < mcd_sbsk2  ;
          .OR. mcd_sbsk1 >  ;
          mcd_xbsk2) .AND.  ;
          mcd_xbsk1 >= mcd_sbsk2  ;
          .AND. mcd_xbsk1 <=  ;
          mcd_xbsk2
          IF mcd_xbsk2 -  ;
             mcd_xbsk1 >  ;
             mcd_xbsk1 -  ;
             mcd_sbsk2
               cd_ret = 2
          ELSE
               cd_ret = 2.5 
          ENDIF
     CASE (mcd_sbsk2 < mcd_sbsk1  ;
          .OR. mcd_sbsk2 >  ;
          mcd_xbsk1) .AND.  ;
          mcd_xbsk2 >= mcd_sbsk1  ;
          .AND. mcd_xbsk2 <=  ;
          mcd_xbsk1
          IF mcd_sbsk1 -  ;
             mcd_sbsk2 >  ;
             mcd_xbsk2 -  ;
             mcd_sbsk1
               cd_ret = 2
          ELSE
               cd_ret = 2.5 
          ENDIF
     OTHERWISE
          cd_ret = 1
ENDCASE
RETURN cd_ret
ENDFUNC
**
FUNCTION ChkDupForAll
LPARAMETERS cda_start, cda_end,  ;
            cda_day
cda_ret = 0
cda_jbks = pub_jbks(cda_day,  ;
           pub_jbqj_no)
cda_jbjs = pub_jbjs(cda_day,  ;
           pub_jbqj_no)
IF (cda_jbks = 0 .OR. cda_jbjs =  ;
   0) .AND. pub_jbss(cda_day,  ;
   pub_jbqj_no) > 0
     FOR cda_i = cda_start TO  ;
         cda_end - 1
          cda_rate = (sktab(cda_i +  ;
                     1) -  ;
                     sktab(cda_i)) /  ;
                     pub_jbss(cda_day,  ;
                     pub_jbqj_no)
          IF cda_rate >= 0.9   ;
             .AND. cda_rate <=  ;
             1.1 
               cda_ret = cda_i
               EXIT
          ENDIF
     ENDFOR
ELSE
     IF cda_jbks > 0 .AND.  ;
        cda_jbjs > 0
          FOR cda_i = cda_start  ;
              TO cda_end - 1
               IF chkdup(sktab(cda_i),  ;
                  sktab(cda_i +  ;
                  1), cda_jbks,  ;
                  cda_jbjs) = 4
                    cda_ret = cda_i
                    EXIT
               ENDIF
          ENDFOR
     ENDIF
ENDIF
RETURN cda_ret
ENDFUNC
**
FUNCTION Chk98
LPARAMETERS chk98_zgbh,  ;
            chk98_riqi
chk98_sele = LTRIM(STR(SELECT()))
chk98_ret = .F.
SELECT xjjl_d
chk98_filter = FILTER()
SET FILTER TO
SEEK chk98_zgbh + chk98_riqi 
DO WHILE  .NOT. EOF() .AND.  ;
   chk98_zgbh=zgbh .AND.  ;
   chk98_riqi=riqi
     IF kqlb = 98 .AND. mark = 1
          chk98_ret = .T.
          EXIT
     ENDIF
     SKIP
ENDDO
set filter to &chk98_filter 
select &chk98_sele	
RETURN chk98_ret
ENDFUNC
**
PROCEDURE skproc_end_modify
REPLACE bc WITH bctabbh(bctabsel),  ;
        lb WITH time.lb
REPLACE sbsj WITH  ;
        bctabsb(bctabsel), xbsj  ;
        WITH bctabxb(bctabsel)
REPLACE zdcl WITH 98
ksbsj = sbsj
kxbsj = IIF(xbsj < sbsj, 1440 +  ;
        xbsj, xbsj)
ksbsk = sbsk
kxbsk = IIF(xbsk < sbsk, 1440 +  ;
        xbsk, xbsk)
mcd = ksbsk - ksbsj
mzt = kxbsj - kxbsk
IF mcd > sjcd1 .OR. mzt > sjzt1
     IF  .NOT. chk98(mzgbh,  ;
         DTOC(mdate))
          IF mcd > sjcd1
               REPLACE cdss WITH  ;
                       IIF(sjcd2 >  ;
                       1, sjcd2 *  ;
                       (INT(mcd /  ;
                       sjcd2) +  ;
                       1), mcd)
               REPLACE zdcl WITH  ;
                       80
          ENDIF
          IF mzt > sjzt1
               REPLACE ztss WITH  ;
                       IIF(sjzt2 >  ;
                       1, sjzt2 *  ;
                       (INT(mzt /  ;
                       sjzt2) +  ;
                       1), mzt)
               REPLACE zdcl WITH  ;
                       IIF(zdcl =  ;
                       80, 82,  ;
                       81)
          ENDIF
     ENDIF
ENDIF
IF cdss >= sjcd3 .OR. ztss >=  ;
   sjzt3
     REPLACE kgss WITH  ;
             bctabss(bctabsel)
     REPLACE zdcl WITH 85
     REPLACE cdss WITH 0, ztss  ;
             WITH 0
ELSE
     REPLACE kgss WITH 0
     REPLACE cqss WITH  ;
             bctabss(bctabsel)
ENDIF
RETURN
ENDPROC
**
***
*** 3akq032.fxp
***
*
DO prginit
IF  .NOT. pub_escape
     DO fenxi1
     DO fenxi6
     DO fenxi3
     DO fenxi2
     DO fenxi4
     DO jjrjb
     DO xrjb
     DO fenxi5
     DO fenxi7
     DO fenxi7_1
     DO fenxi8
     DO jjrkq
     mserver = getantenv("SERVER",  ;
               "ANT2000")
     mp = mserver +  ;
          "function\kqfx_add.fxp"
     IF FILE(mp)
          do &mp
     ENDIF
ENDIF
DO prgterm
RETURN
ENDPROC
**
PROCEDURE prginit
IF pub_language
     obj_form4.txt_msg.value = "Be analysing for attendance,please wait a minute..."
ELSE
     obj_form4.txt_msg.value = "正在进行综合分析，请等待..."
ENDIF
PUBLIC njbflag
njbflag = getantenv("FXPARA",  ;
          "NJBFLAG")
PUBLIC bctabbou, bctabsel,  ;
       bctabcnt
bctabbou = 30
PUBLIC bctabbh(bctabbou),  ;
       bctabsb(bctabbou),  ;
       bctabxb(bctabbou),  ;
       bctabss(bctabbou),  ;
       bctabts(bctabbou),  ;
       bctablb(bctabbou)
PUBLIC delta4
delta4 = getantenv("FXPARA",  ;
         "DELTA4")
pub_escape = .F.
sqlexe_run(00000000066, SYS(16),  ;
          "select * from kq_xjjl_s",  ;
          "xjjl_s")
sqlexe_run(00000000068, SYS(16),  ;
          "select * from kq_xjjl_j",  ;
          "xjjl_j")
SELECT xjjl_j
INDEX ON STR(mm, 2) + STR(dd, 2)  ;
      TO xjjl_j
SELECT xjjl_d
SET FILTER TO
INDEX ON zgbh + riqi TO xjjl_d
strsql = "select distinct "
strsql = strsql +  ;
         "kq_xjjl_w.* from kq_xjjl_w,kq_zg where kq_xjjl_w.RIQI>=?ndate and kq_xjjl_w.RIQI<=?kdate"
strsql = strsql +  ;
         " and kq_xjjl_w.zgbh=kq_zg.zgbh and " +  ;
         STRTRAN(str_bmbh, "@",  ;
         "kq_zg.BMBH")
strsql = strsql +  ;
         STRTRAN(pub_zgbh_filter,  ;
         "@", "kq_xjjl_w")
sqlexe_run(00000000080, SYS(16),  ;
          "select * from kq_xjjl_w",  ;
          "xjjl_w")
SELECT xjjl_w
INDEX ON zgbh TO xjjl_w
SELECT clfx
INDEX ON zgbh + riqi + IIF(sbsk >  ;
      0, STR(sbsk, 4), STR(xbsk,  ;
      4)) TO clfx
SET RELATION TO bc INTO time
GOTO TOP
SET ESCAPE ON
SET EXACT ON
ON ESCAPE DO P_ESC
RETURN
ENDPROC
**
PROCEDURE prgterm
RELEASE delta0, njbflag, bctabbou,  ;
        bctabsel, bctabcnt,  ;
        bctabbh, bctabsb, bctabxb,  ;
        bctabss, bctabts,  ;
        bctablb
RELEASE delta4
SET ESCAPE OFF
SET EXACT OFF
RETURN
ENDPROC
**
PROCEDURE fenxi1
delta4err = getantenv("FXPARA",  ;
            "DELTA4ERR")
SET EXACT OFF
SELECT zg
SCAN FOR  .NOT. pub_escape
     IF pub_language
          obj_form4.txt_msg1.value =  ;
           "The first scanning..." +  ;
           zgbh
     ELSE
          obj_form4.txt_msg1.value =  ;
           "第一趟扫描..." +  ;
           zgbh
     ENDIF
     IF EMPTY(ksbc)
          LOOP
     ENDIF
     i = pub_kaishiriqi
     j = .T.
     SELECT clfx
     SEEK zg.zgbh 
     mgetbctab_flag = .F.
     DO WHILE i<=pub_jieshuriqi  ;
        .AND.  .NOT. pub_escape
          IF pub_language
               obj_form4.txt_msg1.value =  ;
                "The first scanning..." +  ;
                zgbh
          ELSE
               obj_form4.txt_msg1.value =  ;
                "第一趟扫描..." +  ;
                zgbh
          ENDIF
          mappendrec = -1
          IF (EOF() .OR. zgbh <>  ;
             zg.zgbh .OR.  ;
             CTOD(riqi) <> i)  ;
             .AND. i >=  ;
             CTOD(zg.jzsj) .AND.  ;
             (i < CTOD(zg.lzsj)  ;
             .OR. CTOD(zg.lzsj) =  ;
             CTOD(""))
               APPEND BLANK
               REPLACE zgbh WITH  ;
                       zg.zgbh,  ;
                       riqi WITH  ;
                       DTOC(i)
               mappendrec = RECNO()
          ENDIF
          mcqss = 0
          IF CTOD(riqi) <= i
               mdate = CTOD(riqi)
               DO WHILE  .NOT.  ;
                  EOF() .AND.  ;
                  zgbh=zg.zgbh  ;
                  .AND. mdate= ;
                  CTOD(riqi)  ;
                  .AND.  .NOT.  ;
                  pub_escape
                    mcqss = mcqss +  ;
                            1
                    SKIP
               ENDDO
               IF  .NOT. BOF()  ;
                   .AND. zgbh <>  ;
                   zg.zgbh
                    SKIP -1
               ENDIF
          ENDIF
          IF (sbsk > 0 .AND. xbsk =  ;
             0) .OR. (sbsk = 0  ;
             .AND. xbsk > 0)
               mtime = IIF(sbsk >  ;
                       0, sbsk,  ;
                       xbsk)
          ELSE
               mtime = 0
          ENDIF
          IF mtime > 0 .AND. rgcl =  ;
             0 .AND. zdcl >= 71  ;
             .AND. zdcl <= 73  ;
             .AND. cqss = 0
               nriqi = riqi
               nrec = RECNO()
               SKIP
               IF (sbsk > 0 .AND.  ;
                  xbsk = 0) .OR.  ;
                  (sbsk = 0 .AND.  ;
                  xbsk > 0)
                    ntime = IIF(sbsk >  ;
                            0,  ;
                            sbsk,  ;
                            xbsk)
               ELSE
                    ntime = 0
               ENDIF
               IF  .NOT. EOF()  ;
                   .AND. zgbh =  ;
                   zg.zgbh .AND.  ;
                   riqi = nriqi  ;
                   .AND. ntime >  ;
                   0 .AND. rgcl =  ;
                   0 .AND. zdcl >=  ;
                   71 .AND. zdcl <=  ;
                   73 .AND. cqss =  ;
                   0
                    DELETE
                    GOTO nrec
                    IF sbsk = 0
                         REPLACE sbsk  ;
                                 WITH  ;
                                 ntime,  ;
                                 zdcl  ;
                                 WITH  ;
                                 73
                    ELSE
                         REPLACE xbsk  ;
                                 WITH  ;
                                 ntime,  ;
                                 zdcl  ;
                                 WITH  ;
                                 73
                    ENDIF
               ELSE
                    GOTO nrec
               ENDIF
          ENDIF
          IF mappendrec > 0 .AND.  ;
             zgbh = zg.zgbh .AND.  ;
             CTOD(riqi) = i + 1  ;
             .AND. mtime > 0  ;
             .AND. mtime < 720  ;
             .AND. rgcl = 0 .AND.  ;
             zdcl >= 71 .AND.  ;
             zdcl <= 73 .AND.  ;
             mcqss > 1
               DELETE
               GOTO mappendrec
               REPLACE xbsk WITH  ;
                       mtime,  ;
                       zdcl WITH  ;
                       72
               SKIP
          ELSE
               IF delta4err = 0  ;
                  .AND. zdcl >=  ;
                  71 .AND. zdcl <=  ;
                  73 .AND. rgcl =  ;
                  0 .AND. sbsk >  ;
                  0 .AND. xbsk >  ;
                  0 .AND.  ;
                  EMPTY(bc)
                    nzgbh = zgbh
                    nriqi = riqi
                    ncqss = 0
                    IF  .NOT.  ;
                        BOF()
                         SKIP -1
                         IF nzgbh =  ;
                            zgbh  ;
                            .AND.  ;
                            nriqi =  ;
                            riqi
                              ncqss =  ;
                               ncqss +  ;
                               cqss
                         ENDIF
                         SKIP
                    ENDIF
                    IF  .NOT.  ;
                        EOF()
                         SKIP
                         IF nzgbh =  ;
                            zgbh  ;
                            .AND.  ;
                            nriqi =  ;
                            riqi
                              ncqss =  ;
                               ncqss +  ;
                               cqss
                         ENDIF
                         SKIP -1
                    ENDIF
                    IF ncqss = 0
                         IF  .NOT.  ;
                             mgetbctab_flag
                              mgbt =  ;
                               getbctab()
                              mgetbctab_flag =  ;
                               .T.
                         ENDIF
                         IF mgbt >  ;
                            0
                              DO tryxrjbbc  ;
                                 WITH  ;
                                 clfx.sbsk,  ;
                                 clfx.xbsk,  ;
                                 0
                         ENDIF
                    ENDIF
               ENDIF
          ENDIF
          i = i + 1
     ENDDO
     SELECT zg
ENDSCAN
SET EXACT ON
RETURN
ENDPROC
**
PROCEDURE fenxi2
SELECT clfx
mzgbh = ""
mdate = CTOD("")
SCAN FOR  .NOT. pub_escape
     IF pub_language
          obj_form4.txt_msg1.value =  ;
           "The third scanning..." +  ;
           zgbh
     ELSE
          obj_form4.txt_msg1.value =  ;
           "第三趟扫描..." + zgbh +  ;
           " " + riqi
     ENDIF
     IF mark > 0
          LOOP
     ENDIF
     IF zdcl = 85
          REPLACE kgts WITH  ;
                  time.ts
     ENDIF
     IF zdcl >= 80 .AND. zdcl <=  ;
        82 .AND. cqts = 0
          REPLACE cqts WITH  ;
                  time.ts
     ENDIF
     IF sbsk > 0 .OR. xbsk > 0
          DO checkjjr
     ENDIF
     IF (zdcl = 1 .OR. zdcl = 15)  ;
        .AND. rgcl = 0
          IF checksb()
               LOOP
          ENDIF
     ENDIF
     IF rgcl > 0
          IF "" = mzgbh
               mzgbh = zgbh
               mdate = CTOD(riqi)
               SKIP
               IF mzgbh = zgbh  ;
                  .AND. mdate =  ;
                  CTOD(riqi)
                    SKIP -1
                    LOOP
               ELSE
                    SKIP -1
               ENDIF
          ELSE
               IF mzgbh = zgbh  ;
                  .AND. mdate =  ;
                  CTOD(riqi)
                    LOOP
               ENDIF
          ENDIF
     ENDIF
     IF zdcl = 73 .AND. (sbsk = 0  ;
        .OR. xbsk = 0) .AND. rgcl =  ;
        0
          mzgbh = zgbh
          mdate = CTOD(riqi)
          mrecord = RECNO()
          DO WHILE  .NOT. EOF()  ;
             .AND. zdcl=73 .AND.  ;
             (sbsk=0 .OR. xbsk=0)  ;
             .AND. rgcl=0 .AND.  ;
             mzgbh=zgbh .AND.  ;
             mdate=CTOD(riqi)
               SKIP
          ENDDO
          IF EOF() .OR. mzgbh <>  ;
             zgbh .OR. mdate <>  ;
             CTOD(riqi)
               GOTO mrecord
          ENDIF
     ENDIF
     mzgbh = zgbh
     mdate = CTOD(riqi)
     mkqlb = IIF(rgcl > 0, rgcl,  ;
             zdcl)
     SELECT xjjl_d
     SET EXACT OFF
     SEEK clfx.zgbh + clfx.riqi 
     SET EXACT ON
     nrec = 0
     DO WHILE  .NOT. EOF() .AND.  ;
        zgbh=clfx.zgbh .AND. riqi= ;
        clfx.riqi .AND.  .NOT.  ;
        pub_escape
          IF mark > 0
               IF  .NOT.  ;
                   EMPTY(clfx.bc)  ;
                   .AND.  ;
                   clfx.cqss > 0  ;
                   .AND. kqlb =  ;
                   98 .AND.   ;
                   .NOT.  ;
                   EMPTY(bc)  ;
                   .AND. clfx.bc =  ;
                   bc
                    REPLACE clfx.cqss  ;
                            WITH  ;
                            ss,  ;
                            clfx.cqts  ;
                            WITH  ;
                            ts
               ENDIF
               SKIP
               LOOP
          ENDIF
          REPLACE mark WITH 1
          fx2_rec = 0
          DO CASE
               CASE kqlb > 0  ;
                    .AND. kqlb <  ;
                    31
                    = zaiti()
                    IF clfx.cqss >  ;
                       0 .AND.  ;
                       LEN(TRIM(clfx.bc)) >  ;
                       2 .AND.  ;
                       clfx.bc <>  ;
                       bc .AND.   ;
                       .NOT.  ;
                       EMPTY(bc)
                         REPLACE mark  ;
                                 WITH  ;
                                 0
                         EXIT
                    ENDIF
                    IF clfx.sbsj >  ;
                       0 .AND.  ;
                       clfx.xbsj >  ;
                       0 .AND.  ;
                       LEN(TRIM(clfx.bc)) >  ;
                       2
                         msbsj = clfx.sbsj
                         mxbsj = IIF(clfx.xbsj <  ;
                                 clfx.sbsj,  ;
                                 1440 +  ;
                                 clfx.xbsj,  ;
                                 clfx.xbsj)
                         mkssj = kssj
                         mjssj = IIF(jssj <  ;
                                 kssj,  ;
                                 1440 +  ;
                                 jssj,  ;
                                 jssj)
                         IF (mkssj <=  ;
                            msbsj  ;
                            .AND.  ;
                            mjssj <=  ;
                            msbsj)  ;
                            .OR.  ;
                            (mkssj >=  ;
                            mxbsj  ;
                            .AND.  ;
                            mjssj >=  ;
                            mxbsj)
                              REPLACE  ;
                               mark  ;
                               WITH  ;
                               0
                              EXIT
                         ENDIF
                    ENDIF
                    mflag = .F.
                    IF clfx.qjss >  ;
                       0 .AND.  ;
                       clfx.zdcl <>  ;
                       kqlb .AND.  ;
                       clfx.rgcl <>  ;
                       kqlb .AND.  ;
                       clfx.zdcl <>  ;
                       1 .AND.  ;
                       clfx.zdcl <>  ;
                       15
                         SELECT clfx
                         fx2_rec =  ;
                          RECNO()
                         fx2_zgbh =  ;
                          zgbh
                         fx2_date =  ;
                          CTOD(riqi)
                         mflag = .T.
                         APPEND BLANK
                         REPLACE zgbh  ;
                                 WITH  ;
                                 fx2_zgbh,  ;
                                 riqi  ;
                                 WITH  ;
                                 DTOC(fx2_date),  ;
                                 mark  ;
                                 WITH  ;
                                 1
                         SELECT xjjl_d
                    ENDIF
                    IF clfx.zdcl <>  ;
                       1 .AND.  ;
                       clfx.zdcl <>  ;
                       15
                         REPLACE clfx.qjss  ;
                                 WITH  ;
                                 clfx.qjss +  ;
                                 ss,  ;
                                 clfx.qjts  ;
                                 WITH  ;
                                 clfx.qjts +  ;
                                 ts
                    ELSE
                         REPLACE clfx.qjss  ;
                                 WITH  ;
                                 ss,  ;
                                 clfx.qjts  ;
                                 WITH  ;
                                 ts
                    ENDIF
                    REPLACE clfx.cdss  ;
                            WITH  ;
                            0,  ;
                            clfx.ztss  ;
                            WITH  ;
                            0,  ;
                            clfx.kgss  ;
                            WITH  ;
                            0,  ;
                            clfx.kgts  ;
                            WITH  ;
                            0
                    IF  .NOT.  ;
                        EMPTY(bc)
                         REPLACE clfx.bc  ;
                                 WITH  ;
                                 bc
                         SELECT time
                         SEEK clfx.bc 
                         SELECT xjjl_d
                         REPLACE clfx.lb  ;
                                 WITH  ;
                                 time.lb
                         IF  .NOT.  ;
                             mflag
                              REPLACE  ;
                               clfx.cqss  ;
                               WITH  ;
                               time.ss
                              REPLACE  ;
                               clfx.cqts  ;
                               WITH  ;
                               time.ts
                         ENDIF
                    ENDIF
                    IF  .NOT.  ;
                        mflag
                         REPLACE clfx.cqss  ;
                                 WITH  ;
                                 IIF(clfx.cqss >  ;
                                 clfx.qjss,  ;
                                 clfx.cqss -  ;
                                 clfx.qjss,  ;
                                 0)
                         REPLACE clfx.cqts  ;
                                 WITH  ;
                                 IIF(clfx.cqts >  ;
                                 clfx.qjts,  ;
                                 clfx.cqts -  ;
                                 clfx.qjts,  ;
                                 0)
                    ELSE
                         IF totalcqss() >  ;
                            0
                              REPLACE  ;
                               clfx.cqss  ;
                               WITH  ;
                               clfx.cqss -  ;
                               clfx.qjss
                              REPLACE  ;
                               clfx.cqts  ;
                               WITH  ;
                               clfx.cqts -  ;
                               clfx.qjts
                         ENDIF
                    ENDIF
                    IF ss >= sjcq  ;
                       .AND.  ;
                       EMPTY(bc)
                         IF (clfx.zdcl >  ;
                            70  ;
                            .AND.  ;
                            clfx.zdcl <  ;
                            80)  ;
                            .OR.  ;
                            clfx.zdcl =  ;
                            85
                              REPLACE  ;
                               clfx.zdcl  ;
                               WITH  ;
                               0
                         ENDIF
                         IF clfx.sbsk >  ;
                            0  ;
                            .AND.  ;
                            clfx.xbsk >  ;
                            0
                              IF sjqjdelta1 >  ;
                                 0
                                   IF sjycqj1 = 1
                                        REPLACE clfx.qjyc WITH 1
                                   ELSE
                                        REPLACE clfx.qjyc WITH 2
                                   ENDIF
                              ENDIF
                         ENDIF
                    ELSE
                         IF clfx.sbsk >  ;
                            0  ;
                            .AND.  ;
                            clfx.xbsk >  ;
                            0
                              IF   ;
                               .NOT.  ;
                               EOF("time")
                                   msbsj = time.sbsj
                                   mxbsj = IIF(time.xbsj >= time.sbsj, time.xbsj, 1440 + time.xbsj)
                                   mks = time.zjks
                                   mjs = IIF(time.zjjs >= time.zjks, time.zjjs, 1440 + time.zjjs)
                                   mt1 = IIF(clfx.sbsk >= mks .AND. clfx.sbsk <= mjs, mks, clfx.sbsk)
                                   mt2 = IIF(clfx.xbsk < clfx.sbsk, 1440 + clfx.xbsk, clfx.xbsk)
                                   DO CASE
                                        CASE mt1 <= mks .AND. mt2 >= mjs
                                             mzj = mjs - mks
                                             IF mt1 <= msbsj
                                                  mt1 = msbsj
                                             ENDIF
                                             IF mt2 >= mxbsj
                                                  mt2 = mxbsj
                                             ENDIF
                                        CASE mt1 > mks .AND. mt2 < mjs
                                             mt1 = 0
                                             mt2 = 0
                                             mzj = 0
                                        OTHERWISE
                                             mzj = 0
                                             IF mt1 > mks .AND. mt1 < mjs .AND. mt2 >= mjs
                                                  mt1 = mjs
                                             ENDIF
                                             IF mt1 <= mks .AND. mt2 > mks .AND. mt2 < mjs
                                                  mt2 = mks
                                             ENDIF
                                   ENDCASE
                              ELSE
                                   mt1 = clfx.sbsk
                                   mt2 = IIF(clfx.xbsk < clfx.sbsk, 1440 + clfx.xbsk, clfx.xbsk)
                                   mzj = 0
                              ENDIF
                              mcqss =  ;
                               mt2 -  ;
                               mt1 -  ;
                               mzj
                              IF sjqjdelta1 >  ;
                                 0  ;
                                 .AND.  ;
                                 mcqss +  ;
                                 ss >  ;
                                 sjcq +  ;
                                 sjqjdelta1
                                   IF sjycqj1 = 1
                                        REPLACE clfx.qjyc WITH 1
                                   ELSE
                                        REPLACE clfx.qjyc WITH 2
                                   ENDIF
                              ENDIF
                              IF sjqjdelta2 >  ;
                                 0  ;
                                 .AND.  ;
                                 mcqss +  ;
                                 ss <  ;
                                 sjcq -  ;
                                 sjqjdelta2
                                   IF sjycqj2 = 1
                                        REPLACE clfx.qjyc WITH 3
                                   ELSE
                                        REPLACE clfx.qjyc WITH 4
                                   ENDIF
                              ENDIF
                              IF kssj >  ;
                                 0  ;
                                 .AND.  ;
                                 jssj >  ;
                                 0
                                   IF (kssj >= mt1 .AND. kssj <= mt2) .OR. (jssj >= mt1 .AND. jssj <= mt2)
                                        REPLACE clfx.zdcl WITH 98
                                        SELECT clfx
                                        IF  .NOT. EMPTY(bc)
                                             SELECT time
                                             SEEK clfx.bc 
                                             SELECT clfx
                                             REPLACE cqss WITH time.ss - qjss
                                             REPLACE cqts WITH time.ts - qjts
                                        ELSE
                                             REPLACE cqss WITH IIF(xbsk < sbsk, 1440, 0) + xbsk - sbsk
                                             REPLACE cqts WITH (IIF(xbsk < sbsk, 1440, 0) + xbsk - sbsk) / sjcq
                                        ENDIF
                                        REPLACE cqss WITH IIF(cqss > 0, cqss, 0)
                                        REPLACE cqts WITH IIF(cqts > 0, cqts, 0)
                                        SELECT xjjl_d
                                   ELSE
                                        IF clfx.cqss = 0
                                             REPLACE clfx.zdcl WITH 98
                                             SELECT clfx
                                             IF  .NOT. EMPTY(bc)
                                                  SELECT time
                                                  SEEK clfx.bc 
                                                  SELECT clfx
                                                  ksbsk = sbsk
                                                  kxbsk = IIF(xbsk < sbsk, 1440 + xbsk, xbsk)
                                                  kzjks = IIF(time.zjks > 0 .AND. time.zjks < sbsk, 1440 + time.zjks, time.zjks)
                                                  kzjjs = IIF(time.zjjs > 0 .AND. time.zjjs < time.zjks, 1440 + time.zjjs, time.zjjs)
                                                  jzjks = kzjks
                                                  jzjjs = kzjjs
                                                  IF kzjks < ksbsk .AND. kzjjs > ksbsk
                                                       jzjks = ksbsk
                                                  ENDIF
                                                  IF kzjks < ksbsk .AND. kzjjs > kxbsk
                                                       jzjjs = kxbsk
                                                  ENDIF
                                                  kzjks1 = IIF(time.zjks1 > 0 .AND. time.zjks1 < sbsk, 1440 + time.zjks1, time.zjks1)
                                                  kzjjs1 = IIF(time.zjjs1 > 0 .AND. time.zjjs1 < time.zjks1, 1440 + time.zjjs1, time.zjjs1)
                                                  jzjks1 = kzjks1
                                                  jzjjs1 = kzjjs1
                                                  IF kzjks1 < ksbsk .AND. kzjjs1 > ksbsk
                                                       jzjks1 = ksbsk
                                                  ENDIF
                                                  IF kzjks1 < ksbsk .AND. kzjjs1 > kxbsk
                                                       jzjjs1 = kxbsk
                                                  ENDIF
                                                  REPLACE cqss WITH kxbsk - ksbsk - (jzjjs - jzjks) - (jzjjs1 - jzjks1)
                                             ELSE
                                                  REPLACE cqss WITH IIF(xbsk < sbsk, 1440, 0) + xbsk - sbsk
                                             ENDIF
                                             REPLACE cqts WITH cqss / sjcq
                                             SELECT xjjl_d
                                        ENDIF
                                        REPLACE clfx.qjyc WITH 1
                                   ENDIF
                              ELSE
                                   IF ss + mt2 - mt1 >= sjcq
                                        REPLACE clfx.zdcl WITH 98
                                        SELECT clfx
                                        IF  .NOT. EMPTY(bc)
                                             SELECT time
                                             SEEK clfx.bc 
                                             SELECT clfx
                                             REPLACE cqss WITH time.ss - qjss
                                             REPLACE cqts WITH time.ts - qjts
                                        ELSE
                                             REPLACE cqss WITH IIF(xbsk < sbsk, 1440, 0) + xbsk - sbsk
                                             REPLACE cqts WITH (IIF(xbsk < sbsk, 1440, 0) + xbsk - sbsk) / sjcq
                                        ENDIF
                                        REPLACE cqss WITH IIF(cqss > 0, cqss, 0)
                                        REPLACE cqts WITH IIF(cqts > 0, cqts, 0)
                                        SELECT xjjl_d
                                   ELSE
                                        IF clfx.cqss = 0
                                             REPLACE clfx.zdcl WITH 98
                                             SELECT clfx
                                             IF  .NOT. EMPTY(bc)
                                                  SELECT time
                                                  SEEK clfx.bc 
                                                  SELECT clfx
                                                  ksbsk = sbsk
                                                  kxbsk = IIF(xbsk < sbsk, 1440 + xbsk, xbsk)
                                                  kzjks = IIF(time.zjks > 0 .AND. time.zjks < sbsk, 1440 + time.zjks, time.zjks)
                                                  kzjjs = IIF(time.zjjs > 0 .AND. time.zjjs < time.zjks, 1440 + time.zjjs, time.zjjs)
                                                  jzjks = kzjks
                                                  jzjjs = kzjjs
                                                  IF kzjks < ksbsk .AND. kzjjs > ksbsk
                                                       jzjks = ksbsk
                                                  ENDIF
                                                  IF kzjks < ksbsk .AND. kzjjs > kxbsk
                                                       jzjjs = kxbsk
                                                  ENDIF
                                                  kzjks1 = IIF(time.zjks1 > 0 .AND. time.zjks1 < sbsk, 1440 + time.zjks1, time.zjks1)
                                                  kzjjs1 = IIF(time.zjjs1 > 0 .AND. time.zjjs1 < time.zjks1, 1440 + time.zjjs1, time.zjjs1)
                                                  jzjks1 = kzjks1
                                                  jzjjs1 = kzjjs1
                                                  IF kzjks1 < ksbsk .AND. kzjjs1 > ksbsk
                                                       jzjks1 = ksbsk
                                                  ENDIF
                                                  IF kzjks1 < ksbsk .AND. kzjjs1 > kxbsk
                                                       jzjjs1 = kxbsk
                                                  ENDIF
                                                  REPLACE cqss WITH kxbsk - ksbsk - (jzjjs - jzjks) - (jzjjs1 - jzjks1)
                                             ELSE
                                                  REPLACE cqss WITH IIF(xbsk < sbsk, 1440, 0) + xbsk - sbsk
                                             ENDIF
                                             REPLACE cqts WITH cqss / sjcq
                                             SELECT xjjl_d
                                        ENDIF
                                        REPLACE clfx.qjyc WITH 1
                                   ENDIF
                              ENDIF
                         ELSE
                              IF sjqjdelta1 >  ;
                                 0  ;
                                 .AND.  ;
                                 clfx.cqss +  ;
                                 ss >  ;
                                 sjcq +  ;
                                 sjqjdelta1
                                   IF sjycqj1 = 1
                                        REPLACE clfx.qjyc WITH 1
                                   ELSE
                                        REPLACE clfx.qjyc WITH 2
                                   ENDIF
                              ENDIF
                              IF sjqjdelta2 >  ;
                                 0  ;
                                 .AND.  ;
                                 clfx.cqss +  ;
                                 ss <  ;
                                 sjcq -  ;
                                 sjqjdelta1
                                   IF sjycqj2 = 1
                                        REPLACE clfx.qjyc WITH 3
                                   ELSE
                                        REPLACE clfx.qjyc WITH 4
                                   ENDIF
                              ENDIF
                         ENDIF
                    ENDIF
                    IF clfx.zdcl =  ;
                       85 .AND.  ;
                       clfx.cqss >  ;
                       0
                         REPLACE clfx.zdcl  ;
                                 WITH  ;
                                 98
                    ENDIF
                    IF clfx.qjyc =  ;
                       0
                         DO tryinvalidreg  ;
                            WITH  ;
                            0
                    ENDIF
               CASE kqlb = 92
                    mzaiti = zaiti()
                    nkqlb = IIF(clfx.rgcl >  ;
                            90  ;
                            .AND.  ;
                            clfx.rgcl <  ;
                            95,  ;
                            clfx.rgcl,  ;
                            clfx.zdcl)
                    IF ( .NOT.  ;
                       EMPTY(clfx.bc)  ;
                       .AND.   ;
                       .NOT.  ;
                       EMPTY(bc)  ;
                       .AND.  ;
                       clfx.bc <>  ;
                       bc) .OR.  ;
                       (nkqlb >  ;
                       90 .AND.  ;
                       nkqlb < 95  ;
                       .AND.  ;
                       nkqlb <>  ;
                       kqlb) .OR.  ;
                       (nkqlb =  ;
                       kqlb .AND.  ;
                       clfx.jbattr <>  ;
                       jbattr)
                         IF getskdupval(xjjl_d.kssj,  ;
                            xjjl_d.jssj,  ;
                            clfx.sbsk,  ;
                            clfx.xbsk,  ;
                            0) >  ;
                            0
                              SELECT  ;
                               clfx
                              fx2_rec =  ;
                               RECNO()
                              fx2_zgbh =  ;
                               zgbh
                              fx2_date =  ;
                               CTOD(riqi)
                              APPEND  ;
                               BLANK
                              REPLACE  ;
                               zgbh  ;
                               WITH  ;
                               fx2_zgbh,  ;
                               riqi  ;
                               WITH  ;
                               DTOC(fx2_date),  ;
                               mark  ;
                               WITH  ;
                               1
                              SELECT  ;
                               xjjl_d
                         ELSE
                              SELECT  ;
                               clfx
                              REPLACE  ;
                               bc  ;
                               WITH  ;
                               xjjl_d.bc
                              SELECT  ;
                               xjjl_d
                         ENDIF
                    ENDIF
                    m_bc = IIF(  ;
                           .NOT.  ;
                           EMPTY(clfx.bc),  ;
                           clfx.bc,  ;
                           bc)
                    SELECT time
                    SEEK m_bc 
                    m_zxks = IIF(zjks >  ;
                             0  ;
                             .AND.  ;
                             zjks <  ;
                             delta0,  ;
                             1440 +  ;
                             zjks,  ;
                             zjks)
                    m_zxjs = IIF(zjjs >=  ;
                             zjks,  ;
                             zjjs,  ;
                             1440 +  ;
                             zjjs)
                    SELECT xjjl_d
                    m_ss = xjjl_d.ss
                    m_ts = xjjl_d.ts
                    m_delta = 0
                    DO CASE
                         CASE clfx.sbsk >  ;
                              0  ;
                              .AND.  ;
                              clfx.xbsk >  ;
                              0  ;
                              .AND.  ;
                              clfx.xbsj >  ;
                              0  ;
                              .AND.  ;
                              clfx.xbsj >  ;
                              0
                              m_sbsj =  ;
                               IIF(clfx.sbsj >  ;
                               0  ;
                               .AND.  ;
                               clfx.sbsj <  ;
                               delta0,  ;
                               1440 +  ;
                               clfx.sbsj,  ;
                               clfx.sbsj)
                              m_xbsj =  ;
                               IIF(clfx.xbsj >=  ;
                               clfx.sbsj,  ;
                               clfx.xbsj,  ;
                               clfx.xbsj +  ;
                               1440)
                              m_sbsk =  ;
                               IIF(clfx.sbsk >  ;
                               0  ;
                               .AND.  ;
                               clfx.sbsk <  ;
                               delta0,  ;
                               1440 +  ;
                               clfx.sbsk,  ;
                               clfx.sbsk)
                              m_xbsk =  ;
                               IIF(clfx.xbsk >=  ;
                               clfx.sbsk,  ;
                               clfx.xbsk,  ;
                               clfx.xbsk +  ;
                               1440)
                              m_kssj =  ;
                               IIF(kssj >  ;
                               0  ;
                               .AND.  ;
                               kssj <  ;
                               delta0,  ;
                               1440 +  ;
                               kssj,  ;
                               kssj)
                              m_jssj =  ;
                               IIF(jssj >=  ;
                               kssj,  ;
                               jssj,  ;
                               jssj +  ;
                               1440)
                              IF m_jssj >  ;
                                 0  ;
                                 .AND.  ;
                                 m_kssj >  ;
                                 0
                                   DO CASE
                                        CASE m_jssj > m_xbsj
                                             IF m_xbsk > m_xbsj
                                                  m_delta = sjjb2 * INT((m_xbsk - m_xbsj) / sjjb2)
                                             ENDIF
                                        CASE m_kssj < m_sbsj
                                             IF m_sbsj > m_sbsk
                                                  m_delta = sjjb2 * INT((m_sbsj - m_sbsk) / sjjb2)
                                             ENDIF
                                        CASE m_zxks > 0 .AND. m_zxjs > 0 .AND. ABS(m_zxks - m_kssj) < (m_zxjs - m_zxks) / 2 .AND. ABS(m_zxjs - m_jssj) < (m_zxjs - m_zxks) / 2
                                             m_delta = sjjb2 * INT((m_zxjs - m_zxks) / sjjb2)
                                        OTHERWISE
                                             m_delta = -1
                                   ENDCASE
                              ELSE
                                   IF m_xbsk > m_xbsj
                                        m_delta = sjjb2 * INT((m_xbsk - m_xbsj) / sjjb2)
                                   ELSE
                                        m_delta = -1
                                   ENDIF
                              ENDIF
                         CASE clfx.zdcl =  ;
                              98  ;
                              .OR.  ;
                              clfx.rgcl =  ;
                              98
                         OTHERWISE
                              IF clfx.mark =  ;
                                 0  ;
                                 .AND.  ;
                                 mzaiti =  ;
                                 0
                                   m_delta = -1
                              ELSE
                                   IF mzaiti = 1
                                        m_delta = sjjb2 * INT((IIF(clfx.xbsk >= clfx.sbsk, clfx.xbsk, clfx.xbsk + 1440) - clfx.sbsk) / sjjb2)
                                   ENDIF
                              ENDIF
                    ENDCASE
                    DO CASE
                         CASE m_delta <  ;
                              0
                              REPLACE  ;
                               clfx.jbyc  ;
                               WITH  ;
                               1
                         CASE m_delta >  ;
                              0
                              IF sjjbdelta1 >  ;
                                 0
                                   IF xjjl_d.ss > m_delta + sjjbdelta1
                                        REPLACE clfx.jbyc WITH 1
                                        IF sjycjb1 = 2
                                             m_ss = m_delta
                                             m_ts = m_delta / sjcq
                                             REPLACE clfx.jbyc WITH clfx.jbyc + 1
                                        ENDIF
                                   ENDIF
                              ENDIF
                              IF sjjbdelta2 >  ;
                                 0
                                   IF xjjl_d.ss < m_delta - sjjbdelta2
                                        REPLACE clfx.jbyc WITH 3
                                        IF sjycjb2 = 2
                                             m_ss = m_delta
                                             m_ts = m_delta / sjcq
                                             REPLACE clfx.jbyc WITH clfx.jbyc + 1
                                        ENDIF
                                   ENDIF
                              ENDIF
                    ENDCASE
                    REPLACE clfx.jbss  ;
                            WITH  ;
                            clfx.jbss +  ;
                            m_ss,  ;
                            clfx.jbts  ;
                            WITH  ;
                            clfx.jbts +  ;
                            m_ts,  ;
                            clfx.kgss  ;
                            WITH  ;
                            0,  ;
                            clfx.kgts  ;
                            WITH  ;
                            0
                    REPLACE clfx.jbattr  ;
                            WITH  ;
                            jbattr
                    IF  .NOT.  ;
                        EMPTY(bc)  ;
                        .AND.  ;
                        EMPTY(clfx.bc)
                         REPLACE clfx.bc  ;
                                 WITH  ;
                                 bc
                         SELECT time
                         SEEK clfx.bc 
                         SELECT xjjl_d
                         REPLACE clfx.lb  ;
                                 WITH  ;
                                 time.lb
                         IF (clfx.sbsk >  ;
                            0  ;
                            .AND.  ;
                            clfx.xbsk =  ;
                            0)  ;
                            .OR.  ;
                            (clfx.sbsk =  ;
                            0  ;
                            .AND.  ;
                            clfx.xbsk >  ;
                            0)
                              REPLACE  ;
                               clfx.cqss  ;
                               WITH  ;
                               time.ss
                              REPLACE  ;
                               clfx.cqts  ;
                               WITH  ;
                               time.ts
                         ENDIF
                    ENDIF
                    IF (clfx.cdss >  ;
                       0 .OR.  ;
                       clfx.ztss >  ;
                       0) .AND.  ;
                       clfx.jbss >  ;
                       0 .AND.   ;
                       .NOT.  ;
                       EMPTY(clfx.bc)  ;
                       .AND.  ;
                       clfx.sbsk >  ;
                       0 .AND.  ;
                       clfx.xbsk >  ;
                       0
                         mcd = clfx.sbsk -  ;
                               clfx.sbsj
                         mzt = clfx.xbsj -  ;
                               clfx.xbsk
                         IF mcd <=  ;
                            sjcd1
                              REPLACE  ;
                               clfx.cdss  ;
                               WITH  ;
                               0
                              IF clfx.zdcl >=  ;
                                 80  ;
                                 .AND.  ;
                                 clfx.zdcl <=  ;
                                 82
                                   REPLACE clfx.zdcl WITH 98
                              ENDIF
                         ENDIF
                         IF mzt <=  ;
                            sjzt1
                              REPLACE  ;
                               clfx.ztss  ;
                               WITH  ;
                               0
                              IF clfx.zdcl >=  ;
                                 80  ;
                                 .AND.  ;
                                 clfx.zdcl <=  ;
                                 82
                                   REPLACE clfx.zdcl WITH 98
                              ENDIF
                         ENDIF
                    ENDIF
                    IF clfx.jbyc =  ;
                       0
                         DO tryinvalidreg  ;
                            WITH  ;
                            1
                    ENDIF
               CASE kqlb >= 93  ;
                    .AND. kqlb <=  ;
                    94
                    IF clfx.rgcl =  ;
                       0 .AND.  ;
                       clfx.zdcl >=  ;
                       71 .AND.  ;
                       clfx.zdcl <=  ;
                       73
                         SELECT clfx
                         szgbh = zgbh
                         ddate = CTOD(riqi)
                         isbsk = IIF(sbsk >  ;
                                 0,  ;
                                 sbsk,  ;
                                 xbsk)
                         SKIP
                         IF  .NOT.  ;
                             EOF()  ;
                             .AND.  ;
                             szgbh =  ;
                             zgbh  ;
                             .AND.  ;
                             ddate +  ;
                             1 =  ;
                             CTOD(riqi)  ;
                             .AND.  ;
                             zdcl >=  ;
                             71  ;
                             .AND.  ;
                             zdcl <=  ;
                             73  ;
                             .AND.  ;
                             rgcl =  ;
                             0
                              ixbsk =  ;
                               IIF(sbsk >  ;
                               0,  ;
                               sbsk,  ;
                               xbsk)
                              IF ABS(xjjl_d.ss -  ;
                                 (ixbsk +  ;
                                 1440 -  ;
                                 isbsk)) <  ;
                                 120
                                   DELETE
                                   SKIP -1
                                   REPLACE sbsk WITH isbsk, xbsk WITH ixbsk
                                   IF getbctab() > 0
                                        DO tryxrjbbc WITH sbsk, xbsk, 0
                                   ENDIF
                              ELSE
                                   SKIP -1
                              ENDIF
                         ELSE
                              SKIP - ;
                               1
                         ENDIF
                         SELECT xjjl_d
                    ENDIF
                    IF kssj > 0  ;
                       .AND. jssj >  ;
                       0
                         = zaiti()
                    ENDIF
                    IF clfx.sbsk >  ;
                       0 .AND.  ;
                       clfx.xbsk >  ;
                       0
                         mflag2 =  ;
                          .F.
                         sk_kssj =  ;
                          1440 +  ;
                          clfx.sbsk
                         sk_jssj =  ;
                          1440 +  ;
                          clfx.xbsk
                         sk_jssj =  ;
                          IIF(sk_jssj <  ;
                          sk_kssj,  ;
                          1440 +  ;
                          sk_jssj,  ;
                          sk_jssj)
                         IF kssj >  ;
                            0  ;
                            .AND.  ;
                            jssj >  ;
                            0
                              dj_kssj =  ;
                               1440 +  ;
                               kssj
                              dj_jssj =  ;
                               1440 +  ;
                               jssj
                              dj_jssj =  ;
                               IIF(dj_jssj <  ;
                               dj_kssj,  ;
                               1440 +  ;
                               dj_jssj,  ;
                               dj_jssj)
                              IF (dj_kssj <  ;
                                 sk_kssj  ;
                                 .AND.  ;
                                 dj_jssj <  ;
                                 sk_kssj)  ;
                                 .OR.  ;
                                 (dj_jssj >  ;
                                 sk_jssj  ;
                                 .AND.  ;
                                 dj_jssj >  ;
                                 sk_jssj)
                                   mflag2 = .T.
                              ENDIF
                         ELSE
                              sk_ss =  ;
                               sk_jssj -  ;
                               sk_kssj
                              IF ss <  ;
                                 0.4  *  ;
                                 sk_ss  ;
                                 .OR.  ;
                                 ss >  ;
                                 1.6  *  ;
                                 sk_ss
                                   mflag2 = .T.
                              ENDIF
                         ENDIF
                         IF mflag2
                              mrec2 =  ;
                               RECNO()
                              REPLACE  ;
                               mark  ;
                               WITH  ;
                               0
                              mflag3 =  ;
                               .F.
                              DO WHILE   ;
                                 .NOT.  ;
                                 EOF()  ;
                                 .AND.  ;
                                 zgbh= ;
                                 mzgbh  ;
                                 .AND.  ;
                                 CTOD(riqi)= ;
                                 mdate  ;
                                 .AND.   ;
                                 .NOT.  ;
                                 pub_escape
                                   IF mark = 1 .OR. mrec2 = RECNO()
                                        SKIP
                                        LOOP
                                   ENDIF
                                   IF kqlb >= 93 .AND. kqlb <= 94
                                        mflag3 = .T.
                                   ENDIF
                                   EXIT
                              ENDDO
                              IF   ;
                               .NOT.  ;
                               mflag3
                                   SELECT clfx
                                   SKIP
                                   IF  .NOT. EOF() .AND. zgbh = mzgbh .AND. CTOD(riqi) = mdate .AND. nrec <> RECNO()
                                        nrec = RECNO()
                                        mzgbh = zgbh
                                        mdate = CTOD(riqi)
                                        mkqlb = IIF(rgcl > 0, rgcl, zdcl)
                                        SELECT xjjl_d
                                        SET EXACT OFF
                                        SEEK clfx.zgbh + clfx.riqi 
                                        SET EXACT ON
                                        LOOP
                                   ENDIF
                                   nrec = 0
                                   SKIP -1
                                   SELECT xjjl_d
                                   GOTO mrec2
                              ENDIF
                              REPLACE  ;
                               mark  ;
                               WITH  ;
                               1
                         ENDIF
                    ENDIF
                    nkqlb = IIF(clfx.rgcl >  ;
                            90  ;
                            .AND.  ;
                            clfx.rgcl <  ;
                            95,  ;
                            clfx.rgcl,  ;
                            clfx.zdcl)
                    IF (nkqlb >  ;
                       90 .AND.  ;
                       nkqlb < 95  ;
                       .AND.  ;
                       nkqlb <>  ;
                       kqlb) .OR.  ;
                       (nkqlb =  ;
                       kqlb .AND.  ;
                       clfx.jbattr <>  ;
                       jbattr)
                         SELECT clfx
                         fx2_rec =  ;
                          RECNO()
                         fx2_zgbh =  ;
                          zgbh
                         fx2_date =  ;
                          CTOD(riqi)
                         APPEND BLANK
                         REPLACE zgbh  ;
                                 WITH  ;
                                 fx2_zgbh,  ;
                                 riqi  ;
                                 WITH  ;
                                 DTOC(fx2_date),  ;
                                 mark  ;
                                 WITH  ;
                                 1
                         SELECT xjjl_d
                    ENDIF
                    m_zjks = 0
                    m_zjjs = 0
                    IF clfx.sbsj >  ;
                       0 .AND.  ;
                       clfx.xbsj >  ;
                       0 .AND.  ;
                       clfx.sbsk >  ;
                       0 .AND.  ;
                       clfx.xbsk >  ;
                       0
                         SELECT time
                         SEEK clfx.bc 
                         SELECT xjjl_d
                         m_zjks =  ;
                          time.zjks
                         m_zjjs =  ;
                          IIF(time.zjks >  ;
                          time.zjjs,  ;
                          1440,  ;
                          0) +  ;
                          time.zjjs
                         msbsj = clfx.sbsj
                         mxbsj = IIF(clfx.xbsj >=  ;
                                 clfx.sbsj,  ;
                                 clfx.xbsj,  ;
                                 clfx.xbsj +  ;
                                 1440)
                         mkssj = kssj
                         mjssj = IIF(jssj >=  ;
                                 kssj,  ;
                                 jssj,  ;
                                 jssj +  ;
                                 1440)
                         IF ((mkssj <  ;
                            msbsj  ;
                            .AND.  ;
                            ABS(msbsj -  ;
                            mjssj) <  ;
                            ss /  ;
                            3)  ;
                            .OR.  ;
                            (mjssj >  ;
                            mxbsj  ;
                            .AND.  ;
                            ABS(mkssj -  ;
                            mxbsj) <  ;
                            ss /  ;
                            3))  ;
                            .AND.  ;
                            clfx.cqss >  ;
                            0
                              REPLACE  ;
                               clfx.cqts  ;
                               WITH  ;
                               time.ts
                         ELSE
                              REPLACE  ;
                               clfx.cqss  ;
                               WITH  ;
                               0,  ;
                               clfx.cqts  ;
                               WITH  ;
                               0
                         ENDIF
                    ENDIF
                    IF  .NOT.  ;
                        EMPTY(bc)
                         REPLACE clfx.bc  ;
                                 WITH  ;
                                 bc
                         SELECT time
                         SEEK clfx.bc 
                         SELECT xjjl_d
                         REPLACE clfx.lb  ;
                                 WITH  ;
                                 time.lb
                         m_zjks =  ;
                          time.zjks
                         m_zjjs =  ;
                          IIF(time.zjks >  ;
                          time.zjjs,  ;
                          1440,  ;
                          0) +  ;
                          time.zjjs
                    ENDIF
                    REPLACE clfx.cqss  ;
                            WITH  ;
                            0,  ;
                            clfx.cqts  ;
                            WITH  ;
                            0,  ;
                            clfx.xrcolor  ;
                            WITH  ;
                            rgb_holiday
                    m_ss = xjjl_d.ss
                    m_ts = xjjl_d.ts
                    m_delta = 0
                    DO CASE
                         CASE clfx.sbsk >  ;
                              0  ;
                              .AND.  ;
                              clfx.xbsk >  ;
                              0
                              m_sbsk =  ;
                               IIF(clfx.sbsk >  ;
                               0  ;
                               .AND.  ;
                               clfx.sbsk <  ;
                               120,  ;
                               1440 +  ;
                               clfx.sbsk,  ;
                               clfx.sbsk)
                              m_xbsk =  ;
                               IIF(clfx.xbsk >=  ;
                               clfx.sbsk,  ;
                               clfx.xbsk,  ;
                               clfx.xbsk +  ;
                               1440)
                              m_delta =  ;
                               sjjb2 *  ;
                               INT((m_xbsk -  ;
                               m_sbsk) /  ;
                               sjjb2)
                         CASE clfx.zdcl =  ;
                              98  ;
                              .OR.  ;
                              clfx.rgcl =  ;
                              98
                         OTHERWISE
                              IF clfx.mark =  ;
                                 0
                                   m_delta = -1
                              ENDIF
                    ENDCASE
                    DO CASE
                         CASE m_delta <  ;
                              0
                              REPLACE  ;
                               clfx.jbyc  ;
                               WITH  ;
                               1
                         CASE m_delta >  ;
                              0  ;
                              .AND.  ;
                              clfx.jbyc =  ;
                              0
                              IF sjjbdelta1 >  ;
                                 0
                                   IF xjjl_d.ss > m_delta + sjjbdelta1
                                        REPLACE clfx.jbyc WITH 1
                                        IF sjycjb1 = 2
                                             m_ss = m_delta
                                             m_ts = m_delta / sjcq
                                             REPLACE clfx.jbyc WITH clfx.jbyc + 1
                                        ENDIF
                                   ENDIF
                              ENDIF
                              IF sjjbdelta2 >  ;
                                 0
                                   IF xjjl_d.ss < m_delta - sjjbdelta2
                                        REPLACE clfx.jbyc WITH 3
                                        IF sjycjb2 = 2
                                             m_ss = m_delta
                                             m_ts = m_delta / sjcq
                                             REPLACE clfx.jbyc WITH clfx.jbyc + 1
                                        ENDIF
                                   ENDIF
                              ENDIF
                         CASE m_delta >  ;
                              0  ;
                              .AND.  ;
                              clfx.jbyc >  ;
                              0
                              IF sjjbdelta1 >  ;
                                 0
                                   IF xjjl_d.ss > m_delta + sjjbdelta1
                                        IF clfx.jbyc = 2
                                             m_ss = 0
                                             m_ts = 0
                                        ENDIF
                                   ENDIF
                              ENDIF
                              IF sjjbdelta2 >  ;
                                 0
                                   IF xjjl_d.ss < m_delta - sjjbdelta2
                                        IF clfx.jbyc = 4
                                             m_ss = 0
                                             m_ts = 0
                                        ENDIF
                                   ENDIF
                              ENDIF
                    ENDCASE
                    REPLACE clfx.jbss  ;
                            WITH  ;
                            clfx.jbss +  ;
                            m_ss,  ;
                            clfx.jbts  ;
                            WITH  ;
                            clfx.jbts +  ;
                            m_ts,  ;
                            clfx.kgss  ;
                            WITH  ;
                            0,  ;
                            clfx.kgts  ;
                            WITH  ;
                            0
                    REPLACE clfx.cdss  ;
                            WITH  ;
                            0,  ;
                            clfx.ztss  ;
                            WITH  ;
                            0
                    REPLACE clfx.jbattr  ;
                            WITH  ;
                            jbattr
                    IF clfx.jbyc =  ;
                       0
                         REPLACE clfx.zdcl  ;
                                 WITH  ;
                                 IIF(kqlb =  ;
                                 93,  ;
                                 1,  ;
                                 15)
                         DO tryinvalidreg  ;
                            WITH  ;
                            1
                    ENDIF
               CASE kqlb = 80
                    IF clfx.zdcl =  ;
                       98 .AND.  ;
                       LEN(TRIM(bc)) >  ;
                       2
                         EXIT
                    ENDIF
                    REPLACE clfx.cdss  ;
                            WITH  ;
                            ss,  ;
                            clfx.kgss  ;
                            WITH  ;
                            0,  ;
                            clfx.kgts  ;
                            WITH  ;
                            0
                    IF  .NOT.  ;
                        EMPTY(bc)
                         REPLACE clfx.bc  ;
                                 WITH  ;
                                 bc
                         SELECT time
                         SEEK clfx.bc 
                         SELECT xjjl_d
                         REPLACE clfx.lb  ;
                                 WITH  ;
                                 time.lb
                         REPLACE clfx.cqss  ;
                                 WITH  ;
                                 time.ss
                         REPLACE clfx.cqts  ;
                                 WITH  ;
                                 time.ts
                    ENDIF
               CASE kqlb = 81
                    IF clfx.zdcl =  ;
                       98 .AND.  ;
                       LEN(TRIM(bc)) >  ;
                       2
                         EXIT
                    ENDIF
                    REPLACE clfx.ztss  ;
                            WITH  ;
                            ss,  ;
                            clfx.kgss  ;
                            WITH  ;
                            0,  ;
                            clfx.kgts  ;
                            WITH  ;
                            0
                    IF  .NOT.  ;
                        EMPTY(bc)
                         REPLACE clfx.bc  ;
                                 WITH  ;
                                 bc
                         SELECT time
                         SEEK clfx.bc 
                         SELECT xjjl_d
                         REPLACE clfx.lb  ;
                                 WITH  ;
                                 time.lb
                         REPLACE clfx.cqss  ;
                                 WITH  ;
                                 time.ss
                         REPLACE clfx.cqts  ;
                                 WITH  ;
                                 time.ts
                    ENDIF
               CASE kqlb = 82
                    IF clfx.zdcl =  ;
                       98 .AND.  ;
                       LEN(TRIM(bc)) >  ;
                       2
                         EXIT
                    ENDIF
                    REPLACE clfx.ztss  ;
                            WITH  ;
                            ss,  ;
                            clfx.kgss  ;
                            WITH  ;
                            0,  ;
                            clfx.kgts  ;
                            WITH  ;
                            0
                    IF  .NOT.  ;
                        EMPTY(bc)
                         REPLACE clfx.bc  ;
                                 WITH  ;
                                 bc
                         SELECT time
                         SEEK clfx.bc 
                         SELECT xjjl_d
                         REPLACE clfx.lb  ;
                                 WITH  ;
                                 time.lb
                         REPLACE clfx.cqss  ;
                                 WITH  ;
                                 time.ss
                         REPLACE clfx.cqts  ;
                                 WITH  ;
                                 time.ts
                    ENDIF
               CASE kqlb = 85
                    IF clfx.zdcl =  ;
                       98 .AND.  ;
                       LEN(TRIM(bc)) >  ;
                       2
                         EXIT
                    ENDIF
                    IF  .NOT.  ;
                        EMPTY(bc)
                         REPLACE clfx.bc  ;
                                 WITH  ;
                                 bc
                         SELECT time
                         SEEK clfx.bc 
                         SELECT xjjl_d
                         REPLACE clfx.lb  ;
                                 WITH  ;
                                 time.lb
                    ENDIF
                    REPLACE clfx.kgss  ;
                            WITH  ;
                            ss,  ;
                            clfx.kgts  ;
                            WITH  ;
                            ts
                    REPLACE clfx.cqss  ;
                            WITH  ;
                            0,  ;
                            clfx.cqts  ;
                            WITH  ;
                            0,  ;
                            clfx.cdss  ;
                            WITH  ;
                            0,  ;
                            clfx.ztss  ;
                            WITH  ;
                            0,  ;
                            clfx.jbss  ;
                            WITH  ;
                            0,  ;
                            clfx.jbts  ;
                            WITH  ;
                            0,  ;
                            clfx.qjss  ;
                            WITH  ;
                            0,  ;
                            clfx.qjts  ;
                            WITH  ;
                            0
               CASE kqlb = 97
                    SELECT clfx
                    m_st = sbsk
                    m_et = IIF(xbsk <  ;
                           sbsk,  ;
                           1440,  ;
                           0) +  ;
                           xbsk
                    e_st = xjjl_d.kssj
                    e_et = IIF(xjjl_d.jssj <  ;
                           xjjl_d.kssj,  ;
                           1440,  ;
                           0) +  ;
                           xjjl_d.jssj
                    IF m_et -  ;
                       xjjl_d.ss -  ;
                       m_st > 0.8  *  ;
                       sjcq
                         IF e_st =  ;
                            0  ;
                            .AND.  ;
                            e_et =  ;
                            0
                              REPLACE  ;
                               xbsk  ;
                               WITH  ;
                               IIF(m_et -  ;
                               xjjl_d.ss >  ;
                               1440,  ;
                               m_et -  ;
                               xjjl_d.ss -  ;
                               1440,  ;
                               m_et -  ;
                               xjjl_d.ss)
                         ELSE
                              DO CASE
                                   CASE ABS(e_st - m_st) < ABS(e_et - m_et)
                                        REPLACE sbsk WITH IIF(e_et > 1440, e_et - 440, e_et)
                                   CASE ABS(e_st - m_st) > ABS(e_et - m_et)
                                        REPLACE xbsk WITH e_st
                              ENDCASE
                         ENDIF
                    ENDIF
                    IF  .NOT.  ;
                        (EMPTY(bc)  ;
                        .AND.  ;
                        sbsk = 0  ;
                        .AND.  ;
                        xbsk = 0  ;
                        .AND.  ;
                        zdcl = 0  ;
                        .AND.  ;
                        rgcl =  ;
                        0)
                         APPEND BLANK
                    ENDIF
                    REPLACE zgbh  ;
                            WITH  ;
                            mzgbh,  ;
                            riqi  ;
                            WITH  ;
                            DTOC(mdate)
                    SELECT xjjl_d
                    REPLACE clfx.cqss  ;
                            WITH  ;
                            ss,  ;
                            clfx.cqts  ;
                            WITH  ;
                            ts
                    IF  .NOT.  ;
                        EMPTY(bc)
                         REPLACE clfx.bc  ;
                                 WITH  ;
                                 bc
                         SELECT time
                         SEEK clfx.bc 
                         SELECT xjjl_d
                         REPLACE clfx.lb  ;
                                 WITH  ;
                                 time.lb
                    ENDIF
                    REPLACE clfx.sbsk  ;
                            WITH  ;
                            kssj
                    REPLACE clfx.xbsk  ;
                            WITH  ;
                            jssj
               CASE kqlb = 98
                    IF kssj > 0  ;
                       .AND. jssj >  ;
                       0
                         = zaiti()
                    ENDIF
                    IF clfx.zdcl =  ;
                       1 .OR.  ;
                       clfx.zdcl =  ;
                       15
                         REPLACE clfx.qjss  ;
                                 WITH  ;
                                 0,  ;
                                 clfx.qjts  ;
                                 WITH  ;
                                 0
                    ENDIF
                    REPLACE clfx.zdcl  ;
                            WITH  ;
                            clfx.rgcl
                    REPLACE clfx.rgcl  ;
                            WITH  ;
                            98
                    REPLACE clfx.cqss  ;
                            WITH  ;
                            ss,  ;
                            clfx.cqts  ;
                            WITH  ;
                            ts
                    IF  .NOT.  ;
                        EMPTY(bc)
                         REPLACE clfx.bc  ;
                                 WITH  ;
                                 bc
                         SELECT time
                         SEEK clfx.bc 
                         SELECT xjjl_d
                         REPLACE clfx.lb  ;
                                 WITH  ;
                                 time.lb
                    ENDIF
                    SELECT clfx
                    IF xbsk = 0
                         SKIP
                         mxbsk = 0
                         IF  .NOT.  ;
                             EOF()  ;
                             .AND.  ;
                             rgcl =  ;
                             0  ;
                             .AND.  ;
                             zdcl =  ;
                             73
                              IF sbsk <  ;
                                 delta0  ;
                                 .AND.  ;
                                 sbsk >  ;
                                 0
                                   mxbsk = sbsk
                              ENDIF
                              IF xbsk <  ;
                                 delta0  ;
                                 .AND.  ;
                                 xbsk >  ;
                                 0
                                   mxbsk = xbsk
                              ENDIF
                              IF mxbsk >  ;
                                 0
                                   DELETE
                              ENDIF
                         ENDIF
                         SKIP -1
                         IF mxbsk >  ;
                            0
                              REPLACE  ;
                               xbsk  ;
                               WITH  ;
                               mxbsk
                         ENDIF
                    ENDIF
                    SELECT xjjl_d
                    IF kssj > 0  ;
                       .AND. jssj >  ;
                       0 .AND.  ;
                       (clfx.sbsk =  ;
                       0 .OR.  ;
                       clfx.xbsk =  ;
                       0)
                         IF clfx.sbsk =  ;
                            0  ;
                            .AND.  ;
                            clfx.sbsk =  ;
                            0
                              REPLACE  ;
                               clfx.sbsk  ;
                               WITH  ;
                               kssj,  ;
                               clfx.xbsk  ;
                               WITH  ;
                               jssj
                         ELSE
                              mkssj =  ;
                               kssj
                              mjssj =  ;
                               IIF(jssj <  ;
                               kssj,  ;
                               1440 +  ;
                               jssj,  ;
                               jssj)
                              IF clfx.sbsk =  ;
                                 0
                                   IF ABS(mkssj - clfx.xbsk) < ABS(mjssj - clfx.xbsk)
                                        REPLACE clfx.sbsk WITH clfx.xbsk
                                        REPLACE clfx.xbsk WITH jssj
                                   ELSE
                                        REPLACE clfx.sbsk WITH kssj
                                   ENDIF
                              ENDIF
                              IF clfx.xbsk =  ;
                                 0
                                   IF ABS(mkssj - clfx.sbsk) < ABS(mjssj - clfx.sbsk)
                                        REPLACE clfx.xbsk WITH jssj
                                   ELSE
                                        REPLACE clfx.xbsk WITH clfx.sbsk
                                        REPLACE clfx.sbsk WITH kssj
                                   ENDIF
                              ENDIF
                         ENDIF
                    ENDIF
                    REPLACE clfx.kgss  ;
                            WITH  ;
                            0,  ;
                            clfx.kgts  ;
                            WITH  ;
                            0,  ;
                            clfx.cdss  ;
                            WITH  ;
                            0,  ;
                            clfx.ztss  ;
                            WITH  ;
                            0
                    IF clfx.zdcl >=  ;
                       80 .AND.  ;
                       clfx.zdcl <=  ;
                       85
                         REPLACE clfx.zdcl  ;
                                 WITH  ;
                                 0
                    ENDIF
               CASE kqlb = 43
                    REPLACE clfx.cqts  ;
                            WITH  ;
                            time.ts
               OTHERWISE
                    REPLACE mark  ;
                            WITH  ;
                            0
          ENDCASE
          IF kqlb < 75 .OR. kqlb >  ;
             76
               IF (clfx.zdcl = 1  ;
                  .OR. clfx.zdcl =  ;
                  15) .AND.  ;
                  clfx.jbyc > 0
                    REPLACE clfx.zdcl  ;
                            WITH  ;
                            0,  ;
                            clfx.qjss  ;
                            WITH  ;
                            0,  ;
                            clfx.qjts  ;
                            WITH  ;
                            0
               ENDIF
               IF kqlb <>  ;
                  clfx.rgcl .AND.  ;
                  kqlb <>  ;
                  clfx.zdcl
                    IF clfx.rgcl =  ;
                       98
                         REPLACE clfx.zdcl  ;
                                 WITH  ;
                                 kqlb
                    ELSE
                         IF clfx.rgcl >  ;
                            0
                              REPLACE  ;
                               clfx.zdcl  ;
                               WITH  ;
                               clfx.rgcl
                         ENDIF
                         REPLACE clfx.rgcl  ;
                                 WITH  ;
                                 kqlb
                    ENDIF
               ENDIF
          ENDIF
          IF clfx.mark = 1 .AND.  ;
             fx2_rec > 0
               SELECT clfx
               GOTO fx2_rec
               SELECT xjjl_d
          ENDIF
          SKIP
     ENDDO
     SELECT clfx
ENDSCAN
SELECT xjjl_d
SCAN
     IF mark = 1 .OR.  .NOT.  ;
        ((kqlb > 0 .AND. kqlb <  ;
        31) .OR. (kqlb >= 92  ;
        .AND. kqlb <= 94))
          LOOP
     ENDIF
     SELECT clfx
     APPEND BLANK
     REPLACE zgbh WITH  ;
             xjjl_d.zgbh, riqi  ;
             WITH xjjl_d.riqi,  ;
             rgcl WITH  ;
             xjjl_d.kqlb, bc WITH  ;
             xjjl_d.bc
     REPLACE jbattr WITH  ;
             xjjl_d.jbattr
     DO CASE
          CASE xjjl_d.kqlb > 0  ;
               .AND. xjjl_d.kqlb <  ;
               31
               REPLACE qjss WITH  ;
                       xjjl_d.ss,  ;
                       qjts WITH  ;
                       xjjl_d.ts,  ;
                       qjyc WITH  ;
                       1
          CASE xjjl_d.kqlb >= 92  ;
               .AND. xjjl_d.kqlb <=  ;
               94
               REPLACE jbss WITH  ;
                       xjjl_d.ss,  ;
                       jbts WITH  ;
                       xjjl_d.ts,  ;
                       jbyc WITH  ;
                       1
     ENDCASE
ENDSCAN
RETURN
ENDPROC
**
FUNCTION TotalCQSS
tc_area = ALLTRIM(STR(SELECT()))
SELECT clfx
tc_recno = RECNO()
tc_zgbh = zgbh
tc_riqi = riqi
tc_ret = cqss
SKIP -1
DO WHILE  .NOT. BOF() .AND.  ;
   tc_zgbh=zgbh .AND. tc_riqi= ;
   riqi
     tc_ret = tc_ret + cqss
     SKIP -1
ENDDO
GOTO tc_recno
SKIP
DO WHILE  .NOT. EOF() .AND.  ;
   tc_zgbh=zgbh .AND. tc_riqi= ;
   riqi
     tc_ret = tc_ret + cqss
     SKIP
ENDDO
GOTO tc_recno
select &tc_Area
RETURN tc_ret
ENDFUNC
**
PROCEDURE fenxi3
SELECT clfx
SET RELATION TO bc INTO time
SET RELATION ADDITIVE TO zgbh INTO zg
GOTO TOP
SCAN FOR  .NOT. pub_escape
     IF pub_language
          obj_form4.txt_msg1.value =  ;
           "The second scanning..." +  ;
           zgbh
     ELSE
          obj_form4.txt_msg1.value =  ;
           "第二趟扫描..." + zgbh +  ;
           " " + riqi
     ENDIF
     IF zdcl = 98 .OR. rgcl = 98
          LOOP
     ENDIF
     SELECT xjjl_d
     SEEK clfx.zgbh + clfx.riqi +  ;
          "40" 
     IF FOUND()
          SELECT clfx
          DELETE
          LOOP
     ENDIF
     SELECT xjjl_j
     SEEK STR(MONTH(CTOD(clfx.riqi)),  ;
          2) +  ;
          STR(DAY(CTOD(clfx.riqi)),  ;
          2) 
     IF FOUND()
          IF clfx.zdcl = 0 .AND.  ;
             clfx.rgcl = 0 .AND.  ;
             clfx.sbsk = 0 .AND.  ;
             clfx.xbsk = 0
               REPLACE clfx.zdcl  ;
                       WITH 15,  ;
                       clfx.qjss  ;
                       WITH sjcq,  ;
                       clfx.qjts  ;
                       WITH 1
          ELSE
               mzdcl = clfx.zdcl
               IF mzdcl >= 80  ;
                  .AND. mzdcl <=  ;
                  85 .AND. (zg.mk =  ;
                  "3" .OR. zg.mk =  ;
                  "5" .OR. zg.mk =  ;
                  "6" .OR. zg.mk =  ;
                  "7")
                    REPLACE clfx.zdcl  ;
                            WITH  ;
                            98
                    REPLACE clfx.cdss  ;
                            WITH  ;
                            0,  ;
                            clfx.ztss  ;
                            WITH  ;
                            0,  ;
                            clfx.kgss  ;
                            WITH  ;
                            0,  ;
                            clfx.kgts  ;
                            WITH  ;
                            0
               ENDIF
               IF mzdcl = 85  ;
                  .AND. (zg.mk =  ;
                  "3" .OR. zg.mk =  ;
                  "5" .OR. zg.mk =  ;
                  "6" .OR. zg.mk =  ;
                  "7")
                    IF clfx.xbsk >  ;
                       0 .AND.  ;
                       clfx.sbsk >  ;
                       0
                         REPLACE clfx.cqss  ;
                                 WITH  ;
                                 IIF(clfx.xbsk >  ;
                                 clfx.sbsk,  ;
                                 clfx.xbsk -  ;
                                 clfx.sbsk,  ;
                                 1440 +  ;
                                 clfx.xbsk -  ;
                                 clfx.sbsk)
                         REPLACE clfx.cqts  ;
                                 WITH  ;
                                 clfx.cqss /  ;
                                 sjcq
                    ENDIF
               ENDIF
          ENDIF
          SELECT clfx
          LOOP
     ENDIF
     SELECT xjjl_w
     SEEK clfx.zgbh 
     IF FOUND()
          szqno = getzqxr()
          IF szqno <> "-1"
               nzqno = VAL(szqno)
               szq = "ZQ" + szqno
               sksrq = "KSRQ" +  ;
                       szqno
               IF clfx.RIQI>=&sKsRq AND;
&sZq>0
                    N = ctod(clfx.RIQI);
- ctod(&sKsRq)
                    m = 'W'+LTRIM(STR(N-&sZq*INT(N/&sZq)+nZqNo*31))
                    IF '1'=&m
                         IF clfx.zdcl =  ;
                            0  ;
                            .AND.  ;
                            clfx.rgcl =  ;
                            0  ;
                            .AND.  ;
                            clfx.sbsk =  ;
                            0  ;
                            .AND.  ;
                            clfx.xbsk =  ;
                            0
                              REPLACE  ;
                               clfx.zdcl  ;
                               WITH  ;
                               1,  ;
                               clfx.qjss  ;
                               WITH  ;
                               sjcq,  ;
                               clfx.qjts  ;
                               WITH  ;
                               1
                         ELSE
                              mzdcl =  ;
                               clfx.zdcl
                              IF mzdcl >=  ;
                                 80  ;
                                 .AND.  ;
                                 mzdcl <=  ;
                                 85  ;
                                 .AND.  ;
                                 (zg.mk =  ;
                                 "2"  ;
                                 .OR.  ;
                                 zg.mk =  ;
                                 "4"  ;
                                 .OR.  ;
                                 zg.mk =  ;
                                 "6"  ;
                                 .OR.  ;
                                 zg.mk =  ;
                                 "7")
                                   REPLACE clfx.zdcl WITH 98
                                   REPLACE clfx.cdss WITH 0, clfx.ztss WITH 0, clfx.kgss WITH 0, clfx.kgts WITH 0
                              ENDIF
                              IF mzdcl =  ;
                                 85  ;
                                 .AND.  ;
                                 (zg.mk =  ;
                                 "2"  ;
                                 .OR.  ;
                                 zg.mk =  ;
                                 "4"  ;
                                 .OR.  ;
                                 zg.mk =  ;
                                 "6"  ;
                                 .OR.  ;
                                 zg.mk =  ;
                                 "7")
                                   IF clfx.xbsk > 0 .AND. clfx.sbsk > 0
                                        REPLACE clfx.cqss WITH IIF(clfx.xbsk > clfx.sbsk, clfx.xbsk - clfx.sbsk, 1440 + clfx.xbsk - clfx.sbsk)
                                        REPLACE clfx.cqts WITH clfx.cqss / sjcq
                                   ENDIF
                              ENDIF
                         ENDIF
                    ENDIF
               ENDIF
               SELECT clfx
               LOOP
          ENDIF
     ENDIF
     SELECT xjjl_s
     m = STR(DOW(CTOD(clfx.riqi)),  ;
         1)
     n = "W" + m
     IF &n = 1
          IF clfx.zdcl = 0 .AND.  ;
             clfx.rgcl = 0 .AND.  ;
             clfx.sbsk = 0 .AND.  ;
             clfx.xbsk = 0
               REPLACE clfx.zdcl  ;
                       WITH 1,  ;
                       clfx.qjss  ;
                       WITH sjcq,  ;
                       clfx.qjts  ;
                       WITH 1
          ELSE
               mzdcl = clfx.zdcl
               IF mzdcl >= 80  ;
                  .AND. mzdcl <=  ;
                  85 .AND. (zg.mk =  ;
                  "2" .OR. zg.mk =  ;
                  "4" .OR. zg.mk =  ;
                  "6" .OR. zg.mk =  ;
                  "7")
                    REPLACE clfx.zdcl  ;
                            WITH  ;
                            98
                    REPLACE clfx.cdss  ;
                            WITH  ;
                            0,  ;
                            clfx.ztss  ;
                            WITH  ;
                            0,  ;
                            clfx.kgss  ;
                            WITH  ;
                            0,  ;
                            clfx.kgts  ;
                            WITH  ;
                            0
               ENDIF
               IF mzdcl = 85  ;
                  .AND. (zg.mk =  ;
                  "2" .OR. zg.mk =  ;
                  "4" .OR. zg.mk =  ;
                  "6" .OR. zg.mk =  ;
                  "7")
                    IF clfx.xbsk >  ;
                       0 .AND.  ;
                       clfx.sbsk >  ;
                       0
                         REPLACE clfx.cqss  ;
                                 WITH  ;
                                 IIF(clfx.xbsk >  ;
                                 clfx.sbsk,  ;
                                 clfx.xbsk -  ;
                                 clfx.sbsk,  ;
                                 1440 +  ;
                                 clfx.xbsk -  ;
                                 clfx.sbsk)
                         REPLACE clfx.cqts  ;
                                 WITH  ;
                                 clfx.cqss /  ;
                                 sjcq
                    ENDIF
               ENDIF
          ENDIF
     ENDIF
     SELECT clfx
ENDSCAN
RETURN
ENDPROC
**
PROCEDURE fenxi4
SELECT clfx
SET RELATION TO bc INTO time
GOTO TOP
mzgbh = ""
mdate = CTOD("")
mlb = ''
DO WHILE  .NOT. EOF() .AND.   ;
   .NOT. pub_escape
     IF pub_language
          obj_form4.txt_msg1.value =  ;
           "The forth scanning..." +  ;
           zgbh + " " + riqi
     ELSE
          obj_form4.txt_msg1.value =  ;
           "第四趟扫描..." + zgbh +  ;
           " " + riqi
     ENDIF
     IF (clfx.zdcl = 1 .OR.  ;
        clfx.zdcl = 15) .AND.  ;
        rgcl > 91 .AND. rgcl <  ;
        95
          REPLACE clfx.zdcl WITH  ;
                  0, clfx.qjss  ;
                  WITH 0,  ;
                  clfx.qjts WITH  ;
                  0
     ENDIF
     IF zdcl > 0 .OR. rgcl > 0
          IF cqts = 0 .AND.  ;
             ((zdcl = 98 .AND.  ;
             (rgcl = 0 .OR. rgcl =  ;
             75 .OR. rgcl = 76  ;
             .OR. rgcl = 92))  ;
             .OR. rgcl = 98 .OR.  ;
             ((rgcl = 0 .OR. rgcl =  ;
             92) .AND. zdcl =  ;
             74))
               IF  .NOT.  ;
                   EMPTY(bc)
                    REPLACE cqts  ;
                            WITH  ;
                            time.ts
               ELSE
                    mcqss = IIF(xbsk >=  ;
                            sbsk,  ;
                            xbsk -  ;
                            sbsk,  ;
                            1440 -  ;
                            xbsk -  ;
                            sbsk) -  ;
                            jbss
                    IF mcqss >  ;
                       sjcq
                         REPLACE cqss  ;
                                 WITH  ;
                                 sjcq,  ;
                                 cqts  ;
                                 WITH  ;
                                 1
                    ELSE
                         REPLACE cqss  ;
                                 WITH  ;
                                 mcqss,  ;
                                 cqts  ;
                                 WITH  ;
                                 mcqss /  ;
                                 sjcq
                    ENDIF
               ENDIF
          ENDIF
          mzgbh = zgbh
          mdate = CTOD(riqi)
          mlb = time.lb
          SKIP
          LOOP
     ENDIF
     SKIP
ENDDO
RETURN
ENDPROC
**
FUNCTION JbChk
PARAMETER jbmod
ret = .T.
DO CASE
     CASE jbmod = 1
          DO CASE
               CASE clfx.zdcl > 0  ;
                    .OR.  ;
                    clfx.sbsk = 0  ;
                    .OR.  ;
                    clfx.xbsk =  ;
                    0
                    ret = .T.
               CASE clfx.zdcl = 0  ;
                    .OR.  ;
                    (clfx.zdcl =  ;
                    73 .AND.   ;
                    .NOT.  ;
                    (clfx.sbsk <>  ;
                    0 .AND.  ;
                    clfx.xbsk <>  ;
                    0))
                    ret = .F.
               CASE kssj > 0  ;
                    .AND. jssj =  ;
                    0
                    IF clfx.xbsk >=  ;
                       clfx.sbsk
                         IF kssj <  ;
                            clfx.sbsk -  ;
                            sjjb2
                              ret =  ;
                               .F.
                         ENDIF
                    ELSE
                         IF kssj <  ;
                            720
                              mkssj =  ;
                               kssj +  ;
                               1440
                         ELSE
                              mkssj =  ;
                               kssj
                         ENDIF
                         IF mkssj <  ;
                            clfx.sbsk -  ;
                            sjjb2
                              ret =  ;
                               .F.
                         ENDIF
                    ENDIF
               CASE kssj = 0  ;
                    .AND. jssj >  ;
                    0
                    IF clfx.xbsk >=  ;
                       clfx.sbsk
                         IF jssj >  ;
                            clfx.xbsk +  ;
                            sjjb2
                              ret =  ;
                               .F.
                         ENDIF
                    ELSE
                         IF jssj >  ;
                            720
                              mkssj =  ;
                               jssj -  ;
                               1440
                         ELSE
                              mkssj =  ;
                               jssj
                         ENDIF
                         IF mkssj >  ;
                            clfx.xbsk +  ;
                            sjjb2
                              ret =  ;
                               .F.
                         ENDIF
                    ENDIF
               CASE kssj > 0  ;
                    .AND. jssj >  ;
                    0
                    IF clfx.xbsk >=  ;
                       clfx.sbsk
                         IF kssj <  ;
                            clfx.sbsk -  ;
                            sjjb2
                              ret =  ;
                               .F.
                         ENDIF
                         IF jssj >  ;
                            clfx.xbsk +  ;
                            sjjb2
                              ret =  ;
                               .F.
                         ENDIF
                    ELSE
                         IF kssj <  ;
                            720
                              mkssj =  ;
                               kssj +  ;
                               1440
                         ELSE
                              mkssj =  ;
                               kssj
                         ENDIF
                         IF mkssj <  ;
                            clfx.sbsk -  ;
                            sjjb2
                              ret =  ;
                               .F.
                         ENDIF
                         IF jssj >  ;
                            720
                              mkssj =  ;
                               jssj -  ;
                               1440
                         ELSE
                              mkssj =  ;
                               jssj
                         ENDIF
                         IF mkssj >  ;
                            clfx.xbsk +  ;
                            sjjb2
                              ret =  ;
                               .F.
                         ENDIF
                    ENDIF
               CASE  .NOT.  ;
                     EMPTY(clfx.bc)  ;
                     .AND.  ;
                     clfx.sbsk >  ;
                     0
                    IF clfx.jbss >  ;
                       IIF(clfx.xbsk <  ;
                       time.xbsj,  ;
                       1440, 0) +  ;
                       clfx.xbsk -  ;
                       time.xbsj
                         ret = .F.
                    ENDIF
               OTHERWISE
                    IF clfx.jbss +  ;
                       clfx.cqss >  ;
                       IIF(clfx.xbsk >  ;
                       clfx.sbsk,  ;
                       clfx.xbsk -  ;
                       clfx.sbsk,  ;
                       1440 +  ;
                       clfx.xbsk -  ;
                       clfx.sbsk) -  ;
                       30
                         ret = .F.
                    ENDIF
          ENDCASE
     CASE jbmod = 2
          DO CASE
               CASE clfx.xbsk > 0  ;
                    .AND.  ;
                    clfx.sbsk >  ;
                    0
                    mt = IIF(clfx.xbsk >  ;
                         clfx.sbsk,  ;
                         clfx.xbsk -  ;
                         clfx.sbsk,  ;
                         1440 +  ;
                         clfx.xbsk -  ;
                         clfx.sbsk)
                    IF ss > mt
                         ret = .F.
                    ENDIF
          ENDCASE
ENDCASE
RETURN ret
ENDFUNC
**
PROCEDURE CheckJJR
SELECT xjjl_d
SEEK clfx.zgbh + clfx.riqi + "43" 
IF FOUND()
     SELECT clfx
     RETURN
ENDIF
SEEK clfx.zgbh + clfx.riqi + "15" 
IF FOUND()
     REPLACE clfx.xrcolor WITH  ;
             rgb_holiday
     SELECT clfx
     RETURN
ENDIF
SELECT xjjl_j
SEEK STR(MONTH(CTOD(clfx.riqi)),  ;
     2) +  ;
     STR(DAY(CTOD(clfx.riqi)), 2) 
IF FOUND()
     REPLACE clfx.xrcolor WITH  ;
             rgb_holiday
     SELECT clfx
     RETURN
ENDIF
SELECT xjjl_w
SEEK clfx.zgbh 
IF FOUND()
     szqno = getzqxr()
     IF szqno <> "-1"
          nzqno = VAL(szqno)
          szq = "ZQ" + szqno
          sksrq = "KSRQ" + szqno
          IF clfx.RIQI>=&sKsRq AND &sZq>0;
 
               N = ctod(clfx.RIQI) - ctod(&sKsRq);
   
               m = 'W'+LTRIM(STR(N-&sZq*INT(N/&sZq)+nZqNo*31));
 
               IF '1'=&m
                    REPLACE clfx.xrcolor  ;
                            WITH  ;
                            rgb_holiday
               ENDIF
          ENDIF
          SELECT clfx
          RETURN
     ENDIF
ENDIF
SELECT xjjl_s
m = STR(DOW(CTOD(clfx.riqi)), 1)
n = "W" + m
IF &n = 1
     REPLACE clfx.xrcolor WITH  ;
             rgb_holiday
ENDIF
SELECT clfx
RETURN
ENDPROC
**
FUNCTION CheckSb
mret = .F.
SELECT xjjl_d
SEEK clfx.zgbh + clfx.riqi + "43" 
IF FOUND()
     REPLACE clfx.qjss WITH 0,  ;
             clfx.qjts WITH 0,  ;
             clfx.zdcl WITH 0
     mret = .T.
ENDIF
SELECT clfx
RETURN mret
ENDFUNC
**
PROCEDURE jjrjb
SELECT clfx
SET RELATION TO zgbh INTO zg
GOTO TOP
SCAN FOR  .NOT. pub_escape
     IF pub_language
          obj_form4.txt_msg1.value =  ;
           "Overtime in holiday..." +  ;
           zgbh + " " + riqi
     ELSE
          obj_form4.txt_msg1.value =  ;
           "节假日加班..." + zgbh +  ;
           " " + riqi
     ENDIF
     IF (zg.zdjb <> "3" .AND.  ;
        zg.zdjb <> "5" .AND.  ;
        zg.zdjb <> "6" .AND.  ;
        zg.zdjb <> "7") .OR. sbsk =  ;
        0 .OR. xbsk = 0 .OR. rgcl >  ;
        0
          LOOP
     ENDIF
     SELECT xjjl_j
     SEEK STR(MONTH(CTOD(clfx.riqi)),  ;
          2) +  ;
          STR(DAY(CTOD(clfx.riqi)),  ;
          2) 
     IF FOUND()
          SELECT clfx
          REPLACE jbss WITH sjjb2 *  ;
                  INT((xbsk -  ;
                  sbsk + IIF(xbsk >  ;
                  sbsk, 0, 1440)) /  ;
                  sjjb2), jbts  ;
                  WITH jbss /  ;
                  sjcq
          REPLACE cqss WITH 0,  ;
                  cqts WITH 0
          REPLACE cdss WITH 0,  ;
                  ztss WITH 0,  ;
                  kgss WITH 0,  ;
                  kgts WITH 0
          REPLACE rgcl WITH 0
          REPLACE zdcl WITH 94
     ENDIF
     SELECT clfx
ENDSCAN
RETURN
ENDPROC
**
PROCEDURE xrjb
SELECT clfx
SET RELATION TO zgbh INTO zg
GOTO TOP
SCAN FOR  .NOT. pub_escape
     IF pub_language
          obj_form4.txt_msg1.value =  ;
           "Overtime in off day..." +  ;
           zgbh + " " + riqi
     ELSE
          obj_form4.txt_msg1.value =  ;
           "休日加班..." + zgbh +  ;
           " " + riqi
     ENDIF
     IF (zg.zdjb <> "2" .AND.  ;
        zg.zdjb <> "4" .AND.  ;
        zg.zdjb <> "6" .AND.  ;
        zg.zdjb <> "7") .OR. sbsk =  ;
        0 .OR. xbsk = 0 .OR. zdcl =  ;
        94 .OR. rgcl > 0
          LOOP
     ENDIF
     IF rgcl = 98
          LOOP
     ENDIF
     SELECT xjjl_d
     SEEK clfx.zgbh + clfx.riqi +  ;
          "1" 
     IF  .NOT. EOF()
          SELECT clfx
          REPLACE jbss WITH sjjb2 *  ;
                  INT((xbsk -  ;
                  sbsk + IIF(xbsk >  ;
                  sbsk, 0, 1440)) /  ;
                  sjjb2), jbts  ;
                  WITH jbss /  ;
                  sjcq
          REPLACE cqss WITH 0,  ;
                  cqts WITH 0
          REPLACE cdss WITH 0,  ;
                  ztss WITH 0,  ;
                  kgss WITH 0,  ;
                  kgts WITH 0
          REPLACE rgcl WITH 0
          REPLACE zdcl WITH 93
          LOOP
     ENDIF
     SELECT xjjl_w
     SEEK clfx.zgbh 
     IF  .NOT. EOF()
          szqno = getzqxr()
          IF szqno <> "-1"
               nzqno = VAL(szqno)
               szq = "ZQ" + szqno
               sksrq = "KSRQ" +  ;
                       szqno
               IF clfx.RIQI>=&sKsRq AND;
&sZq>0  
                    N = ctod(clfx.RIQI);
- ctod(&sKsRq)    
                    m = 'W'+LTRIM(STR(N-&sZq*INT(N/&sZq)+nZqNo*31));
 
                    IF '1'=&m
                         SELECT clfx
                         REPLACE jbss  ;
                                 WITH  ;
                                 sjjb2 *  ;
                                 INT((xbsk -  ;
                                 sbsk +  ;
                                 IIF(xbsk >  ;
                                 sbsk,  ;
                                 0,  ;
                                 1440)) /  ;
                                 sjjb2),  ;
                                 jbts  ;
                                 WITH  ;
                                 jbss /  ;
                                 sjcq
                         REPLACE cqss  ;
                                 WITH  ;
                                 0,  ;
                                 cqts  ;
                                 WITH  ;
                                 0
                         REPLACE rgcl  ;
                                 WITH  ;
                                 0
                         REPLACE zdcl  ;
                                 WITH  ;
                                 93
                    ENDIF
               ENDIF
               SELECT clfx
               LOOP
          ENDIF
     ENDIF
     SELECT xjjl_s
     m = STR(DOW(CTOD(clfx.riqi)),  ;
         1)
     n = "W" + m
     IF &n = 1
          SELECT clfx
          REPLACE jbss WITH sjjb2 *  ;
                  INT((xbsk -  ;
                  sbsk + IIF(xbsk >  ;
                  sbsk, 0, 1440)) /  ;
                  sjjb2), jbts  ;
                  WITH jbss /  ;
                  sjcq
          REPLACE cqss WITH 0,  ;
                  cqts WITH 0
          REPLACE cdss WITH 0,  ;
                  ztss WITH 0,  ;
                  kgss WITH 0,  ;
                  kgts WITH 0
          REPLACE rgcl WITH 0
          REPLACE zdcl WITH 93
     ENDIF
     SELECT clfx
ENDSCAN
RETURN
ENDPROC
**
PROCEDURE jjrkq
mnoxrsk = getantenv("FXPARA",  ;
          "NOXRSK")
SELECT clfx
GOTO TOP
SCAN FOR  .NOT. pub_escape
     IF pub_language
          obj_form4.txt_msg1.value =  ;
           "Un-strict attendance..." +  ;
           zgbh + " " + riqi
     ELSE
          obj_form4.txt_msg1.value =  ;
           "非严格考勤..." + zgbh +  ;
           " " + riqi
     ENDIF
     IF sjxrjb > 0 .AND. jbss > 0  ;
        .AND.  .NOT. EMPTY(bc)  ;
        .AND. zdcl > 92 .AND.  ;
        zdcl < 95
          SELECT time
          SEEK clfx.bc 
          IF  .NOT. EOF()
               SELECT clfx
               IF jbss > time.ss
                    REPLACE jbss  ;
                            WITH  ;
                            time.ss,  ;
                            jbts  ;
                            WITH  ;
                            time.ts
               ELSE
                    IF time.zjxx >  ;
                       0
                         REPLACE jbss  ;
                                 WITH  ;
                                 jbss -  ;
                                 getskdupval(time.sbsj,  ;
                                 time.xbsj,  ;
                                 IIF(time.zjks <  ;
                                 time.sbsj,  ;
                                 1440 +  ;
                                 time.zjks,  ;
                                 time.zjks),  ;
                                 time.zjjs,  ;
                                 1)
                    ENDIF
                    IF time.zjxx1 >  ;
                       0
                         REPLACE jbss  ;
                                 WITH  ;
                                 jbss -  ;
                                 getskdupval(time.sbsj,  ;
                                 time.xbsj,  ;
                                 IIF(time.zjks1 <  ;
                                 time.sbsj,  ;
                                 1440 +  ;
                                 time.zjks1,  ;
                                 time.zjks1),  ;
                                 time.zjjs1,  ;
                                 1)
                    ENDIF
                    REPLACE jbts  ;
                            WITH  ;
                            jbss /  ;
                            8
               ENDIF
          ENDIF
          SELECT clfx
     ENDIF
     IF mnoxrsk = 1 .AND. xrcolor =  ;
        rgb_holiday
          IF rgcl = 0 .AND. (cqss >  ;
             0 .OR. cqts > 0)
               REPLACE cqss WITH  ;
                       0, cqts  ;
                       WITH 0,  ;
                       zdcl WITH  ;
                       0, cdss  ;
                       WITH 0,  ;
                       ztss WITH  ;
                       0
          ENDIF
     ENDIF
     IF rgcl > 0 .OR. zdcl <> 73  ;
        .OR. sbsk = 0 .OR. xbsk =  ;
        0
          LOOP
     ENDIF
     IF rgcl = 98
          LOOP
     ENDIF
     SELECT xjjl_d
     SEEK clfx.zgbh + clfx.riqi +  ;
          "1" 
     IF FOUND() .AND. (zg.mk =  ;
        "2" .OR. zg.mk = "4" .OR.  ;
        zg.mk = "6" .OR. zg.mk =  ;
        "7")
          REPLACE clfx.cqss WITH  ;
                  IIF(clfx.xbsk >=  ;
                  clfx.sbsk,  ;
                  clfx.xbsk -  ;
                  clfx.sbsk, 1400 +  ;
                  clfx.xbsk -  ;
                  clfx.sbsk)
          REPLACE clfx.cqts WITH  ;
                  IIF(clfx.xbsk >=  ;
                  clfx.sbsk,  ;
                  clfx.xbsk -  ;
                  clfx.sbsk, 1400 +  ;
                  clfx.xbsk -  ;
                  clfx.sbsk) /  ;
                  sjcq
          REPLACE clfx.rgcl WITH  ;
                  98
          SELECT clfx
          LOOP
     ENDIF
     SEEK clfx.zgbh + clfx.riqi +  ;
          "15" 
     IF FOUND() .AND. (zg.mk =  ;
        "3" .OR. zg.mk = "5" .OR.  ;
        zg.mk = "6" .OR. zg.mk =  ;
        "7")
          REPLACE clfx.cqss WITH  ;
                  IIF(clfx.xbsk >=  ;
                  clfx.sbsk,  ;
                  clfx.xbsk -  ;
                  clfx.sbsk, 1400 +  ;
                  clfx.xbsk -  ;
                  clfx.sbsk)
          REPLACE clfx.cqts WITH  ;
                  IIF(clfx.xbsk >=  ;
                  clfx.sbsk,  ;
                  clfx.xbsk -  ;
                  clfx.sbsk, 1400 +  ;
                  clfx.xbsk -  ;
                  clfx.sbsk) /  ;
                  sjcq
          REPLACE clfx.rgcl WITH  ;
                  98
          SELECT clfx
          LOOP
     ENDIF
     SELECT xjjl_j
     SEEK STR(MONTH(CTOD(clfx.riqi)),  ;
          2) +  ;
          STR(DAY(CTOD(clfx.riqi)),  ;
          2) 
     IF FOUND() .AND. (zg.mk =  ;
        "3" .OR. zg.mk = "5" .OR.  ;
        zg.mk = "6" .OR. zg.mk =  ;
        "7")
          REPLACE clfx.cqss WITH  ;
                  IIF(clfx.xbsk >=  ;
                  clfx.sbsk,  ;
                  clfx.xbsk -  ;
                  clfx.sbsk, 1400 +  ;
                  clfx.xbsk -  ;
                  clfx.sbsk)
          REPLACE clfx.cqts WITH  ;
                  IIF(clfx.xbsk >=  ;
                  clfx.sbsk,  ;
                  clfx.xbsk -  ;
                  clfx.sbsk, 1400 +  ;
                  clfx.xbsk -  ;
                  clfx.sbsk) /  ;
                  sjcq
          REPLACE clfx.rgcl WITH  ;
                  98
          SELECT clfx
          LOOP
     ENDIF
     SELECT xjjl_w
     SEEK clfx.zgbh 
     IF FOUND()
          szqno = getzqxr()
          IF szqno <> "-1"
               nzqno = VAL(szqno)
               szq = "ZQ" + szqno
               sksrq = "KSRQ" +  ;
                       szqno
               IF clfx.RIQI>=&sKsRq AND;
&sZq>0  
                    N = ctod(clfx.RIQI);
- ctod(&sKsRq)    
                    m = 'W'+LTRIM(STR(N-&sZq*INT(N/&sZq)+nZqNo*31));
 
                    IF '1'=&m AND (ZG.MK="2";
OR ZG.MK="4" OR ZG.MK="6" OR ZG.MK="7");

                         REPLACE clfx.cqss  ;
                                 WITH  ;
                                 IIF(clfx.xbsk >=  ;
                                 clfx.sbsk,  ;
                                 clfx.xbsk -  ;
                                 clfx.sbsk,  ;
                                 1400 +  ;
                                 clfx.xbsk -  ;
                                 clfx.sbsk)
                         REPLACE clfx.cqts  ;
                                 WITH  ;
                                 IIF(clfx.xbsk >=  ;
                                 clfx.sbsk,  ;
                                 clfx.xbsk -  ;
                                 clfx.sbsk,  ;
                                 1400 +  ;
                                 clfx.xbsk -  ;
                                 clfx.sbsk) /  ;
                                 sjcq
                         REPLACE clfx.rgcl  ;
                                 WITH  ;
                                 98
                    ENDIF
               ENDIF
               SELECT clfx
               LOOP
          ENDIF
     ENDIF
     SELECT xjjl_s
     m = STR(DOW(CTOD(clfx.riqi)),  ;
         1)
     n = "W" + m
     IF &n = 1 AND (ZG.MK="2" OR ZG.MK="4";
OR ZG.MK="6" OR ZG.MK="7") 
          REPLACE clfx.cqss WITH  ;
                  IIF(clfx.xbsk >=  ;
                  clfx.sbsk,  ;
                  clfx.xbsk -  ;
                  clfx.sbsk, 1400 +  ;
                  clfx.xbsk -  ;
                  clfx.sbsk)
          REPLACE clfx.cqts WITH  ;
                  IIF(clfx.xbsk >=  ;
                  clfx.sbsk,  ;
                  clfx.xbsk -  ;
                  clfx.sbsk, 1400 +  ;
                  clfx.xbsk -  ;
                  clfx.sbsk) /  ;
                  sjcq
          REPLACE clfx.rgcl WITH  ;
                  98
     ENDIF
     SELECT clfx
ENDSCAN
RETURN
ENDPROC
**
FUNCTION GetZqXr
DO CASE
     CASE CTOD(ksrq) <> CTOD("")  ;
          .AND. zq > 0
          DO CASE
               CASE CTOD(ksrq1) =  ;
                    CTOD("")  ;
                    .AND.  ;
                    CTOD(ksrq2) =  ;
                    CTOD("")
                    IF clfx.riqi >=  ;
                       ksrq
                         sret = ""
                    ELSE
                         sret = "-1"
                    ENDIF
               CASE CTOD(ksrq1) <>  ;
                    CTOD("")  ;
                    .AND.  ;
                    CTOD(ksrq2) =  ;
                    CTOD("")
                    DO CASE
                         CASE ksrq <=  ;
                              ksrq1  ;
                              .AND.  ;
                              clfx.riqi >=  ;
                              ksrq1
                              sret =  ;
                               "1"
                         CASE ksrq <=  ;
                              ksrq1  ;
                              .AND.  ;
                              clfx.riqi >=  ;
                              ksrq
                              sret =  ;
                               ""
                         CASE ksrq1 <=  ;
                              ksrq  ;
                              .AND.  ;
                              clfx.riqi >=  ;
                              ksrq
                              sret =  ;
                               ""
                         CASE ksrq1 <=  ;
                              ksrq  ;
                              .AND.  ;
                              clfx.riqi >=  ;
                              ksrq1
                              sret =  ;
                               "1"
                         OTHERWISE
                              sret =  ;
                               "-1"
                    ENDCASE
               CASE CTOD(ksrq1) =  ;
                    CTOD("")  ;
                    .AND.  ;
                    CTOD(ksrq2) <>  ;
                    CTOD("")
                    DO CASE
                         CASE ksrq <=  ;
                              ksrq2  ;
                              .AND.  ;
                              clfx.riqi >=  ;
                              ksrq2
                              sret =  ;
                               "2"
                         CASE ksrq <=  ;
                              ksrq2  ;
                              .AND.  ;
                              clfx.riqi >=  ;
                              ksrq
                              sret =  ;
                               ""
                         CASE ksrq2 <=  ;
                              ksrq  ;
                              .AND.  ;
                              clfx.riqi >=  ;
                              ksrq
                              sret =  ;
                               ""
                         CASE ksrq2 <=  ;
                              ksrq  ;
                              .AND.  ;
                              clfx.riqi >=  ;
                              ksrq2
                              sret =  ;
                               "2"
                         OTHERWISE
                              sret =  ;
                               "-1"
                    ENDCASE
               OTHERWISE
                    DO CASE
                         CASE clfx.riqi >=  ;
                              ksrq
                              DO CASE
                                   CASE ksrq1 > ksrq .AND. ksrq1 > ksrq2 .AND. clfx.riqi >= ksrq1
                                        sret = "1"
                                   CASE ksrq2 > ksrq .AND. ksrq2 > ksrq1 .AND. clfx.riqi >= ksrq2
                                        sret = "2"
                                   CASE ksrq1 > ksrq .AND. clfx.riqi >= ksrq1
                                        sret = "1"
                                   CASE ksrq2 > ksrq .AND. clfx.riqi >= ksrq2
                                        sret = "2"
                                   OTHERWISE
                                        sret = ""
                              ENDCASE
                         CASE clfx.riqi >=  ;
                              ksrq1
                              DO CASE
                                   CASE ksrq2 > ksrq1 .AND. clfx.riqi >= ksrq2
                                        sret = "2"
                                   OTHERWISE
                                        sret = "1"
                              ENDCASE
                         CASE clfx.riqi >=  ;
                              ksrq2
                              sret =  ;
                               "2"
                         OTHERWISE
                              sret =  ;
                               "-1"
                    ENDCASE
          ENDCASE
     CASE CTOD(ksrq1) <> CTOD("")  ;
          .AND. zq1 > 0
          DO CASE
               CASE CTOD(ksrq2) =  ;
                    CTOD("")
                    IF clfx.riqi >=  ;
                       ksrq1
                         sret = "1"
                    ELSE
                         sret = "-1"
                    ENDIF
               CASE ksrq1 <=  ;
                    ksrq2 .AND.  ;
                    clfx.riqi >=  ;
                    ksrq2
                    sret = "2"
               CASE ksrq1 <=  ;
                    ksrq2 .AND.  ;
                    clfx.riqi >=  ;
                    ksrq1
                    sret = "1"
               CASE ksrq2 <=  ;
                    ksrq1 .AND.  ;
                    clfx.riqi >=  ;
                    ksrq1
                    sret = "1"
               CASE ksrq2 <=  ;
                    ksrq1 .AND.  ;
                    clfx.riqi >=  ;
                    ksrq2
                    sret = "2"
               OTHERWISE
                    sret = "-1"
          ENDCASE
     CASE CTOD(ksrq2) <> CTOD("")  ;
          .AND. zq2 > 0
          IF clfx.riqi >= ksrq2
               sret = "2"
          ELSE
               sret = "-1"
          ENDIF
     OTHERWISE
          sret = "-1"
ENDCASE
RETURN sret
ENDFUNC
**
PROCEDURE fenxi5
SELECT clfx
GOTO TOP
IF EOF()
     RETURN
ENDIF
DO WHILE  .NOT. EOF()
     IF pub_language
          obj_form4.txt_msg1.value =  ;
           "Be adjusting..." +  ;
           zgbh + " " + riqi
     ELSE
          obj_form4.txt_msg1.value =  ;
           "考勤调整处理..." +  ;
           zgbh + " " + riqi
     ENDIF
     mkqlb = IIF(rgcl > 0, rgcl,  ;
             zdcl)
     IF rgcl = 92 .AND. (sbsk = 0  ;
        .OR. xbsk = 0)
          mrec = RECNO()
          mzgbh = zgbh
          mdate = CTOD(riqi)
          mbc = bc
          DO WHILE  .NOT. BOF()  ;
             .AND. mzgbh=zgbh  ;
             .AND. mdate= ;
             CTOD(riqi)
               SKIP -1
          ENDDO
          IF mzgbh <> zgbh .OR.  ;
             mdate <> CTOD(riqi)
               SKIP
          ENDIF
          DO WHILE  .NOT. EOF()  ;
             .AND. mzgbh=zgbh  ;
             .AND. mdate= ;
             CTOD(riqi)
               IF mrec <> RECNO()  ;
                  .AND. cqss > 0  ;
                  .AND.  ;
                  (EMPTY(mbc)  ;
                  .OR. mbc ==  ;
                  bc)
                    GOTO mrec
                    REPLACE cqss  ;
                            WITH  ;
                            0,  ;
                            cqts  ;
                            WITH  ;
                            0
                    SKIP
                    EXIT
               ENDIF
               SKIP
          ENDDO
          SKIP -1
     ENDIF
     SKIP
ENDDO
RETURN
ENDPROC
**
PROCEDURE fenxi6
SELECT clfx
GOTO TOP
IF EOF()
     RETURN
ENDIF
mzgbh = ""
mdate = CTOD("")
DO WHILE  .NOT. EOF()
     IF pub_language
          obj_form4.txt_msg1.value =  ;
           "Be adjusting..." +  ;
           zgbh + " " + riqi
     ELSE
          obj_form4.txt_msg1.value =  ;
           "分段班调整处理..." +  ;
           zgbh + " " + riqi
     ENDIF
     IF LEN(TRIM(bc)) > 0 .AND.  ;
        LEN(TRIM(bc)) < 3
          SKIP
          mzgbh = zgbh
          mdate = CTOD(riqi)
          mxrcolor = xrcolor
          mbc = ""
          mcnt = 0
          LOOP
     ENDIF
     IF mzgbh <> zgbh .OR. mdate <>  ;
        CTOD(riqi)
          IF  .NOT. EMPTY(mzgbh)  ;
              .AND.  .NOT.  ;
              EMPTY(mbc) .AND.  ;
              mcnt = 1
               mrec = RECNO()
               APPEND BLANK
               REPLACE zgbh WITH  ;
                       mzgbh,  ;
                       riqi WITH  ;
                       DTOC(mdate),  ;
                       xrcolor  ;
                       WITH  ;
                       mxrcolor
               IF RIGHT(mbc, 1) =  ;
                  "1"
                    REPLACE bc  ;
                            WITH  ;
                            LEFT(mbc,  ;
                            2) +  ;
                            "2"
               ELSE
                    REPLACE bc  ;
                            WITH  ;
                            LEFT(mbc,  ;
                            2) +  ;
                            "1"
               ENDIF
               GOTO mrec
          ENDIF
          mzgbh = zgbh
          mdate = CTOD(riqi)
          mxrcolor = xrcolor
          mbc = ""
          mcnt = 0
          LOOP
     ENDIF
     IF  .NOT. EMPTY(bc)
          mbc = bc
     ENDIF
     mcnt = mcnt + 1
     SKIP
ENDDO
SKIP -1
IF  .NOT. EMPTY(mzgbh) .AND.   ;
    .NOT. EMPTY(mbc) .AND. mcnt =  ;
    1
     mrec = RECNO()
     APPEND BLANK
     REPLACE zgbh WITH mzgbh,  ;
             riqi WITH  ;
             DTOC(mdate), xrcolor  ;
             WITH mxrcolor
     IF RIGHT(mbc, 1) = "1"
          REPLACE bc WITH  ;
                  LEFT(mbc, 2) +  ;
                  "2"
     ELSE
          REPLACE bc WITH  ;
                  LEFT(mbc, 2) +  ;
                  "1"
     ENDIF
ENDIF
RETURN
ENDPROC
**
PROCEDURE fenxi7
IF sjjb0 = 0 .AND. sjjb1 = 0
     RETURN
ENDIF
SELECT clfx
SET RELATION TO zgbh INTO zg
mzgbh = ""
mdate = CTOD("")
mcqss = 0
nzgbh = ""
ndate = CTOD("")
njb = .F.
kzgbh = ""
kdate = CTOD("")
kkqlb = 0
SCAN
     IF pub_language
          obj_form4.txt_msg1.value =  ;
           "Automatic overtime..." +  ;
           zgbh + " " + riqi
     ELSE
          obj_form4.txt_msg1.value =  ;
           "自动加班处理..." +  ;
           zgbh + " " + riqi
     ENDIF
     IF zdcl = 85 .OR. rgcl = 85  ;
        .OR. rgcl = 98
          LOOP
     ENDIF
     IF zg.zdjb <> "1" .AND.  ;
        zg.zdjb <> "4" .AND.  ;
        zg.zdjb <> "5" .AND.  ;
        zg.zdjb <> "7"
          mflag = .F.
          IF rgcl = 0 .AND. (zdcl =  ;
             0 .OR. zdcl = 85  ;
             .OR. zdcl = 73 .OR.  ;
             zdcl = 74 .OR. (zdcl >=  ;
             81 .AND. zdcl <= 83  ;
             .AND. cdss + ztss >  ;
             cqss / 3))
               IF mzgbh = zgbh  ;
                  .AND. mdate =  ;
                  CTOD(riqi)  ;
                  .AND. mcqss >  ;
                  0
                    mflag = .T.
               ELSE
                    mrec = RECNO()
                    mzgbh_ = zgbh
                    mdate_ = CTOD(riqi)
                    SKIP
                    IF  .NOT.  ;
                        EOF()  ;
                        .AND.  ;
                        mzgbh_ =  ;
                        zgbh  ;
                        .AND.  ;
                        mdate_ =  ;
                        CTOD(riqi)  ;
                        .AND.  ;
                        (rgcl > 0  ;
                        .OR.   ;
                        .NOT.  ;
                        (zdcl = 0  ;
                        .OR. zdcl =  ;
                        85 .OR.  ;
                        zdcl = 73  ;
                        .OR. zdcl =  ;
                        74 .OR.  ;
                        (zdcl >=  ;
                        81 .AND.  ;
                        zdcl <=  ;
                        83 .AND.  ;
                        cdss +  ;
                        ztss >  ;
                        cqss /  ;
                        3)))
                         mflag = .T.
                    ENDIF
                    GOTO mrec
               ENDIF
          ENDIF
          IF mflag
               REPLACE cqss WITH  ;
                       0, cqts  ;
                       WITH 0,  ;
                       cdss WITH  ;
                       0, ztss  ;
                       WITH 0,  ;
                       kgss WITH  ;
                       0, kgts  ;
                       WITH 0,  ;
                       zdcl WITH  ;
                       0, rgcl  ;
                       WITH 0
          ENDIF
          mzgbh = zgbh
          mdate = CTOD(riqi)
          mcqss = cqss
          LOOP
     ENDIF
     IF jbss > 0 .OR. jbts > 0
          mzgbh = zgbh
          mdate = CTOD(riqi)
          mcqss = cqss
          mflag = .T.
          IF sbsj > 0 .AND. xbsj >  ;
             0 .AND. (rgcl = 92  ;
             .OR. zdcl = 92)
               mxbsj = IIF(xbsj >=  ;
                       sbsj, xbsj,  ;
                       1440 +  ;
                       xbsj)
               SELECT xjjl_d
               SEEK mzgbh +  ;
                    DTOC(mdate) +  ;
                    "92" 
               DO WHILE  .NOT.  ;
                  EOF() .AND.  ;
                  mzgbh=zgbh  ;
                  .AND. mdate= ;
                  CTOD(riqi)  ;
                  .AND. mflag
                    mjssj = IIF(jssj >=  ;
                            kssj,  ;
                            jssj,  ;
                            1440 +  ;
                            jssj)
                    IF kssj >  ;
                       clfx.sbsj  ;
                       .AND. kssj <  ;
                       mxbsj  ;
                       .AND.  ;
                       mjssj >  ;
                       clfx.sbsj  ;
                       .AND.  ;
                       mjssj <  ;
                       mxbsj
                         mflag = .F.
                    ENDIF
                    SKIP
               ENDDO
               SELECT clfx
          ENDIF
          IF mflag
               LOOP
          ENDIF
     ENDIF
     IF njb .AND. (rgcl = 1 .OR.  ;
        rgcl = 15 .OR. ((zdcl = 1  ;
        .OR. zdcl = 15) .AND.  ;
        rgcl = 0)) .AND. nzgbh =  ;
        zgbh .AND. ndate =  ;
        CTOD(riqi) - 1
          SKIP -1
          njb1 = 0
          njb2 = 0
          nxbsj = xbsj
          nxbsk = xbsk
          DO CASE
               CASE xbsk < sbsk  ;
                    .AND. sbsj <  ;
                    xbsk .AND.  ;
                    sbsj < sbsk
                    IF sjjb0 > 0  ;
                       .AND. 1440 +  ;
                       sbsj -  ;
                       sbsk >  ;
                       sjjb0
                         njb1 = sjjb2 *  ;
                                INT((1440 +  ;
                                sbsj -  ;
                                sbsk) /  ;
                                sjjb2)
                    ENDIF
                    IF sjjb1 > 0  ;
                       .AND. xbsk -  ;
                       xbsj >  ;
                       sjjb1
                         njb2 = sjjb2 *  ;
                                INT((xbsk -  ;
                                xbsj) /  ;
                                sjjb2)
                    ENDIF
               CASE xbsk < sbsk  ;
                    .AND. xbsj >  ;
                    sbsk .AND.  ;
                    xbsj < xbsk
                    IF sjjb0 > 0  ;
                       .AND. sbsj -  ;
                       sbsk >  ;
                       sjjb0
                         njb1 = sjjb2 *  ;
                                INT((sbsj -  ;
                                sbsk) /  ;
                                sjjb2)
                    ENDIF
                    IF sjjb1 > 0  ;
                       .AND. 1440 +  ;
                       xbsk -  ;
                       xbsj >  ;
                       sjjb1
                         njb2 = sjjb2 *  ;
                                INT((1440 +  ;
                                xbsk -  ;
                                xbsj) /  ;
                                sjjb2)
                    ENDIF
               CASE xbsj < sbsj  ;
                    .AND. xbsk >  ;
                    sbsj .AND.  ;
                    xbsk > xbsj
                    IF sjjb0 > 0  ;
                       .AND. sbsj -  ;
                       sbsk >  ;
                       sjjb0
                         njb1 = sjjb2 *  ;
                                INT((sbsj -  ;
                                sbsk) /  ;
                                sjjb2)
                    ENDIF
               CASE xbsj < sbsj  ;
                    .AND. sbsk <  ;
                    sbsj .AND.  ;
                    sbsk < xbsj
                    IF sjjb1 > 0  ;
                       .AND. xbsk -  ;
                       xbsj >  ;
                       sjjb1
                         njb2 = sjjb2 *  ;
                                INT((xbsk -  ;
                                xbsj) /  ;
                                sjjb2)
                    ENDIF
               OTHERWISE
                    IF sjjb0 > 0  ;
                       .AND. sbsj -  ;
                       sbsk >  ;
                       sjjb0
                         njb1 = sjjb2 *  ;
                                INT((sbsj -  ;
                                sbsk) /  ;
                                sjjb2)
                    ENDIF
                    IF sjjb1 > 0  ;
                       .AND. xbsk -  ;
                       xbsj >  ;
                       sjjb1
                         njb2 = sjjb2 *  ;
                                INT((xbsk -  ;
                                xbsj) /  ;
                                sjjb2)
                    ENDIF
          ENDCASE
          IF njb2 > 0
               REPLACE jbss WITH  ;
                       jbss -  ;
                       njb2
               REPLACE jbts WITH  ;
                       jbss /  ;
                       sjcq
               IF jbss = 0
                    IF zdcl = 92
                         REPLACE zdcl  ;
                                 WITH  ;
                                 98
                    ENDIF
                    IF rgcl = 92
                         REPLACE rgcl  ;
                                 WITH  ;
                                 98
                    ENDIF
               ENDIF
               SKIP
               mkqlb = IIF(rgcl >  ;
                       0, rgcl,  ;
                       zdcl)
               REPLACE jbss WITH  ;
                       njb2, jbts  ;
                       WITH njb2 /  ;
                       sjcq, qjss  ;
                       WITH 0,  ;
                       qjts WITH  ;
                       0, rgcl  ;
                       WITH 0,  ;
                       zdcl WITH  ;
                       IIF(mkqlb =  ;
                       1, 93,  ;
                       94)
               REPLACE xrcolor  ;
                       WITH  ;
                       rgb_holiday
               DO WHILE nxbsj>= ;
                  1440
                    nxbsj = nxbsj -  ;
                            1440
               ENDDO
               DO WHILE nxbsk>= ;
                  1440
                    nxbsk = nxbsk -  ;
                            1440
               ENDDO
               REPLACE sbsk WITH  ;
                       nxbsj,  ;
                       xbsk WITH  ;
                       nxbsk
          ELSE
               SKIP
          ENDIF
          mzgbh = zgbh
          mdate = CTOD(riqi)
          mcqss = cqss
          LOOP
     ENDIF
     IF (sbsk = 0 .OR. xbsk = 0)  ;
        .OR. ((sbsj = 0 .OR. xbsj =  ;
        0) .AND.  .NOT. (rgcl = 0  ;
        .AND. (zdcl = 0 .OR. zdcl =  ;
        85 .OR. zdcl = 73 .OR.  ;
        zdcl = 74 .OR. (zdcl >=  ;
        81 .AND. zdcl <= 83 .AND.  ;
        cdss + ztss > cqss /  ;
        3))))
          mzgbh = zgbh
          mdate = CTOD(riqi)
          mcqss = cqss
          LOOP
     ENDIF
     mxrjb = 0
     IF sbsk > 0 .AND. xbsk > 0  ;
        .AND. (sbsk > xbsk .OR.  ;
        xbsk > 1440)
          szgbh = zgbh
          sdate = CTOD(riqi)
          SKIP
          IF szgbh = zgbh .AND.  ;
             sdate = CTOD(riqi) -  ;
             1 .AND. (rgcl = 93  ;
             .OR. rgcl = 94)
               mxrjb = jbss
          ENDIF
          SKIP -1
     ENDIF
     msecond = .F.
     IF rgcl = 0 .AND. (zdcl = 0  ;
        .OR. zdcl = 85 .OR. zdcl =  ;
        73 .OR. zdcl = 74 .OR.  ;
        (zdcl >= 81 .AND. zdcl <=  ;
        83 .AND. cdss + ztss >  ;
        cqss / 3))
          IF mzgbh = zgbh .AND.  ;
             mdate = CTOD(riqi)  ;
             .AND. mcqss > 0
               msecond = .T.
          ELSE
               mrec = RECNO()
               mzgbh_ = zgbh
               mdate_ = CTOD(riqi)
               SKIP
               IF  .NOT. EOF()
                    IF mzgbh_ =  ;
                       zgbh .AND.  ;
                       mdate_ =  ;
                       CTOD(riqi)
                         IF rgcl >  ;
                            0  ;
                            .OR.   ;
                            .NOT.  ;
                            (zdcl =  ;
                            0  ;
                            .OR.  ;
                            zdcl =  ;
                            85  ;
                            .OR.  ;
                            zdcl =  ;
                            73  ;
                            .OR.  ;
                            zdcl =  ;
                            74  ;
                            .OR.  ;
                            (zdcl >=  ;
                            81  ;
                            .AND.  ;
                            zdcl <=  ;
                            83  ;
                            .AND.  ;
                            cdss +  ;
                            ztss >  ;
                            cqss /  ;
                            3))
                              msecond =  ;
                               .T.
                         ENDIF
                    ELSE
                         msecond =  ;
                          .T.
                    ENDIF
               ENDIF
               IF  .NOT. msecond
                    GOTO mrec
                    SKIP -1
                    IF mrec <>  ;
                       RECNO()
                         IF mzgbh_ =  ;
                            zgbh  ;
                            .AND.  ;
                            mdate_ =  ;
                            CTOD(riqi)
                              IF rgcl >  ;
                                 0  ;
                                 .OR.   ;
                                 .NOT.  ;
                                 (zdcl =  ;
                                 0  ;
                                 .OR.  ;
                                 zdcl =  ;
                                 85  ;
                                 .OR.  ;
                                 zdcl =  ;
                                 73  ;
                                 .OR.  ;
                                 zdcl =  ;
                                 74  ;
                                 .OR.  ;
                                 (zdcl >=  ;
                                 81  ;
                                 .AND.  ;
                                 zdcl <=  ;
                                 83  ;
                                 .AND.  ;
                                 cdss +  ;
                                 ztss >  ;
                                 cqss /  ;
                                 3))
                                   msecond = .T.
                              ENDIF
                         ELSE
                              msecond =  ;
                               .T.
                         ENDIF
                    ENDIF
               ENDIF
               GOTO mrec
          ENDIF
     ENDIF
     IF  .NOT. msecond
          DO CASE
               CASE xbsk < sbsk  ;
                    .AND. sbsj <  ;
                    xbsk .AND.  ;
                    sbsj < sbsk
                    IF sjjb0 > 0  ;
                       .AND. 1440 +  ;
                       sbsj -  ;
                       sbsk >  ;
                       sjjb0
                         REPLACE jbss  ;
                                 WITH  ;
                                 jbss +  ;
                                 sjjb2 *  ;
                                 INT((1440 +  ;
                                 sbsj -  ;
                                 sbsk) /  ;
                                 sjjb2)
                    ENDIF
                    IF sjjb1 > 0  ;
                       .AND. xbsk -  ;
                       xbsj >  ;
                       sjjb1
                         mxrjb_rate =  ;
                          mxrjb /  ;
                          (sjjb2 *  ;
                          INT((xbsk -  ;
                          xbsj) /  ;
                          sjjb2))
                         IF mxrjb_rate <  ;
                            0.9   ;
                            .OR.  ;
                            mxrjb_rate >  ;
                            1.1 
                              REPLACE  ;
                               jbss  ;
                               WITH  ;
                               jbss +  ;
                               sjjb2 *  ;
                               INT((xbsk -  ;
                               xbsj) /  ;
                               sjjb2)
                         ENDIF
                    ENDIF
               CASE xbsk < sbsk  ;
                    .AND. xbsj >  ;
                    sbsk .AND.  ;
                    xbsj < xbsk
                    IF sjjb0 > 0  ;
                       .AND. sbsj -  ;
                       sbsk >  ;
                       sjjb0
                         REPLACE jbss  ;
                                 WITH  ;
                                 jbss +  ;
                                 sjjb2 *  ;
                                 INT((sbsj -  ;
                                 sbsk) /  ;
                                 sjjb2)
                    ENDIF
                    IF sjjb1 > 0  ;
                       .AND. 1440 +  ;
                       xbsk -  ;
                       xbsj >  ;
                       sjjb1
                         mxrjb_rate =  ;
                          mxrjb /  ;
                          (sjjb2 *  ;
                          INT((1440 +  ;
                          xbsk -  ;
                          xbsj) /  ;
                          sjjb2))
                         IF mxrjb_rate <  ;
                            0.9   ;
                            .OR.  ;
                            mxrjb_rate >  ;
                            1.1 
                              REPLACE  ;
                               jbss  ;
                               WITH  ;
                               jbss +  ;
                               sjjb2 *  ;
                               INT((1440 +  ;
                               xbsk -  ;
                               xbsj) /  ;
                               sjjb2)
                         ENDIF
                    ENDIF
               CASE xbsj < sbsj  ;
                    .AND. xbsk >  ;
                    sbsj .AND.  ;
                    xbsk > xbsj
                    IF sjjb0 > 0  ;
                       .AND. sbsj -  ;
                       sbsk >  ;
                       sjjb0
                         REPLACE jbss  ;
                                 WITH  ;
                                 jbss +  ;
                                 sjjb2 *  ;
                                 INT((sbsj -  ;
                                 sbsk) /  ;
                                 sjjb2)
                    ENDIF
               CASE xbsj < sbsj  ;
                    .AND. sbsk <  ;
                    sbsj .AND.  ;
                    sbsk < xbsj
                    IF sjjb1 > 0  ;
                       .AND. xbsk -  ;
                       xbsj >  ;
                       sjjb1
                         mxrjb_rate =  ;
                          mxrjb /  ;
                          (sjjb2 *  ;
                          INT((xbsk -  ;
                          xbsj) /  ;
                          sjjb2))
                         IF mxrjb_rate <  ;
                            0.9   ;
                            .OR.  ;
                            mxrjb_rate >  ;
                            1.1 
                              REPLACE  ;
                               jbss  ;
                               WITH  ;
                               jbss +  ;
                               sjjb2 *  ;
                               INT((xbsk -  ;
                               xbsj) /  ;
                               sjjb2)
                         ENDIF
                    ENDIF
               OTHERWISE
                    IF sjjb0 > 0  ;
                       .AND. sbsj -  ;
                       sbsk >  ;
                       sjjb0
                         REPLACE jbss  ;
                                 WITH  ;
                                 jbss +  ;
                                 sjjb2 *  ;
                                 INT((sbsj -  ;
                                 sbsk) /  ;
                                 sjjb2)
                    ENDIF
                    IF sjjb1 > 0  ;
                       .AND. xbsk -  ;
                       xbsj >  ;
                       sjjb1
                         mxrjb_rate =  ;
                          mxrjb /  ;
                          ((sjjb2 *  ;
                          INT((xbsk -  ;
                          xbsj) /  ;
                          sjjb2)))
                         IF mxrjb_rate <  ;
                            0.9   ;
                            .OR.  ;
                            mxrjb_rate >  ;
                            1.1 
                              REPLACE  ;
                               jbss  ;
                               WITH  ;
                               jbss +  ;
                               sjjb2 *  ;
                               INT((xbsk -  ;
                               xbsj) /  ;
                               sjjb2)
                         ENDIF
                    ENDIF
          ENDCASE
          mzgbh = zgbh
          mdate = CTOD(riqi)
          mcqss = cqss
     ENDIF
     IF jbss > 0
          REPLACE jbts WITH jbss /  ;
                  sjcq
          DO CASE
               CASE zdcl = 0
                    REPLACE zdcl  ;
                            WITH  ;
                            92
               CASE rgcl = 0
                    REPLACE rgcl  ;
                            WITH  ;
                            92
               OTHERWISE
                    REPLACE zdcl  ;
                            WITH  ;
                            rgcl,  ;
                            rgcl  ;
                            WITH  ;
                            92
          ENDCASE
     ENDIF
     njb = .F.
     IF njbflag > 0 .AND. (xbsk <  ;
        sbsk .OR. xbsk > 1440  ;
        .OR. sbsk < delta0) .AND.  ;
        jbss > 0 .AND. lb = '3'
          nzgbh = zgbh
          ndate = CTOD(riqi)
          njb = .T.
     ENDIF
     mkqlb = IIF(rgcl = 0, zdcl,  ;
             rgcl)
     IF ((mkqlb = 0 .OR. mkqlb =  ;
        73) .AND. sbsk > 0 .AND.  ;
        xbsk > 0) .OR. (mkqlb >=  ;
        80 .AND. mkqlb <= 83  ;
        .AND. cdss + ztss > 120)  ;
        .OR. mkqlb = 85
          mflag = .F.
          IF nzgbh <> zgbh .OR.  ;
             ndate <> CTOD(riqi)  ;
             .OR. kkqlb = 0
               kzgbh = zgbh
               kdate = CTOD(riqi)
               mrec = RECNO()
               SKIP
               IF  .NOT. EOF()  ;
                   .AND. kzgbh =  ;
                   zgbh .AND.  ;
                   kdate =  ;
                   CTOD(riqi)
                    mkqlb = IIF(rgcl =  ;
                            0,  ;
                            zdcl,  ;
                            rgcl)
                    IF  .NOT.  ;
                        ((mkqlb =  ;
                        0 .OR.  ;
                        mkqlb =  ;
                        73) .AND.  ;
                        sbsk > 0  ;
                        .AND.  ;
                        xbsk > 0)  ;
                        .AND.   ;
                        .NOT.  ;
                        (mkqlb >=  ;
                        80 .AND.  ;
                        mkqlb <=  ;
                        83 .AND.  ;
                        IIF(xbsk >=  ;
                        sbsk, 0,  ;
                        1440) +  ;
                        xbsk -  ;
                        sbsk <  ;
                        sjcq / 2)  ;
                        .AND.  ;
                        mkqlb <>  ;
                        85
                         mflag = .T.
                    ENDIF
               ENDIF
               GOTO mrec
          ELSE
               mflag = .T.
          ENDIF
          IF mflag
               REPLACE jbss WITH  ;
                       sjjb2 *  ;
                       INT((IIF(xbsk >=  ;
                       sbsk, 0,  ;
                       1440) +  ;
                       xbsk -  ;
                       sbsk) /  ;
                       sjjb2),  ;
                       jbts WITH  ;
                       jbss /  ;
                       sjcq, rgcl  ;
                       WITH 92,  ;
                       zdcl WITH  ;
                       0
               REPLACE cqss WITH  ;
                       0, cqts  ;
                       WITH 0,  ;
                       cdss WITH  ;
                       0, ztss  ;
                       WITH 0,  ;
                       kgss WITH  ;
                       0, kgts  ;
                       WITH 0
          ENDIF
     ENDIF
     nzgbh = zgbh
     ndate = CTOD(riqi)
     kkqlb = IIF(cqss > 0, 1, 0)
ENDSCAN
RETURN
ENDPROC
**
PROCEDURE fenxi7_1
SELECT clfx
GOTO TOP
DO WHILE  .NOT. EOF()
     IF pub_language
          obj_form4.txt_msg1.value =  ;
           "Automatic overtime..." +  ;
           zgbh + " " + riqi
     ELSE
          obj_form4.txt_msg1.value =  ;
           "自动加班补充处理..." +  ;
           zgbh + " " + riqi
     ENDIF
     mrec = RECNO()
     mzgbh = zgbh
     mdate = CTOD(riqi)
     mflag = 0
     mbc = ""
     DO WHILE  .NOT. EOF() .AND.  ;
        mzgbh=zgbh .AND. mdate= ;
        CTOD(riqi)
          IF jbss > 0 .AND. (zdcl =  ;
             92 .OR. rgcl = 92)  ;
             .AND. EMPTY(bc)
               mflag = 1
          ENDIF
          IF cqss > 0 .AND.   ;
             .NOT. EMPTY(bc)  ;
             .AND. EMPTY(mbc)
               mbc = bc
          ENDIF
          SKIP
     ENDDO
     IF mflag > 0 .AND.  .NOT.  ;
        EMPTY(mbc)
          GOTO mrec
          DO WHILE  .NOT. EOF()  ;
             .AND. mzgbh=zgbh  ;
             .AND. mdate= ;
             CTOD(riqi)
               IF jbss > 0 .AND.  ;
                  (zdcl = 92 .OR.  ;
                  rgcl = 92)  ;
                  .AND.  ;
                  EMPTY(bc)
                    REPLACE bc  ;
                            WITH  ;
                            mbc
               ENDIF
               SKIP
          ENDDO
     ENDIF
ENDDO
RETURN
ENDPROC
**
PROCEDURE fenxi8
SELECT clfx
GOTO TOP
IF EOF()
     RETURN
ENDIF
mzgbh = ""
mdate = CTOD("")
DO WHILE  .NOT. EOF()
     IF pub_language
          obj_form4.txt_msg1.value =  ;
           "Be adjusting..." +  ;
           TRIM(zgbh) + " " +  ;
           riqi
     ELSE
          obj_form4.txt_msg1.value =  ;
           "分段班调整处理..." +  ;
           TRIM(zgbh) + " " +  ;
           riqi
     ENDIF
     IF LEN(TRIM(bc)) < 3
          SKIP
          LOOP
     ENDIF
     mzgbh = zgbh
     mdate = CTOD(riqi)
     mcurrentrec = RECNO()
     DO WHILE  .NOT. BOF() .AND.  ;
        mzgbh=zgbh .AND. mdate= ;
        CTOD(riqi)
          SKIP -1
     ENDDO
     IF mzgbh <> zgbh .OR. mdate <>  ;
        CTOD(riqi)
          SKIP
     ENDIF
     mfirstrec = RECNO()
     mxiurirec = 0
     mcqss = 0
     DO WHILE  .NOT. EOF() .AND.  ;
        mzgbh=zgbh .AND. mdate= ;
        CTOD(riqi)
          IF jbss > 0 .AND.  ;
             ((zdcl >= 93 .AND.  ;
             zdcl <= 94) .OR.  ;
             (rgcl >= 93 .AND.  ;
             rgcl <= 94))
               mxiurirec = RECNO()
          ENDIF
          IF LEN(TRIM(bc)) > 2
               mcqss = mcqss +  ;
                       cqss
          ENDIF
          SKIP
     ENDDO
     IF mxiurirec > 0
          GOTO mfirstrec
          DO WHILE  .NOT. EOF()  ;
             .AND. mzgbh=zgbh  ;
             .AND. mdate= ;
             CTOD(riqi)
               IF mxiurirec =  ;
                  RECNO()
                    IF mcqss > 0
                         IF jbss >  ;
                            mcqss *  ;
                            1.05 
                              IF sjycjb1 =  ;
                                 2
                                   REPLACE jbss WITH mcqss, jbts WITH mcqss / sjcq, jbyc WITH jbyc + 1
                              ELSE
                                   REPLACE jbyc WITH 1
                              ENDIF
                         ELSE
                              IF jbss <  ;
                                 mcqss *  ;
                                 0.95 
                                   IF sjycjb2 = 2
                                        REPLACE jbss WITH mcqss, jbts WITH mcqss / sjcq, jbyc WITH jbyc + 1
                                   ELSE
                                        REPLACE jbyc WITH 3
                                   ENDIF
                              ENDIF
                         ENDIF
                    ENDIF
               ELSE
                    IF LEN(TRIM(bc)) >  ;
                       2
                         REPLACE cqss  ;
                                 WITH  ;
                                 0,  ;
                                 cqts  ;
                                 WITH  ;
                                 0,  ;
                                 qjss  ;
                                 WITH  ;
                                 0,  ;
                                 qjts  ;
                                 WITH  ;
                                 0,  ;
                                 kgss  ;
                                 WITH  ;
                                 0,  ;
                                 kgts  ;
                                 WITH  ;
                                 0,  ;
                                 cqss  ;
                                 WITH  ;
                                 0,  ;
                                 ztss  ;
                                 WITH  ;
                                 0
                         REPLACE zdcl  ;
                                 WITH  ;
                                 0,  ;
                                 rgcl  ;
                                 WITH  ;
                                 98
                    ENDIF
               ENDIF
               SKIP
          ENDDO
     ENDIF
ENDDO
RETURN
ENDPROC
**
FUNCTION ZaiTi
mret = 0
SELECT clfx
mrec = RECNO()
mzgbh = zgbh
mdate = CTOD(riqi)
DO WHILE  .NOT. BOF() .AND. mzgbh= ;
   zgbh .AND. mdate=CTOD(riqi)
     SKIP -1
ENDDO
IF mzgbh <> zgbh .OR. mdate <>  ;
   CTOD(riqi)
     SKIP
ENDIF
DO CASE
     CASE xjjl_d.kqlb = 98 .OR.  ;
          xjjl_d.kqlb = 93 .OR.  ;
          xjjl_d.kqlb = 94
          DO CASE
               CASE xjjl_d.kssj >  ;
                    0 .AND.  ;
                    xjjl_d.jssj >  ;
                    0
                    DO WHILE  ;
                       mzgbh=zgbh  ;
                       .AND.  ;
                       mdate= ;
                       CTOD(riqi)
                         IF sbsk >  ;
                            0  ;
                            .AND.  ;
                            xbsk >  ;
                            0  ;
                            .AND.  ;
                            chkshiftdup(sbsk,  ;
                            xbsk,  ;
                            xjjl_d.kssj,  ;
                            xjjl_d.jssj)
                              mrec =  ;
                               RECNO()
                              EXIT
                         ENDIF
                         SKIP
                    ENDDO
          ENDCASE
     CASE xjjl_d.kqlb = 92
          DO CASE
               CASE xjjl_d.kssj >  ;
                    0 .AND.  ;
                    xjjl_d.jssj >  ;
                    0
                    mdelta0 = 9999
                    mdelta = 9999
                    DO WHILE  ;
                       mzgbh=zgbh  ;
                       .AND.  ;
                       mdate= ;
                       CTOD(riqi)
                         mdelta =  ;
                          getskdupval(xjjl_d.kssj,  ;
                          xjjl_d.jssj,  ;
                          sbsk,  ;
                          xbsk,  ;
                          0)
                         IF mdelta <  ;
                            mdelta0
                              mrec =  ;
                               RECNO()
                              mdelta0 =  ;
                               mdelta
                         ENDIF
                         SKIP
                    ENDDO
               CASE  .NOT.  ;
                     EMPTY(xjjl_d.bc)
                    DO WHILE  ;
                       mzgbh=zgbh  ;
                       .AND.  ;
                       mdate= ;
                       CTOD(riqi)
                         IF bc =  ;
                            xjjl_d.bc
                              mrec =  ;
                               RECNO()
                              EXIT
                         ENDIF
                         SKIP
                    ENDDO
               OTHERWISE
                    DO WHILE  ;
                       mzgbh=zgbh  ;
                       .AND.  ;
                       mdate= ;
                       CTOD(riqi)
                         IF sbsk >  ;
                            0  ;
                            .AND.  ;
                            xbsk >  ;
                            0
                              cda_rate =  ;
                               sjjb2 *  ;
                               INT(IIF(xbsk <  ;
                               sbsk,  ;
                               1440 +  ;
                               xbsk -  ;
                               sbsk,  ;
                               xbsk -  ;
                               sbsk) /  ;
                               sjjb2) /  ;
                               xjjl_d.ss
                              IF cda_rate >=  ;
                                 0.5   ;
                                 .AND.  ;
                                 cda_rate <=  ;
                                 1.5   ;
                                 .AND.  ;
                                 (zdcl =  ;
                                 73  ;
                                 .OR.  ;
                                 zdcl =  ;
                                 0)  ;
                                 .AND.  ;
                                 rgcl =  ;
                                 0
                                   mret = 1
                                   mrec = RECNO()
                                   EXIT
                              ENDIF
                         ENDIF
                         IF SUBSTR(bc,  ;
                            3, 1) >  ;
                            '1'
                              mrec =  ;
                               RECNO()
                              EXIT
                         ENDIF
                         SKIP
                    ENDDO
          ENDCASE
     CASE xjjl_d.kqlb > 0 .AND.  ;
          xjjl_d.kqlb < 31
          DO CASE
               CASE xjjl_d.kssj >  ;
                    0 .AND.  ;
                    xjjl_d.jssj >  ;
                    0
                    mdelta0 = 9999
                    mdelta = 9999
                    msbsk = sbsk
                    mxbsk = IIF(xbsk <  ;
                            sbsk,  ;
                            1440 +  ;
                            xbsk,  ;
                            xbsk)
                    mkssj = xjjl_d.kssj
                    mjssj = IIF(xjjl_d.jssj <  ;
                            xjjl_d.kssj,  ;
                            1440 +  ;
                            xjjl_d.jssj,  ;
                            xjjl_d.jssj)
                    DO WHILE  ;
                       mzgbh=zgbh  ;
                       .AND.  ;
                       mdate= ;
                       CTOD(riqi)
                         DO CASE
                              CASE  ;
                               (msbsk =  ;
                               0  ;
                               .OR.  ;
                               mxbsk =  ;
                               0)  ;
                               .AND.  ;
                               xjjl_d.ts =  ;
                               1
                                   mdelta = msbsk + mxbsk + 1
                              CASE  ;
                               msbsk >  ;
                               0  ;
                               .AND.  ;
                               mxbsk >  ;
                               0  ;
                               .AND.  ;
                               mkssj >=  ;
                               msbsk  ;
                               .AND.  ;
                               mkssj <=  ;
                               mxbsk  ;
                               .AND.  ;
                               mjssj >=  ;
                               msbsk  ;
                               .AND.  ;
                               mjssj <=  ;
                               mxbsk
                                   mdelta = 0
                              CASE  ;
                               mkssj <  ;
                               msbsk  ;
                               .AND.  ;
                               mjssj <  ;
                               mxbsk
                                   mdelta = ABS(msbsk - mjssj)
                              CASE  ;
                               mkssj >  ;
                               msbsk  ;
                               .AND.  ;
                               mjssj >  ;
                               mxbsk
                                   mdelta = ABS(mxbsk - mkssj)
                         ENDCASE
                         IF mdelta <  ;
                            mdelta0
                              mrec =  ;
                               RECNO()
                              mdelta0 =  ;
                               mdelta
                         ENDIF
                         SKIP
                    ENDDO
               CASE  .NOT.  ;
                     EMPTY(xjjl_d.bc)
                    DO WHILE  ;
                       mzgbh=zgbh  ;
                       .AND.  ;
                       mdate= ;
                       CTOD(riqi)
                         IF bc =  ;
                            xjjl_d.bc
                              mrec =  ;
                               RECNO()
                              EXIT
                         ENDIF
                         SKIP
                    ENDDO
          ENDCASE
ENDCASE
GOTO mrec
SELECT xjjl_d
RETURN mret
ENDFUNC
**
FUNCTION GetBcTab
gbt_select = LTRIM(STR(SELECT()))
SELECT zg
IF EOF()
     select &gbt_select
     RETURN -1
ENDIF
gbt_recno = RECNO()
SEEK clfx.zgbh 
IF EOF()
     SELECT zg
     GOTO gbt_recno
     select &gbt_select
     RETURN -1
ENDIF
v_ksbc = ALLTRIM(ksbc)
bctabcnt = 0
mbc = LEFT(v_ksbc, IIF(AT(",",  ;
      v_ksbc) = 0, 3, AT(",",  ;
      v_ksbc) - 1))
v_ksbc = RIGHT(v_ksbc,  ;
         LEN(v_ksbc) - LEN(mbc) -  ;
         1)
SELECT time
DO WHILE  .NOT. EMPTY(mbc)
     SEEK mbc 
     DO WHILE  .NOT. EOF() .AND.  ;
        bc=mbc
          bctabcnt = bctabcnt + 1
          IF bctabcnt > bctabbou
               RETURN -1
          ENDIF
          bctabbh(bctabcnt) = bc
          bctablb(bctabcnt) = lb
          bctabsb(bctabcnt) =  ;
                 sbsj
          IF xbsj <= sbsj
               bctabxb(bctabcnt) =  ;
                      xbsj +  ;
                      1440
          ELSE
               bctabxb(bctabcnt) =  ;
                      xbsj
          ENDIF
          bctabss(bctabcnt) = ss
          bctabts(bctabcnt) = ts
          SKIP
     ENDDO
     mbc = LEFT(v_ksbc, IIF(AT( ;
           ",", v_ksbc) = 0, 3,  ;
           AT(",", v_ksbc) - 1))
     v_ksbc = RIGHT(v_ksbc,  ;
              LEN(v_ksbc) -  ;
              LEN(mbc) - 1)
ENDDO
SELECT zg
GOTO gbt_recno
select &gbt_select		
RETURN bctabcnt
ENDFUNC
**
PROCEDURE TryXrjbBC
PARAMETER t_sb, t_xb, t_mod
t_xb = t_xb + IIF(t_xb < t_sb,  ;
       1440, 0)
mbctabsel = 0
mdelta = 9999
FOR j = 1 TO bctabcnt
     i_sb = bctabsb(j)
     i_xb = bctabxb(j)
     mdelta1 = ABS(i_sb - t_sb) +  ;
               ABS(t_xb - i_xb)
     IF mdelta1 < mdelta
          mdelta = mdelta1
          mbctabsel = j
     ENDIF
ENDFOR
IF mdelta < delta4
     IF t_mod = 0
          REPLACE clfx.cqss WITH  ;
                  bctabss(mbctabsel)
          REPLACE clfx.cqts WITH  ;
                  bctabts(mbctabsel)
     ENDIF
     REPLACE clfx.bc WITH  ;
             bctabbh(mbctabsel)
     REPLACE clfx.sbsj WITH  ;
             bctabsb(mbctabsel)
     REPLACE clfx.xbsj WITH  ;
             bctabxb(mbctabsel)
     REPLACE clfx.lb WITH  ;
             bctablb(mbctabsel)
     REPLACE clfx.zdcl WITH 98
     mcd = clfx.sbsk - clfx.sbsj
     mzt = clfx.xbsj - clfx.xbsk
     IF mcd > sjcd1 .OR. mzt >  ;
        sjzt1
          IF mcd > sjcd1
               REPLACE clfx.cdss  ;
                       WITH  ;
                       IIF(sjcd2 >  ;
                       1, sjcd2 *  ;
                       (INT(mcd /  ;
                       sjcd2) +  ;
                       1), mcd)
               REPLACE clfx.zdcl  ;
                       WITH 80
          ENDIF
          IF mzt > sjzt1
               REPLACE clfx.ztss  ;
                       WITH  ;
                       IIF(sjzt2 >  ;
                       1, sjzt2 *  ;
                       (INT(mzt /  ;
                       sjzt2) +  ;
                       1), mzt)
               REPLACE clfx.zdcl  ;
                       WITH  ;
                       IIF(clfx.zdcl =  ;
                       80, 82,  ;
                       81)
          ENDIF
     ENDIF
     IF clfx.cdss >= sjcd3 .OR.  ;
        clfx.ztss >= sjzt3
          IF (clfx.sbsj > 0 .AND.  ;
             clfx.sbsk <  ;
             clfx.sbsj .AND.  ;
             clfx.xbsk <  ;
             clfx.sbsj) .OR.  ;
             (clfx.xbsj > 0 .AND.  ;
             clfx.sbsk >  ;
             clfx.xbsj .AND.  ;
             clfx.xbsk >  ;
             clfx.xbsj)
               REPLACE clfx.sbsj  ;
                       WITH 0,  ;
                       clfx.xbsj  ;
                       WITH 0,  ;
                       clfx.bc  ;
                       WITH '',  ;
                       clfx.lb  ;
                       WITH '',  ;
                       clfx.cdss  ;
                       WITH 0,  ;
                       clfx.ztss  ;
                       WITH 0,  ;
                       clfx.zdcl  ;
                       WITH 0
          ELSE
               REPLACE clfx.kgss  ;
                       WITH  ;
                       clfx.cqss,  ;
                       clfx.kgts  ;
                       WITH  ;
                       clfx.cqts
               REPLACE clfx.zdcl  ;
                       WITH 85
               REPLACE clfx.cdss  ;
                       WITH 0,  ;
                       clfx.ztss  ;
                       WITH 0,  ;
                       clfx.cqss  ;
                       WITH 0,  ;
                       clfx.cqts  ;
                       WITH 0
          ENDIF
     ENDIF
ENDIF
RETURN
ENDPROC
**
PROCEDURE TryInvalidReg
PARAMETER ttr_mode
SELECT clfx
DO CASE
     CASE ttr_mode = 0
          IF qjss + cqss > 1.25  *  ;
             sjcq
               IF sjycqj1 = 1
                    REPLACE qjyc  ;
                            WITH  ;
                            1
               ELSE
                    REPLACE qjyc  ;
                            WITH  ;
                            2,  ;
                            qjss  ;
                            WITH  ;
                            IIF(sjcq >  ;
                            cqss,  ;
                            sjcq -  ;
                            cqss,  ;
                            0),  ;
                            qjts  ;
                            WITH  ;
                            qjss /  ;
                            sjcq
               ENDIF
          ENDIF
     CASE ttr_mode = 1
          IF sbsk > 0 .AND. xbsk >  ;
             0
               mkqlb = IIF(rgcl >=  ;
                       92 .AND.  ;
                       rgcl <= 94,  ;
                       rgcl,  ;
                       zdcl)
               IF mkqlb = 92 .OR.  ;
                  (mkqlb <> 1  ;
                  .AND. mkqlb <>  ;
                  15)
                    ttr_delta = checkjbba(sbsk,  ;
                                xbsk,  ;
                                sbsj,  ;
                                xbsj,  ;
                                jbss)
               ELSE
                    ttr_delta = sjjb2 *  ;
                                INT((IIF(xbsk <  ;
                                sbsk,  ;
                                1440,  ;
                                0) +  ;
                                xbsk -  ;
                                sbsk) /  ;
                                sjjb2) -  ;
                                cqss
               ENDIF
               IF jbss >  ;
                  ttr_delta
                    IF sjycjb1 =  ;
                       1
                         REPLACE jbyc  ;
                                 WITH  ;
                                 1
                    ELSE
                         REPLACE jbyc  ;
                                 WITH  ;
                                 2,  ;
                                 jbss  ;
                                 WITH  ;
                                 ttr_delta,  ;
                                 jbts  ;
                                 WITH  ;
                                 jbss /  ;
                                 sjcq
                    ENDIF
               ENDIF
          ENDIF
ENDCASE
SELECT xjjl_d
RETURN
ENDPROC
**
***
*** insertafter.fxp
***
*
PARAMETER ia_pointer
COUNT TO cntrec
IF cntrec = 0
     APPEND BLANK
     RETURN
ELSE
     GOTO ia_pointer
ENDIF
IF EOF()
     APPEND BLANK
     REPLACE yglb WITH yglb.lbbh
ELSE
     SKIP
     IF EOF()
          APPEND BLANK
          REPLACE yglb WITH  ;
                  yglb.lbbh
     ELSE
          APPEND BLANK
          REPLACE yglb WITH  ;
                  yglb.lbbh
          SCATTER TO ia_blank 
          DO WHILE  .NOT. BOF()
               SKIP -1
               SCATTER TO  ;
                       ia_record 
               SKIP
               GATHER FROM  ;
                      ia_record
               SKIP -1
               IF RECNO() =  ;
                  ia_pointer
                    GATHER FROM  ;
                           ia_blank
                    EXIT
               ENDIF
          ENDDO
     ENDIF
ENDIF
BROWSE
ENDPROC
**
***
*** getage.fxp
***
*
**
FUNCTION GetAge
LPARAMETERS mbrith
my1 = YEAR(mbrith)
mm1 = MONTH(mbrith)
md1 = DAY(mbrith)
my2 = YEAR(DATE())
mm2 = MONTH(DATE())
md2 = DAY(DATE())
IF DATE() - mbrith <= 0
     mage = 0
ELSE
     IF mm2 > mm1 .OR. (mm2 = mm1  ;
        .AND. md2 >= md1)
          mage = my2 - my1
     ELSE
          mage = my2 - my1 - 1
     ENDIF
ENDIF
IF mage > 100
     mage = 0
ENDIF
RETURN mage
ENDFUNC
**
***
*** chkver.fxp
***
*
IF pub_banben = "演示版"
     pub_ver = "1111"
     RETURN
ENDIF
pub_ver = "1111"
ENDPROC
**
***
*** chkdup.fxp
***
*
**
FUNCTION ChkDup
PARAMETER chkdup_conds
chkdup_ret = .F.
IF  .NOT. EOF()
     chkdup_rec = RECNO()
ELSE
     chkdup_rec = 0
ENDIF
LOCATE FOR &chkdup_conds
IF  .NOT. EOF()
     IF chkdup_rec = RECNO()
          CONTINUE
          IF  .NOT. EOF()
               chkdup_ret = .T.
          ENDIF
     ELSE
          chkdup_ret = .T.
     ENDIF
ENDIF
IF chkdup_rec > 0
     GOTO chkdup_rec
ENDIF
RETURN chkdup_ret
ENDFUNC
**
***
*** appesqltab.fxp
***
*
PARAMETER para_tag, para_src
tag_fds = fcount("&para_tag")
src_fds = fcount("&para_src")
mreplace = ""
FOR i = 1 TO tag_fds
     mfd = field(i,"&para_tag")
     FOR j = 1 TO src_fds
          if mfd==field(j,"&para_src")
               IF  .NOT.  ;
                   EMPTY(mreplace)
                    mreplace = mreplace +  ;
                               "," +  ;
                               mfd +  ;
                               " with " +  ;
                               para_src +  ;
                               "." +  ;
                               mfd
               ELSE
                    mreplace = "replace " +  ;
                               mfd +  ;
                               " with " +  ;
                               para_src +  ;
                               "." +  ;
                               mfd
               ENDIF
               EXIT
          ENDIF
     ENDFOR
ENDFOR
IF  .NOT. EMPTY(mreplace)
     select &para_src
     SCAN
          select &para_tag
          APPEND BLANK
          &mreplace
          select &para_src
     ENDSCAN
ENDIF
ENDPROC
**
***
*** appesqltab_l.fxp
***
*
PARAMETER para_tag, para_src,  ;
          para_left
tag_fds = fcount("&para_tag")
src_fds = fcount("&para_src")
mreplace = ""
FOR i = 1 TO tag_fds
     mfd = left(field(i,"&para_tag"),para_left)
     FOR j = 1 TO src_fds
          mfd_tag = para_tag+"."+field(i,"&para_tag");
  
          mfd_src = para_src+"."+field(j,"&para_src")
          if mfd==left(field(j,"&para_src"),para_left);
and type("&mfd_tag")=type("&mfd_src")
               IF  .NOT.  ;
                   EMPTY(mreplace)
                    mreplace = mreplace+","+field(i,"&para_tag")+" with "+para_src+"."+field(j,"&para_src")
               ELSE
                    mreplace = "replace "+field(i,"&para_tag")+" with "+para_src+"."+field(j,"&para_src")
               ENDIF
               EXIT
          ENDIF
     ENDFOR
ENDFOR
IF  .NOT. EMPTY(mreplace)
     select &para_src
     SCAN
          select &para_tag
          APPEND BLANK
          &mreplace
          select &para_src
     ENDSCAN
ENDIF
ENDPROC
**
***
*** getsysqx.fxp
***
*
**
FUNCTION GETSYSQX
PARAMETER mode
IF pub_banben = "演示版"
     RETURN "true"
ENDIF
result = "false"
IF sqlexe_run(00000000022,  ;
   SYS(16),  ;
   "select * from sys_user where name=?pub_user",  ;
   "sys") <> 1
     result = "false"
ENDIF
SELECT sys
IF EOF()
     result = "false"
ENDIF
DO CASE
     CASE mode = "kq"
          IF sys.kq > 0
               result = "true"
          ENDIF
     CASE mode = "rs"
          IF sys.rs > 0
               result = "true"
          ENDIF
     CASE mode = "gz"
          IF sys.gz > 0
               result = "true"
          ENDIF
     CASE mode = "ft"
          IF sys.ft > 0
               result = "true"
          ENDIF
     CASE mode = "tools"
          IF sys.tool > 0
               result = "true"
          ENDIF
     OTHERWISE
          result = "false"
ENDCASE
USE
RETURN result
ENDFUNC
**
***
*** sqlexe_run.fxp
***
*
PARAMETER runsql_line, runsql_cxm,  ;
          runsql_str, runsql_tbl
IF  .NOT. EMPTY(runsql_str)
     DO WHILE  ;
        SQLEXEC(odbc_ant2000,  ;
        runsql_str, runsql_tbl)=- ;
        1
          runsql_ret = handle_sql(runsql_line,  ;
                       runsql_cxm)
          DO CASE
               CASE runsql_ret = - ;
                    99
                    IF pub_ifrel =  ;
                       1
                         &PUB_OBJECT(PUB_LEVEL)..RELEASE
                    ELSE
                         IF pub_ifrel = - ;
                            1
                              pub_ifformerr =  ;
                               1
                         ENDIF
                    ENDIF
                    IF pub_ifbackup =  ;
                       1
                         DO relebkup
                    ENDIF
                    DO sysexit
               CASE runsql_ret = - ;
                    98
                    IF pub_ifrel =  ;
                       0
                         IF pub_ifmove =  ;
                            0
                              RETURN  ;
                               TO  ;
                               MASTER 
                         ELSE
                              IF pub_level =  ;
                                 4
                                   &PUB_OBJECT(3)..ENABLED=.T.
                                   &PUB_OBJECT(3)..LEFT=PUB_LEFT2
                                   &PUB_OBJECT(3)..TOP=PUB_TOP2
                                   &PUB_OBJECT(2)..SHOW
                                   &PUB_OBJECT(3)..SHOW
                              ELSE
                                   IF pub_level = 3
                                        &PUB_OBJECT(2)..ENABLED=.T.
                                        &PUB_OBJECT(2)..LEFT=PUB_LEFT1
                                        &PUB_OBJECT(2)..TOP=PUB_TOP1
                                   ENDIF
                              ENDIF
                              RETURN  ;
                               TO  ;
                               MASTER 
                         ENDIF
                    ELSE
                         IF pub_ifrel =  ;
                            1
                              IF pub_level <  ;
                                 3
                                   &PUB_OBJECT(PUB_LEVEL)..ENABLED=.T.
                                   &PUB_OBJECT(PUB_LEVEL)..RELEASE
                                   DO sysexit
                              ELSE
                                   IF pub_ifbackup = 1
                                        pub_ifbackup = 0
                                        DO relebkup
                                   ENDIF
                                   &PUB_OBJECT(PUB_LEVEL)..RELEASE
                                   RETURN TO MASTER 
                              ENDIF
                         ELSE
                              pub_ifformerr =  ;
                               1
                              RETURN  ;
                               TO  ;
                               MASTER 
                         ENDIF
                    ENDIF
               CASE runsql_ret =  ;
                    0
                    LOOP
               CASE runsql_ret = - ;
                    1
                    RETURN -1
               CASE runsql_ret = - ;
                    2
                    RETURN -2
          ENDCASE
          EXIT
     ENDDO
     RETURN 1
ENDIF
ENDFUNC
**
FUNCTION Handle_sql
PARAMETER errline, programname
DIMENSION aerrorarray(7)
cntrol = AERROR(aerrorarray)
IF cntrol <= 0
     RETURN 1
ENDIF
errno = aerrorarray(1)
errtext = aerrorarray(2)
errtext = errtext + CHR(13) +  ;
          CHR(13) + "程序名:  " +  ;
          programname + CHR(13) +  ;
          "错误行:  " +  ;
          ALLTRIM(STR(errline))
IF errno = 1526
     errno = aerrorarray(5)
     errtext = aerrorarray(3)
     errtext = errtext + CHR(13) +  ;
               CHR(13) +  ;
               "程序名:  " +  ;
               programname +  ;
               CHR(13) +  ;
               "错误行:  " +  ;
               ALLTRIM(STR(errline))
     DO CASE
          CASE pub_database =  ;
               "ACCESS"
               DO CASE
                    CASE errno = - ;
                         1053
                         = MESSAGEBOX(errtext,  ;
                           048,  ;
                           "警告")
                         RETURN -1
                    CASE errno = - ;
                         1302
                         errtext =  ;
                          errtext +  ;
                          CHR(13) +  ;
                          CHR(13) +  ;
                          "是否重试?"
                         result =  ;
                          MESSAGEBOX(errtext,  ;
                          053,  ;
                          "警告")
                         IF result =  ;
                            4
                              RETURN  ;
                               0
                         ELSE
                              RETURN - ;
                               98
                         ENDIF
                    CASE errno = - ;
                         1303
                         = MESSAGEBOX(errtext,  ;
                           048,  ;
                           "警告")
                         RETURN -1
                    CASE errno = - ;
                         1605
                         RETURN -1
                    OTHERWISE
                         errtext =  ;
                          STR(errno) +  ;
                          CHR(13) +  ;
                          errtext
                         MESSAGEBOX(errtext,  ;
                          048,  ;
                          "系统错误")
                         RETURN -99
               ENDCASE
          CASE pub_database =  ;
               "SQL SERVER"
               DO CASE
                    CASE errno =  ;
                         515
                         = MESSAGEBOX(errtext,  ;
                           048,  ;
                           "警告")
                         RETURN -1
                    CASE errno =  ;
                         2714
                         = MESSAGEBOX(errtext,  ;
                           048,  ;
                           "警告")
                         RETURN -1
                    CASE errno =  ;
                         2627
                         RETURN -1
                    OTHERWISE
                         errtext =  ;
                          STR(errno) +  ;
                          CHR(13) +  ;
                          errtext
                         MESSAGEBOX(errtext,  ;
                          048,  ;
                          "系统错误")
                         RETURN -99
               ENDCASE
          CASE pub_database =  ;
               "INTERBASE"
               DO CASE
                    CASE errno = - ;
                         206
                         IF TYPE('pub_ErrorFlag') =  ;
                            'U'
                              PUBLIC  ;
                               pub_errorflag
                         ENDIF
                         IF  .NOT.  ;
                             pub_errorflag
                              IF 6 <>  ;
                                 MESSAGEBOX("数据表字段名错误，忽略吗？" +  ;
                                 CHR(13) +  ;
                                 runsql_str,  ;
                                 036,  ;
                                 "警告")
                                   RETURN -1
                              ELSE
                                   pub_errorflag = .T.
                              ENDIF
                         ENDIF
                    CASE errno = - ;
                         625
                         = MESSAGEBOX(errtext,  ;
                           048,  ;
                           "警告")
                         RETURN -1
                    CASE errno = - ;
                         607
                         IF AT( ;
                            "too many versions",  ;
                            errtext) >  ;
                            0
                              = MESSAGEBOX("数据表结构修改次数过多，请与软件供应商联系！",  ;
                                048,  ;
                                "警告")
                              RETURN - ;
                               2
                         ELSE
                              = MESSAGEBOX(STR(errno) +  ;
                                CHR(13) +  ;
                                errtext,  ;
                                048,  ;
                                "警告")
                              RETURN - ;
                               1
                         ENDIF
                    CASE errno = - ;
                         803
                         RETURN -1
                    OTHERWISE
                         errtext =  ;
                          STR(errno) +  ;
                          CHR(13) +  ;
                          errtext
                         MESSAGEBOX(errtext,  ;
                          048,  ;
                          "系统错误")
                         RETURN -99
               ENDCASE
          OTHERWISE
               errtext = STR(errno) +  ;
                         CHR(13) +  ;
                         errtext
               = MESSAGEBOX(errtext,  ;
                 048,  ;
                 "系统错误")
               RETURN -99
     ENDCASE
ELSE
     errtext = STR(errno) +  ;
               CHR(13) + errtext
     = MESSAGEBOX(errtext, 048,  ;
       "系统错误")
     RETURN -99
ENDIF
RETURN 1
ENDFUNC
**
***
*** relebkup.fxp
***
*
FCLOSE(hnd)
CLOSE DATABASES ALL
IF DIRECTORY(path_temp +  ;
   "\REP_KQ")
     DELETE FILE path_temp +  ;
            "\REP_KQ\*.*"
     RD path_temp + "\REP_KQ"
ENDIF
IF DIRECTORY(path_temp +  ;
   "\REP_GZ")
     DELETE FILE path_temp +  ;
            "\REP_GZ\*.*"
     RD path_temp + "\REP_GZ"
ENDIF
IF DIRECTORY(path_temp)
     DELETE FILE path_temp +  ;
            "\*.*"
     RD &PATH_TEMP
ENDIF
ENDPROC
**
***
*** getdatabase.fxp
***
*
**
FUNCTION GetDatabase
getdatabase_ret = 0
getdatabase_constr = SQLGETPROP(odbc_ant2000,  ;
                     'ConnectString')
DO CASE
     CASE AT("FIL=MS Access",  ;
          getdatabase_constr) >  ;
          1
          getdatabase_ret = 1
ENDCASE
RETURN getdatabase_ret
ENDFUNC
**
***
*** chkdate.fxp
***
*
IF pub_banben <> "演示版"
     RETURN
ENDIF
mdt = TTOC(DATETIME())
mdt_ = syspass(mdt, .T.)
lmd = syspass(getantenv('SYSPARA',  ;
      'LMD'), .F.)
IF lmd <> "9" + "4" + "1" + "0"
     IF lmd = "6" + "3" + "7" +  ;
        "1"
          setantenv('SYSPARA',  ;
                   'LMD', mdt_)
     ELSE
          lmd_ = syspass(getantenv('SYSPARA',  ;
                 'LMD_'), .F.)
          IF CTOT(mdt) <  ;
             CTOT(lmd_)
               = MESSAGEBOX( ;
                 "Please check the system date.",  ;
                 64,  ;
                 "Ant2000 System" ;
                 )
               DO sysexit
               RETURN .F.
          ELSE
               IF CTOT(mdt) >  ;
                  CTOT(lmd) +  ;
                  (CTOT( ;
                  "2001/04/01") -  ;
                  CTOT( ;
                  "2001/01/01"))
                    = MESSAGEBOX( ;
                      "Please check the system date.",  ;
                      64,  ;
                      "Ant2000 System" ;
                      )
                    DO sysexit
                    RETURN .F.
               ENDIF
          ENDIF
     ENDIF
     setantenv('SYSPARA', 'LMD_',  ;
              mdt_)
ENDIF
ENDFUNC
**
***
*** getgzqj.fxp
***
*
sjdate1 = getantenv("3AGZ",  ;
          "SYSGZSDATE")
sjdate2 = getantenv("3AGZ",  ;
          "SYSGZEDATE")
yy = pub_year
mm = pub_month
dd = sjdate2
k = CTOD(STR(yy, 4) + '.' +  ;
    STR(mm, 2) + '.' + STR(dd,  ;
    2)) + 3
mdate = CTOD(STR(yy, 4) + '.' +  ;
        STR(mm, 2) + '.' + STR(dd,  ;
        2))
i = 1
DO WHILE CTOD("")=mdate .AND. i<5
     dd = dd - 1
     mdate = CTOD(STR(yy, 4) +  ;
             '.' + STR(mm, 2) +  ;
             '.' + STR(dd, 2))
     i = i + 1
ENDDO
IF i >= 5
     mdate = CTOD("")
ENDIF
pub_gzjieshu = mdate
dd = sjdate1
IF ABS(sjdate2 - sjdate1) >= 30
     mdate = CTOD(STR(yy, 4) +  ;
             '.' + STR(mm, 2) +  ;
             '.' + STR(dd, 2))
ELSE
     IF mm = 1
          mdate = CTOD(STR(yy - 1,  ;
                  4) + '.' +  ;
                  STR(12, 2) +  ;
                  '.' + STR(dd,  ;
                  2))
     ELSE
          mdate = CTOD(STR(yy, 4) +  ;
                  '.' + STR(mm -  ;
                  1, 2) + '.' +  ;
                  STR(dd, 2))
     ENDIF
ENDIF
i = 1
DO WHILE CTOD("")=mdate .AND. i<5
     dd = dd - 1
     mdate = CTOD(STR(yy, 4) +  ;
             '.' + STR(mm, 2) +  ;
             '.' + STR(dd, 2))
     i = i + 1
ENDDO
IF i >= 5
     mdate = CTOD("")
ENDIF
pub_gzkaishi = mdate
ENDPROC
**
***
*** getantini.fxp
***
*
**
FUNCTION GetAntIni
PARAMETER section, variable
SET EXACT ON
sret = ""
ssection = ALLTRIM(UPPER(section))
svariable = ALLTRIM(UPPER(variable))
IF FILE("ANT2000.INI")
     fp = FOPEN("ANT2000.INI")
ELSE
     fp = -1
ENDIF
IF fp >= 0
     bsw = .T.
     DO WHILE bsw
          IF FEOF(fp)
               EXIT
          ENDIF
          sbuf = LTRIM(FGETS(fp))
          IF LEFT(sbuf, 1) <> "["
               LOOP
          ENDIF
          sstr = UPPER(sbuf)
          l = AT("]", sstr)
          IF l < 3 .OR. ssection <>  ;
             ALLTRIM(SUBSTR(sstr,  ;
             2, l - 2))
               LOOP
          ENDIF
          DO WHILE .T.
               IF FEOF(fp)
                    EXIT
               ENDIF
               sbuf = LTRIM(FGETS(fp))
               IF LEFT(sbuf, 1) =  ;
                  "["
                    bsw = .F.
                    EXIT
               ENDIF
               sstr = UPPER(sbuf)
               l = AT("=", sstr)
               IF l < 2 .OR.  ;
                  svariable <>  ;
                  ALLTRIM(SUBSTR(sstr,  ;
                  1, l - 1))
                    LOOP
               ENDIF
               sret = ALLTRIM(SUBSTR(sbuf,  ;
                      l + 1,  ;
                      1024))
               bsw = .F.
               EXIT
          ENDDO
     ENDDO
     FCLOSE(fp)
ENDIF
SET EXACT ON
RETURN sret
ENDFUNC
**
***
*** 3akq0311.fxp
***
*
DIMENSION bcmark1(bctabbou),  ;
          bcmark2(bctabbou),  ;
          bcmark3(bctabbou),  ;
          bcmark4(bctabbou)
SELECT ardata_
IF EOF()
     RETURN
ENDIF
v_rec = RECNO()
GOTO v_rec
SET RELATION TO zgbh INTO 3
GOTO TOP
DO WHILE  .NOT. EOF()
     mrec = RECNO()
     mzgbh = zgbh
     mdate = date
     IF getbctab_() < 1
          DO WHILE  .NOT. EOF()  ;
             .AND. mzgbh=zgbh  ;
             .AND. mdate=date
               SKIP
          ENDDO
          IF EOF()
               EXIT
          ENDIF
          LOOP
     ENDIF
     FOR i = 1 TO bctabcnt
          bcmark1(i) = 9999
          bcmark2(i) = 9999
          bcmark3(i) = 0
          bcmark4(i) = 0
     ENDFOR
     DO WHILE  .NOT. EOF() .AND.  ;
        mzgbh=zgbh .AND. mdate= ;
        date
          mdelta1 = 9999
          j = 0
          FOR i = 1 TO bctabcnt
               mdelta2 = IIF(time >=  ;
                         bctabsb(i),  ;
                         time -  ;
                         bctabsb(i),  ;
                         1440 +  ;
                         time -  ;
                         bctabsb(i))
               mdelta3 = IIF(bctabsb(i) >=  ;
                         time,  ;
                         bctabsb(i) -  ;
                         time,  ;
                         1440 +  ;
                         bctabsb(i) -  ;
                         time)
               mdelta4 = IIF(mdelta2 >  ;
                         mdelta3,  ;
                         mdelta3,  ;
                         mdelta2)
               mdelta2 = IIF(time >=  ;
                         bctabxb(i),  ;
                         time -  ;
                         bctabxb(i),  ;
                         1440 +  ;
                         time -  ;
                         bctabxb(i))
               mdelta3 = IIF(bctabxb(i) >=  ;
                         time,  ;
                         bctabxb(i) -  ;
                         time,  ;
                         1440 +  ;
                         bctabxb(i) -  ;
                         time)
               mdelta5 = IIF(mdelta2 >  ;
                         mdelta3,  ;
                         mdelta3,  ;
                         mdelta2)
               IF mdelta4 <  ;
                  mdelta5
                    IF mdelta1 >  ;
                       mdelta4
                         mdelta1 =  ;
                          mdelta4
                         j = -1 *  ;
                              i
                    ENDIF
               ELSE
                    IF mdelta1 >  ;
                       mdelta5
                         mdelta1 =  ;
                          mdelta5
                         j = i
                    ENDIF
               ENDIF
          ENDFOR
          IF mdelta1 < 9999
               IF j < 0 .AND.  ;
                  bcmark1(ABS(j)) >  ;
                  mdelta1
                    bcmark1(ABS(j)) =  ;
                           mdelta1
                    bcmark3(ABS(j)) =  ;
                           RECNO()
               ENDIF
               IF j > 0 .AND.  ;
                  bcmark2(j) >  ;
                  mdelta1
                    bcmark2(j) =  ;
                           mdelta1
                    bcmark4(j) =  ;
                           RECNO()
               ENDIF
          ENDIF
          SKIP
     ENDDO
     GOTO mrec
     DO WHILE  .NOT. EOF() .AND.  ;
        mzgbh=zgbh .AND. mdate= ;
        date
          mflag = .F.
          FOR i = 1 TO bctabcnt
               IF bcmark3(i) =  ;
                  RECNO() .OR.  ;
                  bcmark4(i) =  ;
                  RECNO()
                    mflag = .T.
                    EXIT
               ENDIF
          ENDFOR
          IF  .NOT. mflag
               DELETE
          ENDIF
          SKIP
     ENDDO
ENDDO
SELECT 1
RELEASE bcmark1, bcmark2, bcmark3
RETURN
ENDPROC
**
FUNCTION GetBcTab_
bctabcnt = 0
v_ksbc = ALLTRIM(c.ksbc)
mbc = LEFT(v_ksbc, IIF(AT(",",  ;
      v_ksbc) = 0, 3, AT(",",  ;
      v_ksbc) - 1))
v_ksbc = RIGHT(v_ksbc,  ;
         LEN(v_ksbc) - LEN(mbc) -  ;
         1)
SELECT 2
DO WHILE  .NOT. EMPTY(mbc)
     SEEK mbc 
     DO WHILE  .NOT. EOF() .AND.  ;
        bc=mbc
          bctabcnt = bctabcnt + 1
          IF bctabcnt > bctabbou
               RETURN -1
          ENDIF
          bctabsb(bctabcnt) =  ;
                 sbsj
          bctabxb(bctabcnt) =  ;
                 xbsj
          SKIP
     ENDDO
     mbc = LEFT(v_ksbc, IIF(AT( ;
           ",", v_ksbc) = 0, 3,  ;
           AT(",", v_ksbc) - 1))
     v_ksbc = RIGHT(v_ksbc,  ;
              LEN(v_ksbc) -  ;
              LEN(mbc) - 1)
ENDDO
SELECT 1
RETURN bctabcnt
ENDFUNC
**
***
*** chkpirate.fxp
***
*
fhz = checkhdsn()
IF fhz = -1 .OR. fhz = -2
     IF pub_language
          = MESSAGEBOX( ;
            "This program is parited!",  ;
            64,  ;
            "Ant2000 System")
     ELSE
          = MESSAGEBOX("您正在使用非法拷贝的程序。请购买正版软件，谢谢！",  ;
            64,  ;
            "ANT2000人事考勤系统")
     ENDIF
     RELEASE ALL
     QUIT
     RETURN
ENDIF
IF fhz = -4
     IF pub_language
          = MESSAGEBOX( ;
            "This program is parited!",  ;
            64,  ;
            "Ant2000 System")
     ELSE
          = MESSAGEBOX("您正在使用的是非法拷贝的程序，请购买正版软件安装使用！谢谢！",  ;
            64,  ;
            "ANT2000人事考勤系统")
     ENDIF
     RELEASE ALL
     QUIT
     RETURN
ENDIF
IF fhz = -3
     i = 0
     FOR i = 0 TO 2
          fhz = checkhdsn()
          IF fhz <> -3
               EXIT
          ENDIF
     ENDFOR
ENDIF
IF fhz = -3
     IF pub_language
          = MESSAGEBOX( ;
            "This program running error!",  ;
            64,  ;
            "Ant2000 System")
     ELSE
          = MESSAGEBOX("程序运行错误，请和供应商联系！",  ;
            64,  ;
            "ANT2000人事考勤系统")
     ENDIF
     RELEASE ALL
     QUIT
     RETURN
ELSE
     IF fhz = -1 .OR. fhz = -2
          IF pub_language
               = MESSAGEBOX( ;
                 "This program is parited!",  ;
                 64,  ;
                 "Ant2000 System" ;
                 )
          ELSE
               = MESSAGEBOX("您正在使用非法拷贝的程序。请购买正版软件，谢谢！",  ;
                 64,  ;
                 "ANT2000人事考勤系统")
          ENDIF
          RELEASE ALL
          QUIT
          RETURN
     ENDIF
     IF fhz = -4
          IF pub_language
               = MESSAGEBOX( ;
                 "This program is parited!",  ;
                 64,  ;
                 "Ant2000 System" ;
                 )
          ELSE
               = MESSAGEBOX("您正在使用的是非法拷贝的程序，请购买正版软件安装使用！谢谢！",  ;
                 64,  ;
                 "ANT2000人事考勤系统")
          ENDIF
          RELEASE ALL
          QUIT
          RETURN
     ENDIF
ENDIF
ENDPROC
**
***
*** resetsys.fxp
***
*
IF _SCREEN.visible = .T.
     _SCREEN.hide
ENDIF
ENDPROC
**
***
*** import_crt.fxp
***
*
m = "("
FOR nforcount = 1 TO FCOUNT()
     IF FIELD(nforcount) = "DATE"
          m = m +  ;
              "RIQI VARCHAR(10),"
          LOOP
     ENDIF
     IF UPPER(TYPE(FIELD(nforcount))) =  ;
        "N"
          m = m +  ;
              FIELD(nforcount) +  ;
              " FLOAT,"
     ELSE
          m = m +  ;
              FIELD(nforcount) +  ;
              " VARCHAR" + "(" +  ;
              ALLTRIM(STR(FSIZE(FIELD(nforcount)))) +  ;
              "),"
     ENDIF
ENDFOR
m = LEFT(m, LEN(m) - 1)
m = m + ")"
ssqlexec = "CREATE TABLE " +  ;
           hname + " " + m
= SQLEXEC(odbc_ant2000, ssqlexec,  ;
  "")
RETURN
ENDPROC
**
***
*** defconst.fxp
***
*
**
PROCEDURE DEFCONST
PUBLIC rgb_normal, rgb_insert,  ;
       rgb_modify, rgb_delete,  ;
       rgb_select
PUBLIC rgb_holiday, rgb_line1,  ;
       rgb_line2
PUBLIC sysloglevel
PUBLIC str_week(7)
str_week(1) = '日'
str_week(2) = '一'
str_week(3) = '二'
str_week(4) = '三'
str_week(5) = '四'
str_week(6) = '五'
str_week(7) = '六'
rgb_normal = RGB(255, 255, 255)
rgb_insert = RGB(180, 213, 252)
rgb_modify = RGB(255, 193, 193)
rgb_delete = RGB(0, 0, 0)
rgb_select = RGB(98, 98, 255)
rgb_holiday = RGB(225, 255, 225)
rgb_line1 = RGB(238, 255, 238)
rgb_line2 = RGB(255, 255, 176)
sysloglevel = 99
RETURN
ENDPROC
**
***
*** getrepkey.fxp
***
*
**
FUNCTION GetRepKey
LPARAMETERS grk_mod
grk_ret = ""
DO CASE
     CASE grk_mod = "KEY"
          DO CASE
               CASE replist.attr1 =  ;
                    1
                    grk_ret = "RQ,ZGBH"
               CASE replist.attr1 =  ;
                    2
                    grk_ret = "RQ,BMBH"
               CASE replist.attr1 =  ;
                    3
                    grk_ret = "RQ,RIQI"
               CASE replist.attr1 =  ;
                    4
                    grk_ret = "RQ,ZGLB"
               CASE replist.attr1 =  ;
                    5 .OR.  ;
                    replist.attr1 =  ;
                    6
                    grk_ret = ALLTRIM(replist.pkey)
          ENDCASE
     CASE grk_mod = "WHERE"
          DO CASE
               CASE replist.attr1 =  ;
                    1
                    grk_ret = "RQ=?RQ AND ZGBH=?ZGBH"
               CASE replist.attr1 =  ;
                    2
                    grk_ret = "RQ=?RQ AND BMBH=?BMBH"
               CASE replist.attr1 =  ;
                    3
                    grk_ret = "RQ=?RQ AND RIQI=?RIQI"
               CASE replist.attr1 =  ;
                    4
                    grk_ret = "RQ=?RQ AND ZGLB=?ZGLB"
               CASE replist.attr1 =  ;
                    5 .OR.  ;
                    replist.attr1 =  ;
                    6
                    mpkey = ALLTRIM(replist.pkey)
                    mlen = LEN(mpkey)
                    DO WHILE mlen> ;
                       0
                         mpos = AT( ;
                                ",",  ;
                                mpkey)
                         mfd = LEFT(mpkey,  ;
                               IIF(mpos =  ;
                               0,  ;
                               mlen,  ;
                               mpos -  ;
                               1))
                         IF  .NOT.  ;
                             EMPTY(grk_ret)
                              grk_ret =  ;
                               grk_ret +  ;
                               " AND " +  ;
                               mfd +  ;
                               "=?" +  ;
                               mfd
                         ELSE
                              grk_ret =  ;
                               mfd +  ;
                               "=?" +  ;
                               mfd
                         ENDIF
                         mpkey = RIGHT(mpkey,  ;
                                 mlen -  ;
                                 LEN(mfd) -  ;
                                 1)
                         mlen = LEN(mpkey)
                    ENDDO
          ENDCASE
     CASE grk_mod = "INDEX"
          DO CASE
               CASE replist.attr1 =  ;
                    1
                    grk_ret = "ZGBH"
               CASE replist.attr1 =  ;
                    2
                    grk_ret = "BMBH"
               CASE replist.attr1 =  ;
                    3
                    grk_ret = "RIQI"
               CASE replist.attr1 =  ;
                    4
                    grk_ret = "ZGLB"
               CASE replist.attr1 =  ;
                    5 .OR.  ;
                    replist.attr1 =  ;
                    6
                    mpkey = ALLTRIM(replist.pkey)
                    mlen = LEN(mpkey)
                    DO WHILE mlen> ;
                       0
                         mpos = AT( ;
                                ",",  ;
                                mpkey)
                         mfd = LEFT(mpkey,  ;
                               IIF(mpos =  ;
                               0,  ;
                               mlen,  ;
                               mpos -  ;
                               1))
                         IF mfd =  ;
                            "RQ"
                              LOOP
                         ENDIF
                         IF TYPE("repfile." +  ;
                            mfd) =  ;
                            "N"
                              mfd =  ;
                               "str(" +  ;
                               mfd +  ;
                               ")"
                         ENDIF
                         IF  .NOT.  ;
                             EMPTY(grk_ret)
                              grk_ret =  ;
                               grk_ret +  ;
                               " + " +  ;
                               mfd
                         ELSE
                              grk_ret =  ;
                               mfd
                         ENDIF
                         mpkey = RIGHT(mpkey,  ;
                                 mlen -  ;
                                 LEN(mfd) -  ;
                                 1)
                         mlen = LEN(mpkey)
                    ENDDO
          ENDCASE
ENDCASE
RETURN grk_ret
ENDFUNC
**
***
*** chkin.fxp
***
*
**
FUNCTION ChkIn
LPARAMETERS chkin_p1, chkin_p2,  ;
            chkin_p3
chkin_ret = .F.
IF chkin_p1 <> 0 .AND. chkin_p2 <>  ;
   0 .AND. chkin_p3 <> 0
     IF chkin_p3 >= chkin_p2
          IF chkin_p1 >= chkin_p2  ;
             .AND. chkin_p1 <=  ;
             chkin_p3
               chkin_ret = .T.
          ENDIF
     ELSE
          IF (chkin_p1 >=  ;
             chkin_p2 .AND.  ;
             chkin_p1 <= 1440)  ;
             .OR. (chkin_p1 > 0  ;
             .AND. chkin_p1 <=  ;
             chkin_p3)
               chkin_ret = .T.
          ENDIF
     ENDIF
ENDIF
RETURN chkin_ret
ENDFUNC
**
***
*** beeper.fxp
***
*
**
PROCEDURE beeper
?? CHR(7)
RETURN
ENDPROC
**
***
*** 3akq035.fxp
***
*
DO prginit
DO WHILE  .NOT. pub_escape .AND.   ;
   .NOT. EOF()
     obj_form4.txt_msg1.value = zgbh +  ;
                                ' ' +  ;
                                DTOC(mdate)
     IF EMPTY(mzgbh)
          SKIP
          mzgbh = zgbh
          mdate = CTOD(riqi) - 1
          recptr = RECNO()
          LOOP
     ENDIF
     m = getbctab()
     DO CASE
          CASE m = 0
               DO skipnext
               LOOP
          CASE m = -1
               = MESSAGEBOX( ;
                 "个人可上班次定义太多 " +  ;
                 TRIM(mzgbh), 064,  ;
                 "考勤分析系统")
               RELEASE sktabbou,  ;
                       sktabsel,  ;
                       sktabcnt,  ;
                       bctabbou,  ;
                       bctabsel,  ;
                       bctabcnt,  ;
                       sktabio,  ;
                       addedflagtab
               RELEASE sktab,  ;
                       bctabbh,  ;
                       bctabsb,  ;
                       bctabxb,  ;
                       bctabss,  ;
                       bctablb,  ;
                       bctabcl,  ;
                       pub_12h,  ;
                       pub_bctabsel,  ;
                       pub_flag1,  ;
                       pub_flag2,  ;
                       pub_delta1,  ;
                       pub_delta2
               RELEASE delta2,  ;
                       delta3,  ;
                       delta4,  ;
                       delta8,  ;
                       delta9,  ;
                       delta9max,  ;
                       mzgbh,  ;
                       mdate
               RELEASE clbc, dsb,  ;
                       dxb, dlb,  ;
                       dxx, dss,  ;
                       dmark,  ;
                       wtsb1,  ;
                       wtxb1,  ;
                       wtsb2,  ;
                       wtxb2
               RELEASE mdate5
               RELEASE gs_entry,  ;
                       gs_recno
               RELEASE i_jbdelta,  ;
                       i_jbdelta1,  ;
                       i_qjdelta
               RELEASE itwo,  ;
                       ithree,  ;
                       imode
               RELEASE idengji,  ;
                       idengji1,  ;
                       pub_menjin
               RELEASE pub_lastdate,  ;
                       pub_lastbc,  ;
                       modisk_1440_sb,  ;
                       modisk_1440_xb
               RELEASE pub_jbss,  ;
                       pub_jblb,  ;
                       pub_jbks,  ;
                       pub_jbjs,  ;
                       pub_jbbc,  ;
                       pub_jbbcks,  ;
                       pub_jbbcjs,  ;
                       pub_jbbcss,  ;
                       pub_jbqj_no
               RELEASE pub_qjss,  ;
                       pub_qjlb,  ;
                       pub_qjks,  ;
                       pub_qjjs,  ;
                       pub_qjbc,  ;
                       pub_qjbcks,  ;
                       pub_qjbcjs,  ;
                       pub_qjbcss
               RELEASE pub_cqss,  ;
                       pub_cqks,  ;
                       pub_cqjs,  ;
                       pub_cqbc,  ;
                       pub_cqbcks,  ;
                       pub_cqbcjs,  ;
                       pub_cqbcss
               SET ESCAPE OFF
               RETURN
     ENDCASE
     IF mdate > pub_jieshuriqi
          DO skipnext
          LOOP
     ENDIF
     IF pub_menjin = "YES"
          DO 3AKQ0311
     ENDIF
     IF mdate < CTOD(riqi)
          SELECT xjjl_d
          SET EXACT OFF
          SEEK mzgbh +  ;
               DTOC(mdate) 
          SET EXACT ON
          IF  .NOT. EOF() .AND.  ;
              kqlb >= 93 .AND.  ;
              kqlb <= 94 .AND.  ;
              kssj > 0
               SELECT ardata_
               APPEND BLANK
               REPLACE zgbh WITH  ;
                       xjjl_d.zgbh,  ;
                       riqi WITH  ;
                       xjjl_d.riqi,  ;
                       shijian  ;
                       WITH  ;
                       xjjl_d.kssj
               recptr = RECNO()
               IF xjjl_d.jssj > 0
                    APPEND BLANK
                    REPLACE zgbh  ;
                            WITH  ;
                            xjjl_d.zgbh,  ;
                            shijian  ;
                            WITH  ;
                            xjjl_d.jssj
                    IF xjjl_d.jssj >=  ;
                       xjjl_d.kssj
                         REPLACE riqi  ;
                                 WITH  ;
                                 xjjl_d.riqi
                    ELSE
                         REPLACE riqi  ;
                                 WITH  ;
                                 DTOC(CTOD(xjjl_d.riqi) +  ;
                                 1)
                    ENDIF
               ENDIF
               GOTO recptr
          ENDIF
     ENDIF
     DO getjbqj
     DO getsktab
     DO skproc
     DO setmark
ENDDO
DO prgterm
RETURN
ENDPROC
**
PROCEDURE PrgInit
IF pub_language
     obj_form4.txt_msg.value = "Be loading the datas,please wait a minute..."
ELSE
     obj_form4.txt_msg.value = "正在加载考勤关联资料，请等待..."
ENDIF
PUBLIC sktabbou, sktabsel,  ;
       sktabcnt, bctabbou,  ;
       bctabsel, bctabcnt,  ;
       pub_12h, pub_bctabsel,  ;
       pub_flag1, pub_flag2,  ;
       pub_delta1, pub_delta2
PUBLIC itwo, ithree, imode
PUBLIC idengji, idengji1
sktabbou = 10
bctabbou = 30
PUBLIC sktab(sktabbou),  ;
       sktabio(sktabbou),  ;
       bztab(sktabbou),  ;
       bctabbh(bctabbou),  ;
       addedflagtab(bctabbou)
PUBLIC bctabsb(bctabbou),  ;
       bctabxb(bctabbou),  ;
       bctabss(bctabbou),  ;
       bctablb(bctabbou),  ;
       bctabcl(bctabbou)
PUBLIC delta0, delta2, delta3,  ;
       delta4, delta8, delta9,  ;
       delta9max, wtsb1, wtxb1,  ;
       wtsb2, wtxb2, mzgbh, mdate,  ;
       recptr, tabptr, mdate1
PUBLIC clbc(bctabbou),  ;
       dsb(bctabbou),  ;
       dxb(bctabbou),  ;
       dlb(bctabbou),  ;
       dxx(bctabbou),  ;
       dss(bctabbou),  ;
       dmark(bctabbou)
PUBLIC mdate5
PUBLIC gs_entry, gs_recno
PUBLIC i_jbdelta, i_jbdelta1,  ;
       i_qjdelta, pub_menjin
PUBLIC pub_lastdate, pub_lastbc,  ;
       modisk_1440_sb,  ;
       modisk_1440_xb
PUBLIC pub_jbss(3, 3), pub_jblb(3,  ;
       3), pub_jbks(3, 3),  ;
       pub_jbjs(3, 3), pub_jbbc(3,  ;
       3), pub_jbbcks(3, 3),  ;
       pub_jbbcjs(3, 3),  ;
       pub_jbbcss(3, 3)
PUBLIC pub_qjss(3, 3), pub_qjlb(3,  ;
       3), pub_qjks(3, 3),  ;
       pub_qjjs(3, 3), pub_qjbc(3,  ;
       3), pub_qjbcks(3, 3),  ;
       pub_qjbcjs(3, 3),  ;
       pub_qjbcss(3, 3)
PUBLIC pub_cqss(3, 3), pub_cqks(3,  ;
       3), pub_cqjs(3, 3),  ;
       pub_cqbc(3, 3),  ;
       pub_cqbcks(3, 3),  ;
       pub_cqbcjs(3, 3),  ;
       pub_cqbcss(3, 3)
PUBLIC pub_jbqj_no
pub_lastdate = CTOD("")
pub_lastbc = ""
i_qjdelta = 60
gs_entry = 0
gs_recno = 0
mdate5 = CTOD("")
mdate = CTOD("")
pub_escape = .F.
mquan = 0
delta0 = getantenv("FXPARA",  ;
         "DELTA0")
delta2 = getantenv("FXPARA",  ;
         "DELTA2")
delta3 = getantenv("FXPARA",  ;
         "DELTA3")
delta4 = getantenv("FXPARA",  ;
         "DELTA4")
wtsb1 = getantenv("FXPARA",  ;
        "WTSB1")
wtxb1 = getantenv("FXPARA",  ;
        "WTXB1")
wtsb2 = getantenv("FXPARA",  ;
        "WTSB2")
wtxb2 = getantenv("FXPARA",  ;
        "WTXB2")
delta8 = 240
delta9 = 0.3 
delta9max = 120
pub_menjin = getantenv("FXPARA",  ;
             "MENJIN")
strsql = "SELECT * from kq_ZG WHERE " +  ;
         STRTRAN(str_bmbh, "@",  ;
         "BMBH") +  ;
         STRTRAN(pub_zgbh_filter,  ;
         "@", "kq_zg")
sqlexe_run((00000000152), SYS(16),  ;
          strsql, "zg")
SELECT zg
INDEX ON zgbh TO zg
sqlexe_run((00000000156), SYS(16),  ;
          "select * from kq_BcType where lb<>' '",  ;
          "BcType")
SELECT bctype
INDEX ON lb TAG lb
sqlexe_run((00000000160), SYS(16),  ;
          "select * from kq_time",  ;
          "time")
SELECT time
INDEX ON bc TO time
sqlexe_run((00000000164), SYS(16),  ;
          "select * from kq_time where bc<>' '",  ;
          "bctmp")
SELECT bctmp
INDEX ON bc TO bctmp
ndate = DTOC(pub_kaishiriqi)
kdate = DTOC(pub_jieshuriqi)
strsql = "select distinct kq_xjjl_d.ID,kq_xjjl_d.ZGBH,kq_xjjl_d.RIQI,kq_xjjl_d.KQLB,kq_xjjl_d.BC,kq_xjjl_d.SS,kq_xjjl_d.TS,kq_xjjl_d.JBATTR,kq_xjjl_d.KSSJ,kq_xjjl_d.JSSJ"
strsql = strsql +  ;
         ",0 as mark from kq_xjjl_d,kq_zg where kq_xjjl_d.RIQI>=?ndate and kq_xjjl_d.RIQI<=?kdate"
strsql = strsql +  ;
         " and kq_xjjl_d.zgbh=kq_zg.zgbh and " +  ;
         STRTRAN(str_bmbh, "@",  ;
         "kq_zg.BMBH")
strsql = strsql +  ;
         STRTRAN(pub_zgbh_filter,  ;
         "@", "kq_xjjl_d")
sqlexe_run((00000000176), SYS(16),  ;
          strsql, "xjjl_d")
SELECT xjjl_d
INDEX ON zgbh + riqi TO XJJL_D
DO preprocess
SET ESCAPE ON
ON ESCAPE DO P_ESC		
IF pub_language
     obj_form4.txt_msg.value = "Be processing the time records,please wait a minute..."
ELSE
     obj_form4.txt_msg.value = "正在处理考勤刷卡数据，请等待..."
ENDIF
RETURN
ENDPROC
**
PROCEDURE PrgTerm
IF  .NOT. pub_escape
     obj_form4.txt_msg1.value = ""
     IF pub_language
          obj_form4.txt_msg.value =  ;
           "It is ready for analysis,please wait a minute..."
     ELSE
          obj_form4.txt_msg.value =  ;
           "正在进行分析准备工作，请等待..."
     ENDIF
     DO savecl1
     DO savecl2
     SELECT ardata_
     COPY TO ardata
     USE ardata ALIAS ardata IN 0
     SELECT ardata
     INDEX ON zgbh + riqi +  ;
           STR(shijian, 4) TO  ;
           ARDATA
     SCAN
          IF EMPTY(donedate)  ;
             .AND. CTOD(riqi) <  ;
             pub_jieshuriqi
               REPLACE donedate  ;
                       WITH riqi
          ENDIF
     ENDSCAN
ENDIF
RELEASE sktabbou, sktabsel,  ;
        sktabcnt, bctabbou,  ;
        bctabsel, bctabcnt,  ;
        sktabio, addedflagtab
RELEASE sktab, bctabbh, bctabsb,  ;
        bctabxb, bctabss, bctablb,  ;
        bctabcl, pub_12h,  ;
        pub_bctabsel, pub_flag1,  ;
        pub_flag2, pub_delta1,  ;
        pub_delta2
RELEASE delta2, delta3, delta4,  ;
        delta8, delta9, delta9max,  ;
        mzgbh, mdate
RELEASE clbc, dsb, dxb, dlb, dxx,  ;
        dss, dmark, wtsb1, wtxb1,  ;
        wtsb2, wtxb2
RELEASE mdate5
RELEASE gs_entry, gs_recno
RELEASE i_jbdelta, i_jbdelta1,  ;
        i_qjdelta
RELEASE itwo, ithree, imode
RELEASE idengji, idengji1,  ;
        pub_menjin
RELEASE pub_lastdate, pub_lastbc,  ;
        modisk_1440_sb,  ;
        modisk_1440_xb
RELEASE pub_jbss, pub_jblb,  ;
        pub_jbks, pub_jbjs,  ;
        pub_jbbc, pub_jbbcks,  ;
        pub_jbbcjs, pub_jbbcss,  ;
        pub_jbqj_no
RELEASE pub_qjss, pub_qjlb,  ;
        pub_qjks, pub_qjjs,  ;
        pub_qjbc, pub_qjbcks,  ;
        pub_qjbcjs, pub_qjbcss
RELEASE pub_cqss, pub_cqks,  ;
        pub_cqjs, pub_cqbc,  ;
        pub_cqbcks, pub_cqbcjs,  ;
        pub_cqbcss
SELECT ardata_
USE
SET ESCAPE OFF
SET EXACT OFF
RETURN
ENDPROC
**
FUNCTION GetBcTab
bctabcnt = 0
v_ksbc = ALLTRIM(zg.ksbc)
mbc = LEFT(v_ksbc, IIF(AT(",",  ;
      v_ksbc) = 0, 3, AT(",",  ;
      v_ksbc) - 1))
v_ksbc = RIGHT(v_ksbc,  ;
         LEN(v_ksbc) - LEN(mbc) -  ;
         1)
SELECT time
DO WHILE  .NOT. EMPTY(mbc)
     SEEK mbc 
     DO WHILE  .NOT. EOF() .AND.  ;
        bc=mbc
          bctabcnt = bctabcnt + 1
          IF bctabcnt > bctabbou
               RETURN -1
          ENDIF
          bctabbh(bctabcnt) = bc
          bctabsb(bctabcnt) =  ;
                 sbsj
          IF xbsj <= sbsj
               bctabxb(bctabcnt) =  ;
                      xbsj +  ;
                      1440
          ELSE
               bctabxb(bctabcnt) =  ;
                      xbsj
          ENDIF
          bctabss(bctabcnt) = ss
          bctablb(bctabcnt) = lb
          SKIP
     ENDDO
     mbc = LEFT(v_ksbc, IIF(AT( ;
           ",", v_ksbc) = 0, 3,  ;
           AT(",", v_ksbc) - 1))
     v_ksbc = RIGHT(v_ksbc,  ;
              LEN(v_ksbc) -  ;
              LEN(mbc) - 1)
ENDDO
SELECT ardata_
RETURN bctabcnt
ENDFUNC
**
PROCEDURE GetSkTab
PRIVATE mzg
SELECT ardata_
GOTO recptr
SKIP -1
mzg = zgbh
mdate5 = CTOD(riqi)
GOTO recptr
IF gs_recno = RECNO()
     gs_entry = gs_entry + 1
ELSE
     gs_recno = RECNO()
     gs_entry = 0
ENDIF
itwo = 0
ithree = 0
sktabcnt = 0
tabptr = 1
rp = 0
DO WHILE sktabcnt<sktabbou .AND.   ;
   .NOT. EOF() .AND. mzgbh=zgbh  ;
   .AND. mdate=CTOD(riqi)
     sktabcnt = sktabcnt + 1
     DO CASE
          CASE mdate = CTOD(riqi) +  ;
               1
               sktab(sktabcnt) =  ;
                    shijian -  ;
                    1440
          CASE mdate = CTOD(riqi)
               sktab(sktabcnt) =  ;
                    shijian
     ENDCASE
     bztab(sktabcnt) = 9
     sktabio(sktabcnt) = io
     addedflagtab(sktabcnt) =  ;
                 addedflag
     SKIP
ENDDO
DO WHILE sktabcnt<sktabbou .AND.   ;
   .NOT. EOF() .AND. mzgbh=zgbh  ;
   .AND. mdate=CTOD(riqi)-1
     sktabcnt = sktabcnt + 1
     IF itwo = 0 .AND.  .NOT.  ;
        chkweehours(1, shijian)
          itwo = sktabcnt
     ENDIF
     sktab(sktabcnt) = shijian +  ;
          1440
     bztab(sktabcnt) = 9
     sktabio(sktabcnt) = io
     addedflagtab(sktabcnt) =  ;
                 addedflag
     SKIP
ENDDO
DO WHILE sktabcnt<sktabbou .AND.   ;
   .NOT. EOF() .AND. mzgbh=zgbh  ;
   .AND. mdate=CTOD(riqi)-2
     sktabcnt = sktabcnt + 1
     IF ithree = 0 .AND.  .NOT.  ;
        chkweehours(2, shijian)
          sktab(sktabcnt) =  ;
               shijian + 2880
          bztab(sktabcnt) = 9
          sktabio(sktabcnt) = io
          addedflagtab(sktabcnt) =  ;
                      addedflag
          ithree = sktabcnt
          EXIT
     ELSE
          IF itwo = 0 .AND.  ;
             chkweehours(1,  ;
             shijian)
               itwo = sktabcnt
          ENDIF
     ENDIF
     sktab(sktabcnt) = shijian +  ;
          2880
     bztab(sktabcnt) = 9
     sktabio(sktabcnt) = io
     addedflagtab(sktabcnt) =  ;
                 addedflag
     SKIP
ENDDO
IF rp <> 0
     IF EOF()
          GOTO BOTTOM
     ENDIF
     rp1 = RECNO()
     GOTO rp
     SKIP
     recptr = RECNO()
     GOTO rp1
ENDIF
RETURN
ENDPROC
**
PROCEDURE SkProc
FOR i = 1 TO sktabbou
     bctabcl(i) = .F.
ENDFOR
mloop = .T.
pub_lastbc = ""
pub_lastdate = CTOD("")
mresults = ""
FOR skscan = 1 TO 10
     IF  .NOT. mloop
          FOR i = 1 TO sktabcnt
               FOR p = i TO  ;
                   sktabcnt
                    IF bztab(p) <>  ;
                       9 .OR.  ;
                       sktab(p) >=  ;
                       1440 +  ;
                       delta0
                         EXIT
                    ENDIF
               ENDFOR
               IF p > i + 1 .AND.  ;
                  p <= sktabcnt
                    FOR q = i TO  ;
                        p - 1
                         bztab(q) =  ;
                              3
                    ENDFOR
                    i = p
               ENDIF
               IF bztab(i) = 9
                    bztab(i) = 3
                    IF sktab(i) <  ;
                       1440 +  ;
                       delta0
                         mcnt = 0
                         mcnt1 = 0
                         FOR j =  ;
                             i -  ;
                             1 TO  ;
                             1  ;
                             STEP - ;
                             1
                              IF bztab(j) =  ;
                                 1
                                   mcnt = mcnt + 1
                                   IF mcnt1 = 0
                                        mcnt1 = j
                                   ENDIF
                              ENDIF
                              IF mcnt >  ;
                                 1
                                   EXIT
                              ENDIF
                         ENDFOR
                         IF mcnt >  ;
                            1
                              tabptr =  ;
                               j
                              bctabsel = - ;
                               1
                              k =  ;
                               chkbc(mcnt1)
                              mbctabsel =  ;
                               bctabsel
                              tabptr =  ;
                               j
                              bctabsel = - ;
                               1
                              k =  ;
                               chkbc(i)
                              IF k <  ;
                                 9999  ;
                                 .AND.  ;
                                 bctabsel >  ;
                                 0  ;
                                 .AND.  ;
                                 mbctabsel =  ;
                                 bctabsel
                                   IF mcnt1 > tabptr + 1 .AND. sktab(mcnt1 - 1) >= bctabxb(bctabsel) - sjzt1
                                        bztab(mcnt1 - 1) = 1
                                        bztab(mcnt1) = 3
                                        msele = LTRIM(STR(SELECT()))
                                        SELECT clfx
                                        mrec = RECNO()
                                        DO WHILE mzgbh=zgbh .AND. mdate=CTOD(riqi) .AND.  .NOT. BOF()
                                             SKIP -1
                                        ENDDO
                                        SKIP
                                        DO WHILE mzgbh=zgbh .AND. mdate=CTOD(riqi) .AND.  .NOT. EOF()
                                             IF bc = bctabbh(bctabsel)
                                                  REPLACE xbsk WITH IIF(sktab(mcnt1 - 1) > 1440, sktab(mcnt1 - 1) - 1440, sktab(mcnt1 - 1))
                                                  EXIT
                                             ENDIF
                                             SKIP
                                        ENDDO
                                        GOTO mrec
                                        SELECT &msele
                                   ELSE
                                        FOR x = mcnt1 TO i - 1
                                             bztab(x) = 2
                                        ENDFOR
                                        bztab(i) = 1
                                        msele = LTRIM(STR(SELECT()))
                                        SELECT clfx
                                        mrec = RECNO()
                                        DO WHILE mzgbh=zgbh .AND. mdate=CTOD(riqi) .AND.  .NOT. BOF()
                                             SKIP -1
                                        ENDDO
                                        SKIP
                                        DO WHILE mzgbh=zgbh .AND. mdate=CTOD(riqi) .AND.  .NOT. EOF()
                                             IF bc = bctabbh(bctabsel)
                                                  REPLACE xbsk WITH IIF(sktab(i) > 1440, sktab(i) - 1440, sktab(i))
                                                  DO CASE
                                                       CASE kgss > 0 .AND. sktab(i) < bctabxb(bctabsel)
                                                            REPLACE kgss WITH 0, zdcl WITH 98
                                                       CASE ztss > 0
                                                            REPLACE ztss WITH 0, zdcl WITH 98
                                                  ENDCASE
                                                  EXIT
                                             ENDIF
                                             SKIP
                                        ENDDO
                                        GOTO mrec
                                        SELECT &msele
                                   ENDIF
                              ENDIF
                         ELSE
                              mcnt =  ;
                               0
                              mcnt1 =  ;
                               0
                              FOR  ;
                               j =  ;
                               i +  ;
                               1  ;
                               TO  ;
                               sktabcnt
                                   IF (itwo > 0 .AND. j >= itwo) .OR. (ithree > 0 .AND. j >= ithree)
                                        EXIT
                                   ENDIF
                                   IF bztab(j) = 1
                                        mcnt = mcnt + 1
                                        IF mcnt1 = 0
                                             mcnt1 = j
                                        ENDIF
                                   ENDIF
                                   IF mcnt > 1
                                        EXIT
                                   ENDIF
                              ENDFOR
                              IF mcnt >  ;
                                 1
                                   tabptr = mcnt1
                                   bctabsel = -1
                                   k = chkbc(j)
                                   mbctabsel = bctabsel
                                   tabptr = i
                                   bctabsel = -1
                                   k = chkbc(j)
                                   IF bctabsel > 0 .AND. mbctabsel = bctabsel
                                        FOR x = mcnt1 TO i - 1
                                             bztab(x) = 2
                                        ENDFOR
                                        bztab(i) = 1
                                        msele = LTRIM(STR(SELECT()))
                                        SELECT clfx
                                        mrec = RECNO()
                                        DO WHILE mzgbh=zgbh .AND. mdate=CTOD(riqi) .AND.  .NOT. BOF()
                                             SKIP -1
                                        ENDDO
                                        SKIP
                                        DO WHILE mzgbh=zgbh .AND. mdate=CTOD(riqi) .AND.  .NOT. EOF()
                                             IF bc = bctabbh(bctabsel)
                                                  REPLACE sbsk WITH IIF(sktab(i) > 1440, sktab(i) - 1440, sktab(i))
                                                  DO CASE
                                                       CASE kgss > 0 .AND. bctabsb(bctabsel) < sktab(i)
                                                            REPLACE kgss WITH 0, zdcl WITH 98
                                                       CASE cdss > 0
                                                            REPLACE cdss WITH 0, zdcl WITH 98
                                                  ENDCASE
                                                  EXIT
                                             ENDIF
                                             SKIP
                                        ENDDO
                                        GOTO mrec
                                        SELECT &msele
                                   ENDIF
                              ENDIF
                         ENDIF
                    ENDIF
               ENDIF
          ENDFOR
          EXIT
     ENDIF
     FOR y = sktabcnt TO 1 STEP - ;
         1
          IF bztab(y) <> 3
               EXIT
          ENDIF
     ENDFOR
     sktabcnt = y
     mloop = .F.
     i1 = -1
     j1 = -1
     k1 = 1
     d1 = 9999
     d = 9999
     mbtb = .F.
     bctabsel = -1
     sktabsel = -1
     iflag1 = 0
     iflag2 = 0
     idelta1 = 9999
     idelta2 = 9999
     imode1 = 0
     idengji1 = .F.
     idengji = .F.
     FOR tabptr = 1 TO sktabcnt -  ;
         1
          IF bztab(tabptr) <> 9
               LOOP
          ENDIF
          FOR i = sktabcnt TO  ;
              tabptr + 1 STEP -1
               IF bztab(i) <> 9
                    LOOP
               ENDIF
               FOR p = tabptr + 1  ;
                   TO i - 1
                    IF bztab(p) =  ;
                       1
                         EXIT
                    ENDIF
               ENDFOR
               IF p <= i - 1
                    LOOP
               ENDIF
               d = chkbc(i)
               IF d = -9999
                    IF pub_jblb(1,  ;
                       pub_jbqj_no) =  ;
                       92
                         IF j1 >  ;
                            0  ;
                            .AND.  ;
                            d1 <  ;
                            9999
                              DO modisk_1440  ;
                                 WITH  ;
                                 sktab(tabptr),  ;
                                 sktab(i)
                              isb =  ;
                               modisk_1440_sb
                              ixb =  ;
                               modisk_1440_xb
                              DO modisk_1440  ;
                                 WITH  ;
                                 sktab(k1),  ;
                                 sktab(i1)
                              ksb =  ;
                               IIF(modisk_1440_sb <  ;
                               bctabsb(j1),  ;
                               modisk_1440_sb,  ;
                               bctabsb(j1))
                              kxb =  ;
                               IIF(modisk_1440_xb >  ;
                               bctabxb(j1),  ;
                               modisk_1440_xb,  ;
                               bctabxb(j1))
                              kdelta9 =  ;
                               IIF(delta9 *  ;
                               pub_jbss(1,  ;
                               pub_jbqj_no) <  ;
                               delta9max,  ;
                               delta9 *  ;
                               pub_jbss(1,  ;
                               pub_jbqj_no),  ;
                               delta9max)
                              DO CASE
                                   CASE isb < ksb .AND. ixb >= ksb .AND. ixb <= kxb .AND. ksb - isb < kdelta9
                                        DO CASE
                                             CASE i1 = i + 1 .AND. (sktab(i1) - sktab(k1)) / pub_jbss(1, pub_jbqj_no) > 1.2 
                                                  msw = .F.
                                             CASE i1 > i + 1 .AND. sktab(i1) - sktab(i + 1) > sjcq * 0.7 
                                                  msw = .F.
                                             OTHERWISE
                                                  msw = .T.
                                        ENDCASE
                                   CASE isb >= ksb .AND. isb <= kxb .AND. ixb > kxb .AND. ixb - kxb < kdelta9
                                        DO CASE
                                             CASE k1 = tabptr - 1 .AND. (sktab(i1) - sktab(k1)) / pub_jbss(1, pub_jbqj_no) > 1.2 
                                                  msw = .F.
                                             CASE k1 < tabptr - 1 .AND. sktab(tabptr - 1) - sktab(k1) > sjcq * 0.7 
                                                  msw = .F.
                                             OTHERWISE
                                                  msw = .T.
                                        ENDCASE
                                   CASE isb >= ksb .AND. isb <= kxb .AND. ixb >= ksb .AND. ixb <= kxb
                                        DO CASE
                                             CASE i1 = i + 1 .AND. (sktab(i1) - sktab(k1)) / pub_jbss(1, pub_jbqj_no) > 1.2 
                                                  msw = .F.
                                             CASE i1 > i + 1 .AND. sktab(i1) - sktab(i + 1) > sjcq * 0.7 
                                                  msw = .F.
                                             CASE k1 = tabptr - 1 .AND. (sktab(i1) - sktab(k1)) / pub_jbss(1, pub_jbqj_no) > 1.2 
                                                  msw = .F.
                                             CASE k1 < tabptr - 1 .AND. sktab(tabptr - 1) - sktab(k1) > sjcq * 0.7 
                                                  msw = .F.
                                             OTHERWISE
                                                  msw = .T.
                                        ENDCASE
                                   OTHERWISE
                                        IF j1 > 0 .AND. LEN(TRIM(bctabbh(j1))) > 2
                                             msw = .T.
                                        ELSE
                                             msw = .F.
                                        ENDIF
                              ENDCASE
                              IF msw
                                   bctabsel = -1
                                   sktabsel = -1
                                   LOOP
                              ENDIF
                         ENDIF
                         IF tabptr +  ;
                            1 < i  ;
                            .AND.  ;
                            sktabio(tabptr +  ;
                            1) =  ;
                            'O'
                              bctabsel = - ;
                               1
                              sktabsel = - ;
                               1
                              LOOP
                         ENDIF
                         IF tabptr =  ;
                            2
                              bctabsel = - ;
                               1
                              sktabsel = - ;
                               1
                              LOOP
                         ENDIF
                    ELSE
                    ENDIF
                    sktabsel = i
                    EXIT
               ENDIF
               IF pub_jblb(1,  ;
                  pub_jbqj_no) >  ;
                  91 .AND.  ;
                  pub_jblb(1,  ;
                  pub_jbqj_no) <  ;
                  95 .AND. (itwo =  ;
                  0 .OR. tabptr <  ;
                  itwo)
                    isb = IIF(sktab(tabptr) >  ;
                          2880 +  ;
                          delta0,  ;
                          sktab(tabptr) -  ;
                          2880,  ;
                          IIF(sktab(tabptr) >  ;
                          1440 +  ;
                          delta0,  ;
                          sktab(tabptr) -  ;
                          1440,  ;
                          sktab(tabptr)))
                    ixb = IIF(sktab(tabptr) >  ;
                          2880 +  ;
                          delta0,  ;
                          sktab(i) -  ;
                          2880,  ;
                          IIF(sktab(tabptr) >  ;
                          1440 +  ;
                          delta0,  ;
                          sktab(i) -  ;
                          1440,  ;
                          sktab(i)))
                    d = d +  ;
                        chkjb(isb,  ;
                        ixb, 0)
               ENDIF
               mflag = .F.
               DO CASE
                    CASE bctabsel >  ;
                         0 .AND.  ;
                         j1 <= 0
                         mflag = .T.
                    CASE bctabsel >  ;
                         0 .AND.  ;
                         j1 > 0  ;
                         .AND.  ;
                         LEN(TRIM(bctabbh(j1))) >=  ;
                         3 .AND.  ;
                         bctabbh(j1) =  ;
                         bctabbh(bctabsel)
                         mflag = .T.
                    CASE bctabsel >  ;
                         0 .AND.  ;
                         j1 > 0  ;
                         .AND.  ;
                         LEN(TRIM(bctabbh(j1))) <  ;
                         3
                         mflag = .T.
               ENDCASE
               IF bctabsel > 0
                    mflag1 = 0
                    IF mflag1 = 0  ;
                       .AND.  ;
                       ABS(d1 -  ;
                       d) <= 30  ;
                       .AND. j1 <>  ;
                       bctabsel  ;
                       .AND. k1 =  ;
                       tabptr
                         mflag1 =  ;
                          2
                    ENDIF
                    IF mflag1 = 0  ;
                       .AND.  ;
                       ABS(d1 -  ;
                       d) <=  ;
                       delta8
                         mflag11 =  ;
                          0
                         DO CASE
                              CASE  ;
                               k1 >=  ;
                               ithree  ;
                               .AND.  ;
                               ithree >  ;
                               0
                                   mday = 3
                              CASE  ;
                               k1 >=  ;
                               itwo  ;
                               .AND.  ;
                               itwo >  ;
                               0
                                   mday = 2
                              OTHERWISE
                                   mday = 1
                         ENDCASE
                         IF i1 >  ;
                            0  ;
                            .AND.  ;
                            pub_jbss(mday,  ;
                            pub_jbqj_no) >  ;
                            0
                              mflag11 =  ;
                               chkdup(sktab(k1),  ;
                               sktab(i1),  ;
                               pub_jbks(mday,  ;
                               pub_jbqj_no),  ;
                               pub_jbjs(mday,  ;
                               pub_jbqj_no))
                         ENDIF
                         IF i1 >  ;
                            0  ;
                            .AND.  ;
                            pub_qjss(mday,  ;
                            pub_jbqj_no) >  ;
                            0
                              mflag11 =  ;
                               chkdup(sktab(k1),  ;
                               sktab(i1),  ;
                               pub_qjks(mday,  ;
                               pub_jbqj_no),  ;
                               pub_qjjs(mday,  ;
                               pub_jbqj_no))
                         ENDIF
                         mflag12 =  ;
                          0
                         DO CASE
                              CASE  ;
                               tabptr >=  ;
                               ithree  ;
                               .AND.  ;
                               ithree >  ;
                               0
                                   mday = 3
                              CASE  ;
                               tabptr >=  ;
                               itwo  ;
                               .AND.  ;
                               itwo >  ;
                               0
                                   mday = 2
                              OTHERWISE
                                   mday = 1
                         ENDCASE
                         IF pub_jbss(mday,  ;
                            pub_jbqj_no) >  ;
                            0
                              mflag10 =  ;
                               0
                              IF i1 =  ;
                                 tabptr
                                   mflag10 = chkdupforall(tabptr + 1, i, mday)
                              ENDIF
                              IF mflag10 =  ;
                                 0
                                   mflag12 = chkdup(sktab(tabptr), sktab(i), pub_jbks(mday, pub_jbqj_no), pub_jbjs(mday, pub_jbqj_no))
                              ELSE
                                   IF mday > 1
                                        sktabcnt = mflag10 - 1
                                        EXIT
                                   ENDIF
                              ENDIF
                         ENDIF
                         IF pub_qjss(mday,  ;
                            pub_jbqj_no) >  ;
                            0
                              mflag12 =  ;
                               chkdup(sktab(tabptr),  ;
                               sktab(i),  ;
                               pub_qjks(mday,  ;
                               pub_jbqj_no),  ;
                               pub_qjjs(mday,  ;
                               pub_jbqj_no))
                         ENDIF
                         IF pub_qjss(mday,  ;
                            pub_jbqj_no) >  ;
                            0
                              IF mflag12 =  ;
                                 2  ;
                                 .AND.  ;
                                 mflag11 <>  ;
                                 2  ;
                                 .AND.  ;
                                 tabptr +  ;
                                 1 =  ;
                                 i  ;
                                 .AND.   ;
                                 .NOT.  ;
                                 (tabptr >=  ;
                                 k1  ;
                                 .AND.  ;
                                 i <=  ;
                                 i1)
                                   mflag1 = 2
                              ENDIF
                         ELSE
                              IF mflag12 >  ;
                                 mflag11
                                   mflag1 = 2
                              ENDIF
                         ENDIF
                         IF mflag1 =  ;
                            0  ;
                            .AND.  ;
                            itwo >  ;
                            0  ;
                            .AND.  ;
                            k1 <  ;
                            itwo  ;
                            .AND.  ;
                            tabptr =  ;
                            k1  ;
                            .AND.  ;
                            i <  ;
                            itwo  ;
                            .AND.  ;
                            i1 >=  ;
                            itwo  ;
                            .AND.  ;
                            bctabsel <>  ;
                            j1
                              mflag1 =  ;
                               2
                         ENDIF
                    ENDIF
                    IF mflag1 = 0  ;
                       .AND. (d1 >  ;
                       d + delta8  ;
                       .OR. (d <  ;
                       delta8 / 4  ;
                       .AND. d1 >  ;
                       delta8 * 3 /  ;
                       4))
                         IF  .NOT.  ;
                             (ABS(d1 -  ;
                             d) <=  ;
                             delta8  ;
                             .AND.  ;
                             k1 =  ;
                             1  ;
                             .AND.  ;
                             i1 =  ;
                             tabptr  ;
                             .AND.  ;
                             itwo >  ;
                             0  ;
                             .AND.  ;
                             i >=  ;
                             itwo)
                              mflag1 =  ;
                               2
                         ENDIF
                    ENDIF
                    IF mflag1 = 0  ;
                       .AND. d1 -  ;
                       d >= 0  ;
                       .AND. d1 -  ;
                       d <=  ;
                       delta8
                         IF j1 >  ;
                            0  ;
                            .AND.  ;
                            ((bctabbh(bctabsel) =  ;
                            bctabbh(j1)  ;
                            .AND.  ;
                            LEN(TRIM(bctabbh(bctabsel))) >  ;
                            2  ;
                            .AND.  ;
                            idengji1 =  ;
                            idengji)  ;
                            .OR.  ;
                            (  ;
                            .NOT.  ;
                            idengji1  ;
                            .AND.  ;
                            idengji))  ;
                            .AND.  ;
                            tabptr <=  ;
                            i1
                              mflag1 =  ;
                               2
                         ENDIF
                    ENDIF
                    IF mflag1 = 2
                         i1 = i
                         j1 = bctabsel
                         k1 = tabptr
                         d1 = d
                         idelta1 =  ;
                          pub_delta1
                         idelta2 =  ;
                          pub_delta2
                         iflag1 =  ;
                          pub_flag1
                         iflag2 =  ;
                          pub_flag2
                         imode1 =  ;
                          imode
                         idengji1 =  ;
                          idengji
                    ENDIF
               ENDIF
               bctabsel = -1
               sktabsel = -1
          ENDFOR
          IF d = -9999
               EXIT
          ENDIF
     ENDFOR
     IF d1 < d
          d = d1
     ENDIF
     SELECT clfx
     IF d = -9999 .AND. sktabsel >  ;
        0
          mloop = .T.
          mtemp = .T.
          IF tabptr = 1 .AND.  ;
             (tabptr = itwo .OR.  ;
             tabptr = ithree)
               FOR i = 1 TO  ;
                   sktabcnt
                    bztab(i) = 3
               ENDFOR
               mloop = .F.
               mtemp = .F.
          ENDIF
          IF mtemp .AND. (itwo >  ;
             0 .AND. tabptr >=  ;
             itwo) .OR. (ithree >  ;
             0 .AND. tabptr >=  ;
             ithree)
               FOR i = tabptr TO  ;
                   sktabcnt
                    bztab(i) = 3
               ENDFOR
               mtemp = .F.
          ENDIF
          IF mtemp
               bztab(tabptr) = 1
               bztab(sktabsel) =  ;
                    1
               FOR i = tabptr + 1  ;
                   TO sktabsel -  ;
                   1
                    bztab(i) = 2
               ENDFOR
               DO appejbsk
               pub_jblb(1,  ;
                       pub_jbqj_no) =  ;
                       0
          ENDIF
     ELSE
          sktabsel = i1
          bctabsel = j1
          tabptr = k1
          IF  .NOT. (idelta1 >  ;
              iflag1 * delta4  ;
              .OR. idelta2 >  ;
              iflag2 * delta4  ;
              .OR. sktabsel = -1  ;
              .OR. bctabsel = -1  ;
              .OR.  ;
              (LEN(TRIM(mresults)) =  ;
              2 .AND. d >  ;
              delta4))
               mflag = .F.
               IF itwo > 0 .AND.  ;
                  tabptr >= itwo  ;
                  .AND.  ;
                  sktab(tabptr) <=  ;
                  1440 + delta0
                    SELECT time
                    SEEK bctabbh(bctabsel) 
                    IF EOF()
                         mflag = .T.
                    ELSE
                         IF lb <>  ;
                            '3'  ;
                            .AND.  ;
                            lb <>  ;
                            '4'
                              mflag =  ;
                               .T.
                         ENDIF
                    ENDIF
                    SELECT clfx
               ENDIF
               IF mflag .OR.  ;
                  (itwo > 0 .AND.  ;
                  tabptr >= itwo  ;
                  .AND.  ;
                  sktab(tabptr) >  ;
                  1440 + delta0)  ;
                  .OR. (ithree >  ;
                  0 .AND. tabptr >=  ;
                  ithree)
                    FOR i =  ;
                        tabptr TO  ;
                        sktabcnt
                         bztab(i) =  ;
                              3
                    ENDFOR
               ELSE
                    bctabcl(bctabsel) =  ;
                           .T.
                    mresults = bctabbh(bctabsel)
                    DO appetwosk
                    bztab(tabptr) =  ;
                         1
                    bztab(sktabsel) =  ;
                         1
                    FOR i =  ;
                        tabptr +  ;
                        1 TO  ;
                        sktabsel -  ;
                        1
                         bztab(i) =  ;
                              2
                    ENDFOR
                    IF sktabcnt >  ;
                       sktabsel  ;
                       .AND.  ;
                       ((itwo > 0  ;
                       .AND.  ;
                       sktabsel +  ;
                       1 >= itwo)  ;
                       .OR.  ;
                       (ithree >  ;
                       0 .AND.  ;
                       sktabsel +  ;
                       1 >=  ;
                       ithree))
                         FOR i =  ;
                             sktabsel +  ;
                             1 TO  ;
                             sktabcnt
                              bztab(i) =  ;
                               3
                         ENDFOR
                    ENDIF
               ENDIF
               mloop = .T.
          ENDIF
     ENDIF
ENDFOR
SELECT ardata_
RETURN
ENDPROC
**
PROCEDURE SkipNext
m = zgbh
DO WHILE  .NOT. pub_escape .AND.   ;
   .NOT. EOF() .AND. m=zgbh
     SKIP
ENDDO
IF  .NOT. EOF()
     recptr = RECNO()
     mzgbh = zgbh
     mdate = CTOD(riqi) - 1
ENDIF
RETURN
ENDPROC
**
PROCEDURE NextDay
m = riqi
DO WHILE  .NOT. pub_escape .AND.   ;
   .NOT. EOF() .AND. m=riqi
     SKIP
ENDDO
IF  .NOT. EOF()
     recptr = RECNO()
     mzgbh = zgbh
     mdate = IIF(CTOD(riqi) >  ;
             mdate + 1,  ;
             CTOD(riqi) - 1,  ;
             CTOD(riqi))
ENDIF
RETURN
ENDPROC
**
PROCEDURE AppeTwoSk
APPEND BLANK
m = IIF(sktab(tabptr) >= 0,  ;
    sktab(tabptr), 1440 +  ;
    sktab(tabptr))
n = IIF(sktab(sktabsel) >= 0,  ;
    sktab(sktabsel), 1440 +  ;
    sktab(sktabsel))
REPLACE zgbh WITH mzgbh, riqi  ;
        WITH DTOC(mdate)
IF addedflagtab(tabptr) = 0
     REPLACE sbsk WITH m
ENDIF
IF addedflagtab(sktabsel) = 0
     REPLACE xbsk WITH n
ENDIF
REPLACE bc WITH bctabbh(bctabsel),  ;
        lb WITH time.lb
REPLACE sbsj WITH  ;
        bctabsb(bctabsel), xbsj  ;
        WITH bctabxb(bctabsel)
REPLACE zdcl WITH 98
pub_lastdate = mdate
pub_lastbc = bc
mcd = sbsk - sbsj
mzt = xbsj - xbsk
IF mcd > sjcd1 .OR. mzt > sjzt1
     IF  .NOT. chk98(mzgbh,  ;
         DTOC(mdate))
          IF mcd > sjcd1
               REPLACE cdss WITH  ;
                       IIF(sjcd2 >  ;
                       1, sjcd2 *  ;
                       (INT(mcd /  ;
                       sjcd2) +  ;
                       1), mcd)
               REPLACE zdcl WITH  ;
                       80
          ENDIF
          IF mzt > sjzt1
               REPLACE ztss WITH  ;
                       IIF(sjzt2 >  ;
                       1, sjzt2 *  ;
                       (INT(mzt /  ;
                       sjzt2) +  ;
                       1), mzt)
               REPLACE zdcl WITH  ;
                       IIF(zdcl =  ;
                       80, 82,  ;
                       81)
          ENDIF
     ENDIF
ENDIF
IF cdss >= sjcd3 .OR. ztss >=  ;
   sjzt3
     IF (sbsj > 0 .AND. sbsk <  ;
        sbsj .AND. xbsk < sbsj)  ;
        .OR. (xbsj > 0 .AND. sbsk >  ;
        xbsj .AND. xbsk > xbsj)
          REPLACE sbsj WITH 0,  ;
                  xbsj WITH 0, bc  ;
                  WITH '', lb  ;
                  WITH '', cdss  ;
                  WITH 0, ztss  ;
                  WITH 0, zdcl  ;
                  WITH 0
     ELSE
          REPLACE kgss WITH  ;
                  bctabss(bctabsel)
          REPLACE zdcl WITH 85
          REPLACE cdss WITH 0,  ;
                  ztss WITH 0
     ENDIF
ELSE
     REPLACE cqss WITH  ;
             bctabss(bctabsel)
ENDIF
DO writeztwc
RETURN
ENDPROC
**
PROCEDURE AppeJbSk
APPEND BLANK
m = IIF(sktab(tabptr) >= 0,  ;
    sktab(tabptr), 1440 +  ;
    sktab(tabptr))
n = IIF(sktab(sktabsel) >= 0,  ;
    sktab(sktabsel), 1440 +  ;
    sktab(sktabsel))
REPLACE zgbh WITH mzgbh, riqi  ;
        WITH DTOC(mdate)
IF addedflagtab(tabptr) = 0
     REPLACE sbsk WITH m
ENDIF
IF addedflagtab(sktabsel) = 0
     REPLACE xbsk WITH n
ENDIF
m_zjks = 0
m_zjjs = 0
IF bctabsel > 0
     REPLACE bc WITH  ;
             bctabbh(bctabsel)
     REPLACE lb WITH time.lb
     REPLACE sbsj WITH  ;
             bctabsb(bctabsel),  ;
             xbsj WITH  ;
             bctabxb(bctabsel)
     m_zjks = time.zjks
     m_zjjs = IIF(time.zjks >  ;
              time.zjjs, 1440, 0) +  ;
              time.zjjs
ELSE
     REPLACE bc WITH xjjl_d.bc
     SELECT time
     SEEK xjjl_d.bc 
     SELECT clfx
     IF  .NOT. EOF("XJJL_D")
          REPLACE lb WITH time.lb
          REPLACE sbsj WITH  ;
                  time.sbsj, xbsj  ;
                  WITH time.xbsj
          m_zjks = time.zjks
          m_zjjs = IIF(time.zjks >  ;
                   time.zjjs,  ;
                   1440, 0) +  ;
                   time.zjjs
     ENDIF
ENDIF
DO writeztwc
RETURN
ENDPROC
**
FUNCTION ChkBc
PARAMETER n
pub_jbqj_no = 1
ret = 9999
mdelta = 9999
mbctabsel = -1
t_sb = sktab(tabptr)
t_xb = sktab(n)
IF (sktabio(tabptr) = 'O') .OR.  ;
   (sktabio(tabptr) = 'I' .AND.  ;
   sktabio(n) = 'I') .OR.  ;
   (sktabio(tabptr) = 'O' .AND.  ;
   sktabio(n) = 'O')
     RETURN 9999
ENDIF
DO CASE
     CASE ithree > 0 .AND. tabptr >=  ;
          ithree
          mday = 3
     CASE itwo > 0 .AND. tabptr >=  ;
          itwo
          mday = 2
     OTHERWISE
          mday = 1
ENDCASE
DO modisk_1440 WITH sktab(tabptr),  ;
   sktab(n)
sktab_tabptr = modisk_1440_sb
sktab_n = modisk_1440_xb
t_sb = sktab_tabptr
t_xb = sktab_n
IF mday = 1 .AND. pub_cqss(1, 1) >  ;
   0
     IF t_sb - 60 > pub_cqks(1,  ;
        1) .AND. t_sb + 60 <  ;
        pub_cqjs(1, 1)
          RETURN ret
     ENDIF
     IF t_xb - 60 > pub_cqks(1,  ;
        1) .AND. t_xb + 60 <  ;
        pub_cqjs(1, 1)
          RETURN ret
     ENDIF
ENDIF
mentry = .F.
FOR jb_no = 1 TO 3
     IF pub_jblb(mday, jb_no) = 0  ;
        .AND. pub_qjlb(mday,  ;
        jb_no) = 0 .AND.  .NOT.  ;
        (sktab_n > 1440 .AND.  ;
        mday < 3 .AND.  ;
        pub_jblb(mday + 1, 1) >  ;
        92 .AND. pub_jblb(mday +  ;
        1, 1) < 95)
          LOOP
     ENDIF
     DO CASE
          CASE pub_jblb(mday,  ;
               jb_no) = 97
               IF pub_jbks(mday,  ;
                  jb_no) = 0  ;
                  .AND.  ;
                  pub_jbjs(mday,  ;
                  jb_no) = 0
                    t_xb = sktab_n -  ;
                           pub_jbss(mday,  ;
                           jb_no)
                    idengji = .T.
               ELSE
                    DO CASE
                         CASE ABS(pub_jbks(mday,  ;
                              jb_no) -  ;
                              sktab_tabptr) <  ;
                              ABS(pub_jbjs(mday,  ;
                              jb_no) -  ;
                              sktab_n)
                              IF ABS(pub_jbks(mday,  ;
                                 jb_no) -  ;
                                 sktab_tabptr) <  ;
                                 120
                                   t_sb = pub_jbjs(mday, jb_no)
                                   t_xb = sktab_n
                                   idengji = .T.
                              ENDIF
                         CASE ABS(pub_jbks(mday,  ;
                              jb_no) -  ;
                              sktab_tabptr) >=  ;
                              ABS(pub_jbjs(mday,  ;
                              jb_no) -  ;
                              sktab_n)
                              IF ABS(pub_jbjs(mday,  ;
                                 jb_no) -  ;
                                 sktab_n) <  ;
                                 120
                                   t_sb = sktab_tabptr
                                   t_xb = pub_jbks(mday, jb_no)
                                   idengji = .T.
                              ENDIF
                    ENDCASE
               ENDIF
          CASE pub_jblb(mday,  ;
               jb_no) = 92
               IF pub_jbks(mday,  ;
                  jb_no) = 0  ;
                  .AND.  ;
                  pub_jbjs(mday,  ;
                  jb_no) = 0
                    IF pub_jbss(mday,  ;
                       jb_no) >  ;
                       0
                         mdt = pub_jbss(mday,  ;
                               jb_no) /  ;
                               (sktab_n -  ;
                               sktab_tabptr -  ;
                               getrest(sktab_tabptr,  ;
                               sktab_n))
                         IF mdt >  ;
                            0.8   ;
                            .AND.  ;
                            mdt <  ;
                            1.2 
                              ret = - ;
                               9999
                         ELSE
                              IF pub_jbss(mday,  ;
                                 jb_no) <  ;
                                 (450^1)
                                   IF ABS(sktab_n - pub_jbss(mday, jb_no) - t_xb) > ABS(t_sb - sktab_tabptr - pub_jbss(mday, jb_no))
                                        IF sktab_n - pub_jbss(mday, jb_no) > t_sb
                                             t_xb = sktab_n - pub_jbss(mday, jb_no)
                                             idengji = .T.
                                        ENDIF
                                   ELSE
                                        IF sktab_tabptr + pub_jbss(mday, jb_no) < t_xb
                                             t_sb = sktab_tabptr + pub_jbss(mday, jb_no)
                                             idengji = .T.
                                        ENDIF
                                   ENDIF
                              ENDIF
                         ENDIF
                    ENDIF
               ELSE
                    i_jbks = 9999
                    i_jbjs = 9999
                    i_jbtype = 0
                    DO CASE
                         CASE pub_jbks(mday,  ;
                              jb_no) >=  ;
                              sktab_tabptr  ;
                              .AND.  ;
                              pub_jbks(mday,  ;
                              jb_no) <=  ;
                              sktab_n  ;
                              .AND.  ;
                              pub_jbjs(mday,  ;
                              jb_no) >=  ;
                              sktab_tabptr  ;
                              .AND.  ;
                              pub_jbjs(mday,  ;
                              jb_no) <=  ;
                              sktab_n
                              i_jbks =  ;
                               pub_jbks(mday,  ;
                               jb_no) -  ;
                               sktab_tabptr
                              i_jbjs =  ;
                               sktab_n -  ;
                               pub_jbjs(mday,  ;
                               jb_no)
                              i_jbtype =  ;
                               1
                         CASE pub_jbks(mday,  ;
                              jb_no) <=  ;
                              sktab_tabptr  ;
                              .AND.  ;
                              pub_jbks(mday,  ;
                              jb_no) <=  ;
                              sktab_n  ;
                              .AND.  ;
                              pub_jbjs(mday,  ;
                              jb_no) >=  ;
                              sktab_tabptr  ;
                              .AND.  ;
                              pub_jbjs(mday,  ;
                              jb_no) >=  ;
                              sktab_n
                              i_jbks =  ;
                               sktab_tabptr -  ;
                               pub_jbks(mday,  ;
                               jb_no)
                              i_jbjs =  ;
                               pub_jbjs(mday,  ;
                               jb_no) -  ;
                               sktab_n
                              i_jbtype =  ;
                               2
                         CASE pub_jbks(mday,  ;
                              jb_no) <=  ;
                              sktab_tabptr  ;
                              .AND.  ;
                              pub_jbks(mday,  ;
                              jb_no) <=  ;
                              sktab_n  ;
                              .AND.  ;
                              pub_jbjs(mday,  ;
                              jb_no) >=  ;
                              sktab_tabptr  ;
                              .AND.  ;
                              pub_jbjs(mday,  ;
                              jb_no) <=  ;
                              sktab_n
                              i_jbks =  ;
                               sktab_tabptr -  ;
                               pub_jbks(mday,  ;
                               jb_no)
                              i_jbjs =  ;
                               sktab_n -  ;
                               pub_jbjs(mday,  ;
                               jb_no)
                              i_jbtype =  ;
                               3
                         CASE pub_jbks(mday,  ;
                              jb_no) >=  ;
                              sktab_tabptr  ;
                              .AND.  ;
                              pub_jbks(mday,  ;
                              jb_no) <=  ;
                              sktab_n  ;
                              .AND.  ;
                              pub_jbjs(mday,  ;
                              jb_no) >=  ;
                              sktab_tabptr  ;
                              .AND.  ;
                              pub_jbjs(mday,  ;
                              jb_no) >=  ;
                              sktab_n
                              i_jbks =  ;
                               pub_jbks(mday,  ;
                               jb_no) -  ;
                               sktab_tabptr
                              i_jbjs =  ;
                               pub_jbjs(mday,  ;
                               jb_no) -  ;
                               sktab_n
                              i_jbtype =  ;
                               4
                    ENDCASE
                    kdelta9 = IIF(delta9 *  ;
                              pub_jbss(mday,  ;
                              jb_no) <  ;
                              delta9max,  ;
                              delta9 *  ;
                              pub_jbss(mday,  ;
                              jb_no),  ;
                              delta9max)
                    DO CASE
                         CASE i_jbks <  ;
                              kdelta9  ;
                              .AND.  ;
                              i_jbjs <  ;
                              kdelta9
                              ret = - ;
                               9999
                         CASE i_jbks =  ;
                              9999  ;
                              .AND.  ;
                              i_jbjs =  ;
                              9999
                         OTHERWISE
                              DO CASE
                                   CASE i_jbtype = 1
                                        IF i_jbks <= i_jbjs
                                             IF i_jbks < 120
                                                  t_sb = pub_jbjs(mday, jb_no)
                                                  idengji = .T.
                                             ENDIF
                                        ELSE
                                             IF i_jbjs < 120
                                                  t_xb = pub_jbks(mday, jb_no)
                                                  idengji = .T.
                                             ENDIF
                                        ENDIF
                                   CASE i_jbtype = 3 .AND. i_jbks < 120
                                        t_sb = pub_jbjs(mday, jb_no)
                                        idengji = .T.
                                   CASE i_jbtype = 4 .AND. i_jbjs < 120
                                        t_xb = pub_jbks(mday, jb_no)
                                        idengji = .T.
                              ENDCASE
                    ENDCASE
               ENDIF
          CASE pub_jblb(mday,  ;
               jb_no) > 92 .AND.  ;
               pub_jblb(mday,  ;
               jb_no) < 95
               IF pub_jbks(mday,  ;
                  jb_no) = 0  ;
                  .AND.  ;
                  pub_jbjs(mday,  ;
                  jb_no) = 0
                    IF pub_jbss(mday,  ;
                       jb_no) >  ;
                       0
                         mdt = pub_jbss(mday,  ;
                               jb_no) /  ;
                               (sktab_n -  ;
                               sktab_tabptr)
                         IF mdt >  ;
                            0.8   ;
                            .AND.  ;
                            mdt <  ;
                            1.2 
                              IF EMPTY(pub_jbbc(mday,  ;
                                 jb_no))
                                   trybc(sktab_tabptr, sktab_n)
                                   mbctabsel = pub_bctabsel
                              ELSE
                                   pub_bctabsel = getselbc(pub_jbbc(mday, jb_no))
                              ENDIF
                              ret = - ;
                               9999
                         ENDIF
                    ENDIF
               ELSE
                    i_jbks = 9999
                    i_jbjs = 9999
                    i_jbtype = 0
                    DO CASE
                         CASE pub_jbks(mday,  ;
                              jb_no) >=  ;
                              sktab_tabptr  ;
                              .AND.  ;
                              pub_jbks(mday,  ;
                              jb_no) <=  ;
                              sktab_n  ;
                              .AND.  ;
                              pub_jbjs(mday,  ;
                              jb_no) >=  ;
                              sktab_tabptr  ;
                              .AND.  ;
                              pub_jbjs(mday,  ;
                              jb_no) <=  ;
                              sktab_n
                              i_jbks =  ;
                               pub_jbks(mday,  ;
                               jb_no) -  ;
                               sktab_tabptr
                              i_jbjs =  ;
                               sktab_n -  ;
                               pub_jbjs(mday,  ;
                               jb_no)
                              i_jbtype =  ;
                               1
                         CASE pub_jbks(mday,  ;
                              jb_no) <=  ;
                              sktab_tabptr  ;
                              .AND.  ;
                              pub_jbks(mday,  ;
                              jb_no) <=  ;
                              sktab_n  ;
                              .AND.  ;
                              pub_jbjs(mday,  ;
                              jb_no) >=  ;
                              sktab_tabptr  ;
                              .AND.  ;
                              pub_jbjs(mday,  ;
                              jb_no) >=  ;
                              sktab_n
                              i_jbks =  ;
                               sktab_tabptr -  ;
                               pub_jbks(mday,  ;
                               jb_no)
                              i_jbjs =  ;
                               pub_jbjs(mday,  ;
                               jb_no) -  ;
                               sktab_n
                              i_jbtype =  ;
                               2
                         CASE pub_jbks(mday,  ;
                              jb_no) <=  ;
                              sktab_tabptr  ;
                              .AND.  ;
                              pub_jbks(mday,  ;
                              jb_no) <=  ;
                              sktab_n  ;
                              .AND.  ;
                              pub_jbjs(mday,  ;
                              jb_no) >=  ;
                              sktab_tabptr  ;
                              .AND.  ;
                              pub_jbjs(mday,  ;
                              jb_no) <=  ;
                              sktab_n
                              i_jbks =  ;
                               sktab_tabptr -  ;
                               pub_jbks(mday,  ;
                               jb_no)
                              i_jbjs =  ;
                               sktab_n -  ;
                               pub_jbjs(mday,  ;
                               jb_no)
                              i_jbtype =  ;
                               3
                         CASE pub_jbks(mday,  ;
                              jb_no) >=  ;
                              sktab_tabptr  ;
                              .AND.  ;
                              pub_jbks(mday,  ;
                              jb_no) <=  ;
                              sktab_n  ;
                              .AND.  ;
                              pub_jbjs(mday,  ;
                              jb_no) >=  ;
                              sktab_tabptr  ;
                              .AND.  ;
                              pub_jbjs(mday,  ;
                              jb_no) >=  ;
                              sktab_n
                              i_jbks =  ;
                               pub_jbks(mday,  ;
                               jb_no) -  ;
                               sktab_tabptr
                              i_jbjs =  ;
                               pub_jbjs(mday,  ;
                               jb_no) -  ;
                               sktab_n
                              i_jbtype =  ;
                               4
                    ENDCASE
                    kdelta9 = IIF(delta9 *  ;
                              pub_jbss(mday,  ;
                              jb_no) <  ;
                              delta9max,  ;
                              delta9 *  ;
                              pub_jbss(mday,  ;
                              jb_no),  ;
                              delta9max)
                    IF i_jbks <  ;
                       kdelta9  ;
                       .AND.  ;
                       i_jbjs <  ;
                       kdelta9
                         IF EMPTY(pub_jbbc(mday,  ;
                            jb_no))
                              trybc(sktab_tabptr,  ;
                               sktab_n)
                              mbctabsel =  ;
                               pub_bctabsel
                         ELSE
                              pub_bctabsel =  ;
                               getselbc(pub_jbbc(mday,  ;
                               jb_no))
                         ENDIF
                         ret = -9999
                    ENDIF
               ENDIF
          CASE pub_qjlb(mday,  ;
               jb_no) > 0 .AND.  ;
               pub_qjlb(mday,  ;
               jb_no) < 31
               IF pub_qjss(mday,  ;
                  jb_no) +  ;
                  sktab(n) -  ;
                  sktab_tabptr <  ;
                  sjcq * 1.2 
                    IF pub_qjks(mday,  ;
                       jb_no) = 0  ;
                       .AND.  ;
                       pub_qjjs(mday,  ;
                       jb_no) =  ;
                       0
                         IF  .NOT.  ;
                             EMPTY(pub_qjbc(mday,  ;
                             jb_no))
                              IF ABS(pub_qjbcks(mday,  ;
                                 jb_no) -  ;
                                 sktab_tabptr) <  ;
                                 ABS(pub_qjbcjs(mday,  ;
                                 jb_no) -  ;
                                 sktab_n)
                                   t_sb = sktab_tabptr
                                   t_xb = pub_qjbcjs(mday, jb_no)
                              ELSE
                                   t_sb = pub_qjbcks(mday, jb_no)
                                   t_xb = sktab_n
                              ENDIF
                              idengji =  ;
                               .T.
                         ELSE
                              IF sktab_n -  ;
                                 sktab_tabptr -  ;
                                 pub_qjss(mday,  ;
                                 jb_no) <  ;
                                 sjcq
                                   IF ABS(sktab_tabptr - 480) > ABS(sktab_n - 1020)
                                        t_sb = sktab_tabptr
                                        t_xb = sktab_n + pub_qjss(mday, jb_no)
                                   ELSE
                                        t_sb = sktab_tabptr - pub_qjss(mday, jb_no)
                                        t_xb = sktab_n
                                   ENDIF
                                   idengji = .T.
                              ENDIF
                         ENDIF
                    ELSE
                         kdelta9 =  ;
                          IIF(delta9 *  ;
                          pub_qjss(mday,  ;
                          jb_no) <  ;
                          delta9max,  ;
                          delta9 *  ;
                          pub_qjss(mday,  ;
                          jb_no),  ;
                          delta9max)
                         DO CASE
                              CASE  ;
                               pub_qjks(mday,  ;
                               jb_no) <=  ;
                               sktab_tabptr  ;
                               .AND.  ;
                               pub_qjjs(mday,  ;
                               jb_no) <=  ;
                               sktab_tabptr
                                   IF sktab_tabptr - pub_qjjs(mday, jb_no) < kdelta9 .AND. sktab_n - pub_qjks(mday, jb_no) < sjcq
                                        t_sb = pub_qjks(mday, jb_no)
                                        idengji = .T.
                                   ENDIF
                              CASE  ;
                               pub_qjks(mday,  ;
                               jb_no) >=  ;
                               sktab_n  ;
                               .AND.  ;
                               pub_qjjs(mday,  ;
                               jb_no) >=  ;
                               sktab_n
                                   IF pub_qjks(mday, jb_no) - sktab_n < kdelta9 .AND. pub_qjjs(mday, jb_no) - sktab_tabptr < sjcq
                                        t_xb = pub_qjjs(mday, jb_no)
                                        idengji = .T.
                                   ENDIF
                              CASE  ;
                               pub_qjks(mday,  ;
                               jb_no) <=  ;
                               sktab_tabptr  ;
                               .AND.  ;
                               pub_qjjs(mday,  ;
                               jb_no) >=  ;
                               sktab_tabptr  ;
                               .AND.  ;
                               pub_qjjs(mday,  ;
                               jb_no) <=  ;
                               sktab_n  ;
                               .AND.  ;
                               sktab_n -  ;
                               pub_qjks(mday,  ;
                               jb_no) <  ;
                               sjcq
                                   t_sb = pub_qjks(mday, jb_no)
                                   idengji = .T.
                              CASE  ;
                               pub_qjks(mday,  ;
                               jb_no) >=  ;
                               sktab_tabptr  ;
                               .AND.  ;
                               pub_qjks(mday,  ;
                               jb_no) <=  ;
                               sktab_n  ;
                               .AND.  ;
                               pub_qjjs(mday,  ;
                               jb_no) >=  ;
                               sktab_n  ;
                               .AND.  ;
                               pub_qjjs(mday,  ;
                               jb_no) -  ;
                               sktab_tabptr <  ;
                               sjcq
                                   t_xb = pub_qjjs(mday, jb_no)
                                   idengji = .T.
                         ENDCASE
                    ENDIF
               ENDIF
          CASE sktab_n > 1440  ;
               .AND. mday = 1  ;
               .AND.  ;
               pub_jblb(mday + 1,  ;
               1) > 92 .AND.  ;
               pub_jblb(mday + 1,  ;
               1) < 95
               IF pub_jbks(mday +  ;
                  1, 1) = 0
                    IF pub_jbss(mday +  ;
                       1, 1) > 0
                         t_xb = sktab_n -  ;
                                pub_jbss(mday +  ;
                                1,  ;
                                1)
                         idengji =  ;
                          .T.
                    ENDIF
               ELSE
                    IF sktab_n >  ;
                       1440 +  ;
                       pub_jbks(mday +  ;
                       1, 1)  ;
                       .AND.  ;
                       pub_jbss(mday +  ;
                       1, 1) > 0
                         IF (pub_jbjs(mday +  ;
                            1, 1) -  ;
                            pub_jbks(mday +  ;
                            1,  ;
                            1)) <>  ;
                            0  ;
                            .AND.  ;
                            (sktab_n -  ;
                            1440 -  ;
                            pub_jbks(mday +  ;
                            1,  ;
                            1)) /  ;
                            (pub_jbjs(mday +  ;
                            1, 1) -  ;
                            pub_jbks(mday +  ;
                            1,  ;
                            1)) >  ;
                            0.5 
                              t_xb =  ;
                               sktab_n -  ;
                               pub_jbss(mday +  ;
                               1,  ;
                               1)
                              idengji =  ;
                               .T.
                         ENDIF
                    ENDIF
               ENDIF
     ENDCASE
     IF ret = -9999
          pub_jbqj_no = jb_no
          mbctabsel = pub_bctabsel
          mentry = .T.
          EXIT
     ELSE
          mdelta1 = trybc(t_sb,  ;
                    t_xb)
          IF mdelta > mdelta1
               pub_jbqj_no = jb_no
               mdelta = mdelta1
               mbctabsel = pub_bctabsel
               mentry = .T.
          ENDIF
     ENDIF
ENDFOR
IF  .NOT. mentry
     mdelta = trybc(t_sb, t_xb)
     mbctabsel = pub_bctabsel
ENDIF
IF mbctabsel > 0
     IF bctablb(mbctabsel) <> '3'  ;
        .AND. sktab(tabptr) -  ;
        1440 > 0 .AND.  ;
        sktab(tabptr) - 1440 <  ;
        delta0 .AND. ret <> - ;
        9999
          ret = 9999
     ELSE
          pub_bctabsel = mbctabsel
          bctabsel = pub_bctabsel
     ENDIF
ENDIF
IF ret <> -9999
     ret = mdelta
ENDIF
RETURN ret
ENDFUNC
**
FUNCTION TryBc
PARAMETER t_sb, t_xb
DO modisk_1440 WITH t_sb, t_xb
t_sb = modisk_1440_sb
t_xb = modisk_1440_xb
pub_bctabsel = 0
pub_delta1 = 9999
pub_delta2 = 9999
pub_flag1 = 0
pub_flag2 = 0
FOR x = 1 TO bctabcnt
     i_sb = bctabsb(x)
     i_xb = bctabxb(x)
     DO CASE
          CASE t_sb >= i_sb .AND.  ;
               t_sb <= i_xb .AND.  ;
               t_xb >= i_sb .AND.  ;
               t_xb <= i_xb .AND.  ;
               ((t_xb <= 1440  ;
               .AND. i_xb <=  ;
               1440) .OR. (t_xb >  ;
               1440 .AND. i_xb >  ;
               1440))
               mx = (t_sb - i_sb) *  ;
                    wtsb2
               my = (i_xb - t_xb) *  ;
                    wtxb2
               mf1 = wtsb2
               mf2 = wtxb2
               imode = 0
          CASE t_sb <= i_sb .AND.  ;
               t_sb <= i_xb .AND.  ;
               t_xb >= i_sb .AND.  ;
               t_xb >= i_xb .AND.  ;
               ((t_xb <= 1440  ;
               .AND. i_xb <=  ;
               1440) .OR. (t_xb >  ;
               1440 .AND. i_xb >  ;
               1440))
               mx = (i_sb - t_sb) *  ;
                    wtsb1
               my = (t_xb - i_xb) *  ;
                    wtxb1
               mf1 = wtsb1
               mf2 = wtxb1
               imode = 1
          CASE t_sb >= i_sb .AND.  ;
               t_sb <= i_xb .AND.  ;
               t_xb >= i_sb .AND.  ;
               t_xb >= i_xb .AND.  ;
               ((t_xb <= 1440  ;
               .AND. i_xb <=  ;
               1440) .OR. (t_xb >  ;
               1440 .AND. i_xb >  ;
               1440))
               mx = (t_sb - i_sb) *  ;
                    wtsb2
               my = (t_xb - i_xb) *  ;
                    wtxb1
               mf1 = wtsb2
               mf2 = wtxb1
               imode = 0
          CASE t_sb <= i_sb .AND.  ;
               t_sb <= i_xb .AND.  ;
               t_xb >= i_sb .AND.  ;
               t_xb <= i_xb .AND.  ;
               ((t_xb <= 1440  ;
               .AND. i_xb <=  ;
               1440) .OR. (t_xb >  ;
               1440 .AND. i_xb >  ;
               1440))
               mx = (i_sb - t_sb) *  ;
                    wtsb1
               my = (i_xb - t_xb) *  ;
                    wtxb2
               mf1 = wtsb1 +  ;
                     wtxb2
               mf2 = wtsb1 +  ;
                     wtxb2
               imode = 0
          CASE t_sb >= i_sb .AND.  ;
               t_sb <= i_xb .AND.  ;
               t_xb >= i_sb .AND.  ;
               t_xb <= i_xb .AND.  ;
               t_xb <= 1440 .AND.  ;
               i_xb > 1440
               mx = (t_sb - i_sb) *  ;
                    wtsb2
               my = (i_xb - t_xb) *  ;
                    wtxb2
               mf1 = wtsb2
               mf2 = wtxb2
               imode = 0
          CASE t_sb < delta0  ;
               .AND. 1440 + t_sb >=  ;
               i_sb .AND. 1440 +  ;
               t_sb <= i_xb .AND.  ;
               1440 + t_xb >=  ;
               i_sb .AND. 1440 +  ;
               t_xb <= i_xb .AND.  ;
               t_xb <= 1440 .AND.  ;
               i_xb > 1440
               mx = (1440 + t_sb -  ;
                    i_sb) *  ;
                    wtsb2
               my = (1440 + i_xb -  ;
                    t_xb) *  ;
                    wtxb2
               mf1 = wtsb2
               mf2 = wtxb2
               imode = 0
          CASE t_sb <= i_sb .AND.  ;
               t_sb <= i_xb .AND.  ;
               t_xb >= i_sb .AND.  ;
               t_xb <= i_xb .AND.  ;
               t_xb <= 1440 .AND.  ;
               i_xb > 1440
               mx = (i_sb - t_sb) *  ;
                    wtsb1
               my = (i_xb - t_xb) *  ;
                    wtxb2
               mf1 = wtsb1
               mf2 = wtxb2
               imode = 0
          CASE t_sb < delta0  ;
               .AND. 1440 + t_sb >=  ;
               i_sb .AND. 1440 +  ;
               t_sb <= i_xb .AND.  ;
               1440 + t_xb >=  ;
               i_sb .AND. 1440 +  ;
               t_xb >= i_xb .AND.  ;
               t_xb <= 1440 .AND.  ;
               i_xb > 1440
               mx = (1440 + t_sb -  ;
                    i_sb) *  ;
                    wtsb2
               my = (1440 + t_xb -  ;
                    i_xb) *  ;
                    wtxb1
               mf1 = wtsb2
               mf2 = wtxb1
               imode = 0
          CASE t_sb <= i_sb .AND.  ;
               t_sb <= i_xb .AND.  ;
               t_xb >= i_sb .AND.  ;
               t_xb >= i_xb .AND.  ;
               t_xb > 1440 .AND.  ;
               i_xb <= 1440
               mx = (i_sb - t_sb) *  ;
                    wtsb1
               my = (t_xb - i_xb) *  ;
                    wtxb1
               mf1 = wtsb1
               mf2 = wtxb1
               imode = 2
          CASE t_sb <= 1440 +  ;
               i_sb .AND. t_sb <=  ;
               1440 + i_xb .AND.  ;
               t_xb >= 1440 +  ;
               i_sb .AND. t_xb >=  ;
               1440 + i_xb .AND.  ;
               t_xb > 1440 .AND.  ;
               i_xb <= 1440
               mx = (1440 + i_sb -  ;
                    t_sb) *  ;
                    wtsb1
               my = (t_xb - i_xb -  ;
                    1440) *  ;
                    wtxb1
               mf1 = wtsb1
               mf2 = wtxb1
               imode = 3
          CASE t_sb >= i_sb .AND.  ;
               t_sb <= i_xb .AND.  ;
               t_xb >= i_sb .AND.  ;
               t_xb >= i_xb .AND.  ;
               t_xb > 1440 .AND.  ;
               i_xb <= 1440
               mx = (t_sb - i_sb) *  ;
                    wtsb2
               my = (t_xb - i_xb) *  ;
                    wtxb1
               mf1 = wtsb2
               mf2 = wtxb1
               imode = 0
          CASE t_sb <= 1440 +  ;
               i_sb .AND. t_sb <=  ;
               1440 + i_xb .AND.  ;
               t_xb >= 1440 +  ;
               i_sb .AND. t_xb <=  ;
               1440 + i_xb .AND.  ;
               t_xb > 1440 .AND.  ;
               i_xb <= 1440
               mx = (1440 + i_sb -  ;
                    t_sb) *  ;
                    wtsb1
               my = (1440 + i_xb -  ;
                    t_xb) *  ;
                    wtxb2
               mf1 = wtsb1
               mf2 = wtxb2
               imode = 0
          OTHERWISE
               mx = 9999
               my = 9999
               mf1 = 0
               mf2 = 0
               imode = 0
     ENDCASE
     IF mx + my < pub_delta1 +  ;
        pub_delta2
          pub_delta1 = mx
          pub_delta2 = my
          pub_flag1 = mf1
          pub_flag2 = mf2
          pub_bctabsel = x
     ENDIF
ENDFOR
IF pub_delta1 < pub_flag1 *  ;
   delta4 .AND. pub_delta2 <  ;
   pub_flag2 * delta4
     iret = pub_delta1 +  ;
            pub_delta2
ELSE
     iret = 9999
ENDIF
RETURN iret
ENDFUNC
**
PROCEDURE SetMark
k = IIF(itwo > 0, itwo,  ;
    IIF(ithree > 0, ithree, 0))
i = 0
FOR j = 1 TO sktabcnt
     IF bztab(j) = 1
          i = i + 1
     ENDIF
     IF k > 0 .AND. j >= k .AND.  ;
        MOD(i, 2) = 0
          EXIT
     ENDIF
ENDFOR
IF j > sktabcnt
     j = j - 1
ENDIF
IF j > 0 .AND. bztab(j) <> 1  ;
   .AND. j >= k .AND. k > 0 .AND.  ;
   sktabio(j) <> 'O'
     j = j - 1
ENDIF
mdays = 0
SELECT ardata_
GOTO recptr
FOR i = 1 TO j
     REPLACE mark WITH  ;
             IIF(bztab(i) = 9, 3,  ;
             bztab(i))
     IF bztab(i) < 3 .AND.  ;
        EMPTY(donedate)
          REPLACE donedate WITH  ;
                  DTOC(mdate)
     ENDIF
     mmdate = CTOD(riqi)
     mmrec = RECNO()
     mmmark = mark
     mdays = CTOD(riqi) - mdate
     SKIP
ENDFOR
IF  .NOT. EOF()
     SKIP
ENDIF
IF  .NOT. EOF()
     IF j > 0 .AND. mmdate >  ;
        mdate .AND. mmdate <  ;
        CTOD(riqi) .AND. mmmark =  ;
        3 .AND. sktabio(j) <>  ;
        'O'
          GOTO mmrec
     ELSE
          SKIP -1
     ENDIF
ELSE
     GOTO BOTTOM
     IF  .NOT. EOF() .AND. mzgbh =  ;
         zgbh .AND. mdate + mdays =  ;
         CTOD(riqi) .AND. mark >  ;
         0
          SKIP
     ENDIF
ENDIF
IF  .NOT. EOF()
     recptr = RECNO()
     IF mzgbh <> zgbh
          mdate = CTOD(riqi) - 1
     ELSE
          mdate = IIF(CTOD(riqi) >  ;
                  mdate + 1 .AND.  ;
                  shijian <  ;
                  delta0,  ;
                  CTOD(riqi) - 1,  ;
                  CTOD(riqi))
     ENDIF
     mzgbh = zgbh
ENDIF
RETURN
ENDPROC
**
PROCEDURE SaveCl1
DO modibc
SELECT clfx
INDEX ON zgbh + riqi + bc TO CLFX  ;
      FOR LEN(TRIM(bc)) = 3 .OR.  ;
      EMPTY(bc)
GOTO TOP
DO WHILE  .NOT. EOF()
     obj_form4.txt_msg1.value = zgbh +  ;
                                ' ' +  ;
                                riqi
     IF EMPTY(bc)
          SKIP
          LOOP
     ENDIF
     mzgbh = zgbh
     mdate = CTOD(riqi)
     mbc = bc
     cnt = 0
     mcqss = 0
     mcqss1 = 0
     rec = RECNO()
     SELECT time
     SEEK LEFT(mbc, 2) 
     v_scq = 0
     DO WHILE  .NOT. EOF() .AND.  ;
        LEFT(mbc, 2)=LEFT(bc, 2)
          IF cnt >= bctabbou
               WAIT WINDOW  ;
                    "错误: 分段班次太多!"
               RETURN
          ENDIF
          cnt = cnt + 1
          clbc(cnt) = bc
          dlb(cnt) = lb
          dsb(cnt) = sbsj
          dxb(cnt) = xbsj
          dxx(cnt) = zjxx
          dss(cnt) = ss
          v_scq = v_scq + (xbsj -  ;
                  sbsj)
          dmark(cnt) = 0
          SKIP
     ENDDO
     SELECT clfx
     IF LEN(TRIM(mbc)) = 3
          SKIP
          i = 2
          DO WHILE  .NOT. EOF()  ;
             .AND. mzgbh=zgbh  ;
             .AND. mdate= ;
             CTOD(riqi) .AND. i<= ;
             cnt
               IF LEFT(mbc, 2) <>  ;
                  LEFT(bc, 2)
                    REPLACE bc  ;
                            WITH  ;
                            clbc(i),  ;
                            lb  ;
                            WITH  ;
                            dlb(i)
                    REPLACE sbsj  ;
                            WITH  ;
                            dsb(i),  ;
                            xbsj  ;
                            WITH  ;
                            dxb(i),  ;
                            zdcl  ;
                            WITH  ;
                            98
                    REPLACE cdss  ;
                            WITH  ;
                            0,  ;
                            ztss  ;
                            WITH  ;
                            0
                    mcd = sbsk -  ;
                          sbsj
                    IF mcd >  ;
                       sjcd1
                         REPLACE cdss  ;
                                 WITH  ;
                                 IIF(sjcd2 >  ;
                                 1,  ;
                                 sjcd2 *  ;
                                 (INT(mcd /  ;
                                 sjcd2) +  ;
                                 1),  ;
                                 mcd)
                         REPLACE zdcl  ;
                                 WITH  ;
                                 80
                    ENDIF
                    mzt = xbsj -  ;
                          xbsk
                    IF mzt >  ;
                       sjzt1
                         REPLACE ztss  ;
                                 WITH  ;
                                 IIF(sjzt2 >  ;
                                 1,  ;
                                 sjzt2 *  ;
                                 (INT(mzt /  ;
                                 sjzt2) +  ;
                                 1),  ;
                                 mzt)
                         REPLACE zdcl  ;
                                 WITH  ;
                                 IIF(zdcl =  ;
                                 80,  ;
                                 82,  ;
                                 81)
                    ENDIF
                    IF cdss >=  ;
                       sjcd3 .OR.  ;
                       ztss >=  ;
                       sjzt3
                         REPLACE zdcl  ;
                                 WITH  ;
                                 85
                         REPLACE kgss  ;
                                 WITH  ;
                                 dss(i)
                         REPLACE cdss  ;
                                 WITH  ;
                                 0,  ;
                                 ztss  ;
                                 WITH  ;
                                 0
                    ELSE
                         REPLACE cqss  ;
                                 WITH  ;
                                 dss(i)
                    ENDIF
               ENDIF
               SKIP
               i = i + 1
          ENDDO
     ENDIF
     GOTO rec
     DO WHILE  .NOT. EOF() .AND.  ;
        mzgbh=zgbh .AND. mdate= ;
        CTOD(riqi)
          IF  .NOT. EMPTY(bc)
               mcqss = mcqss +  ;
                       IIF(ss > 0,  ;
                       ss, xbsk -  ;
                       sbsk)
               DO setdmark
          ENDIF
          SKIP
     ENDDO
     IF mcqss < v_scq
          SELECT clfx
          FOR i = 1 TO cnt
               IF dmark(i) = 0
                    APPEND BLANK
                    REPLACE zgbh  ;
                            WITH  ;
                            mzgbh,  ;
                            riqi  ;
                            WITH  ;
                            DTOC(mdate)
                    REPLACE bc  ;
                            WITH  ;
                            clbc(i),  ;
                            lb  ;
                            WITH  ;
                            dlb(i),  ;
                            zdcl  ;
                            WITH  ;
                            85
                    REPLACE kgss  ;
                            WITH  ;
                            dss(i)
                    REPLACE sbsj  ;
                            WITH  ;
                            dsb(i),  ;
                            xbsj  ;
                            WITH  ;
                            dxb(i)
               ENDIF
          ENDFOR
          GOTO rec
          DO WHILE  .NOT. EOF()  ;
             .AND. mzgbh=zgbh  ;
             .AND. mdate= ;
             CTOD(riqi)
               SKIP
          ENDDO
     ELSE
          SELECT clfx
          FOR i = 1 TO cnt
               IF dmark(i) = 0
                    APPEND BLANK
                    REPLACE zgbh  ;
                            WITH  ;
                            mzgbh,  ;
                            riqi  ;
                            WITH  ;
                            DTOC(mdate)
                    REPLACE bc  ;
                            WITH  ;
                            clbc(i),  ;
                            lb  ;
                            WITH  ;
                            dlb(i),  ;
                            zdcl  ;
                            WITH  ;
                            98
                    REPLACE cqss  ;
                            WITH  ;
                            dss(i)
                    REPLACE sbsj  ;
                            WITH  ;
                            dsb(i),  ;
                            xbsj  ;
                            WITH  ;
                            dxb(i)
               ENDIF
          ENDFOR
          GOTO rec
          DO WHILE  .NOT. EOF()  ;
             .AND. mzgbh=zgbh  ;
             .AND. mdate= ;
             CTOD(riqi)
               SKIP
          ENDDO
     ENDIF
ENDDO
RETURN
ENDPROC
**
PROCEDURE SaveCl2
SELECT clfx
INDEX ON zgbh + riqi +  ;
      STR(IIF(sbsk > 0, sbsk,  ;
      xbsk), 4) TO CLFX
SELECT ardata_
SET RELATION TO zgbh INTO zg
GOTO TOP
mzg = ''
DO WHILE  .NOT. EOF()
     IF CTOD(riqi) <  ;
        pub_kaishiriqi
          SKIP
          LOOP
     ENDIF
     obj_form4.txt_msg1.value = zgbh +  ;
                                ' ' +  ;
                                riqi
     DO CASE
          CASE mark = 3
               mzgbh = zgbh
               mdate = CTOD(riqi)
               SELECT clfx
               SEEK mzgbh +  ;
                    DTOC(mdate) 
               IF FOUND() .AND.   ;
                  .NOT. EMPTY(bc)  ;
                  .AND. zdcl <>  ;
                  98 .AND. rgcl =  ;
                  0 .AND. (sbsk =  ;
                  0 .OR. xbsk =  ;
                  0)
                    sw = .F.
                    DO WHILE   ;
                       .NOT.  ;
                       EOF()  ;
                       .AND. zgbh= ;
                       mzgbh  ;
                       .AND. riqi= ;
                       DTOC(mdate)
                         IF zdcl =  ;
                            85
                              DO CASE
                                   CASE sbsk = 0
                                        REPLACE sbsk WITH ardata_.shijian
                                        REPLACE zdcl WITH 73
                                   CASE xbsk = 0
                                        REPLACE xbsk WITH ardata_.shijian
                                        REPLACE zdcl WITH 73
                              ENDCASE
                              sw =  ;
                               .T.
                         ENDIF
                         SKIP
                    ENDDO
                    IF  .NOT. sw
                         SKIP -1
                         SELECT ardata_
                         mtime1 =  ;
                          shijian
                         DO WHILE   ;
                            .NOT.  ;
                            EOF()  ;
                            .AND.  ;
                            zgbh= ;
                            mzgbh  ;
                            .AND.  ;
                            riqi= ;
                            DTOC(mdate)
                              SKIP
                         ENDDO
                         SKIP -1
                         mtime2 =  ;
                          shijian
                         SELECT clfx
                         IF ardata_.shijian -  ;
                            xbsj >  ;
                            0
                              REPLACE  ;
                               xbsk  ;
                               WITH  ;
                               ardata_.shijian
                              mzt =  ;
                               xbsj -  ;
                               xbsk
                              IF mzt >  ;
                                 sjzt1
                                   REPLACE ztss WITH IIF(sjzt2 > 1, sjzt2 * (INT(mzt / sjzt2) + 1), mzt)
                                   REPLACE zdcl WITH IIF(zdcl = 80, 82, 81)
                              ELSE
                                   v_1 = zdcl
                                   IF v_1 = 82
                                        v_1 = 80
                                   ELSE
                                        IF v_1 = 81
                                             v_1 = 98
                                        ENDIF
                                   ENDIF
                                   REPLACE ztss WITH 0, zdcl WITH v_1
                              ENDIF
                         ELSE
                              APPEND  ;
                               BLANK
                              REPLACE  ;
                               zgbh  ;
                               WITH  ;
                               ardata_.zgbh,  ;
                               riqi  ;
                               WITH  ;
                               ardata_.riqi
                              REPLACE  ;
                               zdcl  ;
                               WITH  ;
                               72,  ;
                               xbsk  ;
                               WITH  ;
                               ardata_.shijian,  ;
                               bc  ;
                               WITH  ;
                               ""
                              IF ardata_.shijian <  ;
                                 delta0
                                   REPLACE riqi WITH DTOC(CTOD(ardata_.riqi) - 1)
                              ENDIF
                         ENDIF
                    ENDIF
               ELSE
                    IF mzg <>  ;
                       zgbh
                         mzg = zgbh
                         = getbctab()
                         SELECT clfx
                    ENDIF
                    APPEND BLANK
                    REPLACE zgbh  ;
                            WITH  ;
                            ardata_.zgbh,  ;
                            riqi  ;
                            WITH  ;
                            ardata_.riqi,  ;
                            bc  ;
                            WITH  ;
                            ""
                    b = ''
                    IF ardata_.io =  ;
                       'O'
                         REPLACE zdcl  ;
                                 WITH  ;
                                 72,  ;
                                 xbsk  ;
                                 WITH  ;
                                 ardata_.shijian
                         IF ardata_.shijian <  ;
                            delta0
                              REPLACE  ;
                               riqi  ;
                               WITH  ;
                               DTOC(CTOD(ardata_.riqi) -  ;
                               1)
                         ENDIF
                    ELSE
                         REPLACE zdcl  ;
                                 WITH  ;
                                 71,  ;
                                 sbsk  ;
                                 WITH  ;
                                 ardata_.shijian
                    ENDIF
               ENDIF
     ENDCASE
     SELECT ardata_
     SKIP
ENDDO
SELECT clfx
SET RELATION TO zgbh INTO zg
GOTO TOP
mzgbh = zgbh
mdate = CTOD(riqi)
mzdcl = -1
DO WHILE  .NOT. EOF()
     obj_form4.txt_msg1.value = zgbh +  ;
                                ' ' +  ;
                                riqi
     IF mzgbh = zgbh .AND. mzdcl =  ;
        71 .AND. zdcl = 72 .AND.  ;
        (mdate = CTOD(riqi) .OR.  ;
        mdate + 1 = CTOD(riqi))  ;
        .AND. EMPTY(bc)
          t2 = xbsk
          SKIP -1
          REPLACE xbsk WITH t2,  ;
                  zdcl WITH 73
          SKIP
          DELETE
          SKIP
          IF EOF()
               EXIT
          ENDIF
     ENDIF
     IF zdcl = 71 .AND. EMPTY(bc)
          mzdcl = 71
     ELSE
          mzdcl = -1
     ENDIF
     mzgbh = zgbh
     mdate = CTOD(riqi)
     IF (zg.mk = '1' .OR. zg.mk =  ;
        '4' .OR. zg.mk = '5' .OR.  ;
        zg.mk = '7') .AND. (zdcl <  ;
        71 .OR. zdcl > 73) .AND.  ;
        zdcl <> 0
          REPLACE cdss WITH 0,  ;
                  ztss WITH 0,  ;
                  kgss WITH 0,  ;
                  jbss WITH 0
          REPLACE cqss WITH xbsk -  ;
                  sbsk, zdcl WITH  ;
                  98
     ENDIF
     SKIP
ENDDO
DIMENSION azgbh(3), mdate(3),  ;
          msk(3), mtime(3)
FOR i = 1 TO 3
     azgbh(i) = ""
     mdate(i) = CTOD("")
     msk(i) = 0
     mtime(i) = 0
ENDFOR
SELECT clfx
SCAN
     obj_form4.txt_msg1.value = zgbh +  ;
                                ' ' +  ;
                                riqi
     azgbh(1) = azgbh(2)
     mdate(1) = mdate(2)
     msk(1) = msk(2)
     mtime(1) = mtime(2)
     azgbh(2) = azgbh(3)
     mdate(2) = mdate(3)
     msk(2) = msk(3)
     mtime(2) = mtime(3)
     azgbh(3) = zgbh
     mdate(3) = CTOD(riqi)
     mtime(3) = 1440
     DO CASE
          CASE sbsk > 0 .AND.  ;
               xbsk > 0
               msk(3) = 2
          CASE sbsk > 0 .AND.  ;
               xbsk = 0
               msk(3) = 1
               mtime(3) = sbsk
          CASE sbsk = 0 .AND.  ;
               xbsk > 0
               msk(3) = 1
               mtime(3) = xbsk
          OTHERWISE
               msk(3) = 0
     ENDCASE
     DO CASE
          CASE azgbh(1) =  ;
               azgbh(2) .AND.  ;
               azgbh(2) =  ;
               azgbh(3) .AND.  ;
               mdate(2) =  ;
               mdate(3) .AND.  ;
               mdate(2) >  ;
               mdate(1) + 1 .AND.  ;
               msk(2) = 1 .AND.  ;
               msk(3) = 2 .AND.  ;
               mtime(2) < 150
               SKIP -1
               mdate(2) =  ;
                    mdate(2) - 1
               REPLACE riqi WITH  ;
                       DTOC(mdate(2))
               SKIP
          CASE azgbh(1) =  ;
               azgbh(2) .AND.  ;
               azgbh(2) =  ;
               azgbh(3) .AND.  ;
               mdate(2) =  ;
               mdate(3) .AND.  ;
               mdate(2) =  ;
               mdate(1) + 1 .AND.  ;
               msk(1) = 1 .AND.  ;
               msk(2) = 1 .AND.  ;
               msk(3) = 2 .AND.  ;
               mtime(2) < 150
               SKIP -2
               IF sbsk = 0
                    REPLACE sbsk  ;
                            WITH  ;
                            mtime(2)
               ELSE
                    REPLACE xbsk  ;
                            WITH  ;
                            mtime(2)
               ENDIF
               SKIP
               DELETE
               SKIP
     ENDCASE
     IF zdcl <> 98 .AND. zdcl <>  ;
        80
          LOOP
     ENDIF
ENDSCAN
SELECT clfx
mzgbh = ""
mdate = CTOD("")
mzdcl = 0
mbc = ""
SCAN
     obj_form4.txt_msg1.value = zgbh +  ;
                                ' ' +  ;
                                riqi
     DO CASE
          CASE zdcl >= 92 .AND.  ;
               zdcl <= 94
          CASE zdcl >= 71 .AND.  ;
               zdcl <= 73 .AND.  ;
               ((sbsk > 0 .AND.  ;
               xbsk = 0) .OR.  ;
               (sbsk = 0 .AND.  ;
               xbsk > 0))
          CASE mzdcl = 85
               IF zdcl = 98 .AND.  ;
                  zgbh = mzgbh  ;
                  .AND.  ;
                  CTOD(riqi) =  ;
                  mdate
                    SKIP -1
                    REPLACE zdcl  ;
                            WITH  ;
                            0,  ;
                            kgss  ;
                            WITH  ;
                            0,  ;
                            kgts  ;
                            WITH  ;
                            0
                    SKIP
               ENDIF
          CASE zdcl = 85
               IF mzdcl = 98  ;
                  .AND. zgbh =  ;
                  mzgbh .AND.  ;
                  CTOD(riqi) =  ;
                  mdate
                    REPLACE zdcl  ;
                            WITH  ;
                            0,  ;
                            kgss  ;
                            WITH  ;
                            0,  ;
                            kgts  ;
                            WITH  ;
                            0
               ENDIF
     ENDCASE
     mzgbh = zgbh
     mdate = CTOD(riqi)
     mzdcl = zdcl
     mbc = bc
ENDSCAN
SELECT clfx
SET RELATION TO lb INTO bctype
SCAN
     obj_form4.txt_msg1.value = zgbh +  ;
                                ' ' +  ;
                                riqi
     IF  .NOT. EMPTY(lb) .AND.  ;
         bctype.day2th = "1"
          REPLACE riqi WITH  ;
                  DTOC(CTOD(riqi) +  ;
                  1)
     ENDIF
ENDSCAN
RETURN
ENDPROC
**
PROCEDURE SetDMark
FOR i = 1 TO cnt
     IF bc = clbc(i)
          dmark(i) = 1
          EXIT
     ENDIF
ENDFOR
RETURN
ENDPROC
**
PROCEDURE ModiBC
DIMENSION sc_rec(3), sc_bc(3),  ;
          sc_sb(3), sc_xb(3),  ;
          sc_bc1(3), sc_bc2(3)
SELECT clfx
INDEX ON zgbh + riqi TO CLFX
GOTO TOP
DO WHILE  .NOT. EOF()
     obj_form4.txt_msg1.value = zgbh +  ;
                                ' ' +  ;
                                riqi
     mzgbh = zgbh
     mdate = CTOD(riqi)
     mbc = bc
     cnt = 0
     sw = .F.
     sw1 = .F.
     rec = RECNO()
     DO WHILE  .NOT. EOF() .AND.  ;
        mzgbh=zgbh .AND. mdate= ;
        CTOD(riqi) .AND. cnt<3
          cnt = cnt + 1
          IF LEFT(mbc, 2) <>  ;
             LEFT(bc, 2)
               sw = .T.
          ENDIF
          IF LEN(ALLTRIM(bc)) = 3
               sw1 = .T.
          ENDIF
          sc_rec(cnt) = RECNO()
          sc_bc(cnt) = bc
          sc_sb(cnt) = sbsk
          sc_xb(cnt) = xbsk
          SKIP
     ENDDO
     IF  .NOT. sw .OR.  .NOT. sw1
          LOOP
     ENDIF
     sc_dt1 = 999999
     FOR i = 1 TO cnt
          SELECT time
          SEEK LEFT(sc_bc(i), 2) 
          k = 0
          DO WHILE  .NOT. EOF()  ;
             .AND. LEFT(sc_bc(i),  ;
             2)=LEFT(bc, 2) .AND.  ;
             k<=bctabbou
               k = k + 1
               clbc(k) = bc
               dsb(k) = sbsj
               dxb(k) = xbsj
               SKIP
          ENDDO
          sc_dt2 = 0
          FOR j = 1 TO cnt
               IF LEFT(sc_bc(j),  ;
                  2) =  ;
                  LEFT(sc_bc(i),  ;
                  2) .OR. k < 1
                    sc_bc2(j) =  ;
                          ""
               ELSE
                    p = 1
                    dk_sb = IIF(sc_sb(j) >  ;
                            dsb(p),  ;
                            (sc_sb(j) -  ;
                            dsb(p)) *  ;
                            wtsb2,  ;
                            (sc_sb(j) -  ;
                            dsb(p)) *  ;
                            wtsb1)
                    dk_xb = IIF(sc_xb(j) >  ;
                            dxb(p),  ;
                            (sc_xb(j) -  ;
                            dxb(p)) *  ;
                            wtxb1,  ;
                            (sc_xb(j) -  ;
                            dxb(p)) *  ;
                            wtxb2)
                    dt = dk_sb +  ;
                         dk_xb
                    sc_bc2(j) =  ;
                          clbc(p)
                    FOR p = 2 TO  ;
                        k
                         dk_sb = IIF(sc_sb(j) >  ;
                                 dsb(p),  ;
                                 (sc_sb(j) -  ;
                                 dsb(p)) *  ;
                                 wtsb2,  ;
                                 (dsb(p) -  ;
                                 sc_sb(j)) *  ;
                                 wtsb1)
                         dk_xb = IIF(sc_xb(j) >  ;
                                 dxb(p),  ;
                                 (sc_xb(j) -  ;
                                 dxb(p)) *  ;
                                 wtxb1,  ;
                                 (dxb(p) -  ;
                                 sc_xb(j)) *  ;
                                 wtxb2)
                         IF dt >  ;
                            dk_sb +  ;
                            dk_xb
                              dt =  ;
                               dk_sb +  ;
                               dk_xb
                              sc_bc2(j) =  ;
                               clbc(p)
                         ENDIF
                    ENDFOR
                    sc_dt2 = sc_dt2 +  ;
                             dt
               ENDIF
          ENDFOR
          IF sc_dt1 > sc_dt2  ;
             .AND. sc_dt2 > 0
               sc_dt1 = sc_dt2
               FOR j = 1 TO cnt
                    sc_bc1(j) =  ;
                          sc_bc2(j)
               ENDFOR
          ENDIF
     ENDFOR
     IF sc_dt1 < 999999
          FOR i = 1 TO cnt
               IF  .NOT.  ;
                   EMPTY(sc_bc1(i))  ;
                   .AND.  ;
                   sc_bc1(i) <>  ;
                   sc_bc(i)
                    SELECT clfx
                    GOTO sc_rec(i)
                    SELECT time
                    SEEK sc_bc1(i) 
                    IF  .NOT.  ;
                        EOF()
                         m = IIF(xbsj <  ;
                             sbsj,  ;
                             1440 +  ;
                             xbsj,  ;
                             xbsj)
                         REPLACE clfx.bc  ;
                                 WITH  ;
                                 bc,  ;
                                 clfx.lb  ;
                                 WITH  ;
                                 lb,  ;
                                 clfx.sbsj  ;
                                 WITH  ;
                                 sbsj,  ;
                                 clfx.xbsj  ;
                                 WITH  ;
                                 m,  ;
                                 clfx.zdcl  ;
                                 WITH  ;
                                 98
                         mcd = clfx.sbsk -  ;
                               sbsj
                         IF mcd >  ;
                            sjcd1
                              REPLACE  ;
                               clfx.cdss  ;
                               WITH  ;
                               IIF(sjcd2 >  ;
                               1,  ;
                               sjcd2 *  ;
                               (INT(mcd /  ;
                               sjcd2) +  ;
                               1),  ;
                               mcd),  ;
                               clfx.zdcl  ;
                               WITH  ;
                               80
                         ENDIF
                         mzt = m -  ;
                               clfx.xbsk
                         IF mzt >  ;
                            sjzt1
                              REPLACE  ;
                               clfx.ztss  ;
                               WITH  ;
                               IIF(sjzt2 >  ;
                               1,  ;
                               sjzt2 *  ;
                               (INT(mzt /  ;
                               sjzt2) +  ;
                               1),  ;
                               mzt),  ;
                               clfx.zdcl  ;
                               WITH  ;
                               IIF(clfx.zdcl =  ;
                               80,  ;
                               82,  ;
                               81)
                         ENDIF
                         IF clfx.cdss >=  ;
                            sjcd3  ;
                            .OR.  ;
                            clfx.ztss >=  ;
                            sjzt3
                              REPLACE  ;
                               clfx.kgss  ;
                               WITH  ;
                               ss,  ;
                               clfx.zdcl  ;
                               WITH  ;
                               85
                              REPLACE  ;
                               clfx.cdss  ;
                               WITH  ;
                               0,  ;
                               clfx.ztss  ;
                               WITH  ;
                               0
                         ELSE
                              REPLACE  ;
                               clfx.cqss  ;
                               WITH  ;
                               ss
                         ENDIF
                    ENDIF
               ENDIF
          ENDFOR
          SELECT clfx
          SKIP
     ENDIF
     SELECT clfx
ENDDO
RETURN
ENDPROC
**
PROCEDURE PreProcess
IF pub_language
     obj_form4.txt_msg.value = "Be preprocessing the datas..."
ELSE
     obj_form4.txt_msg.value = "正在预处理刷卡数据..."
ENDIF
SELECT ardata_
INDEX ON zgbh + riqi +  ;
      STR(shijian, 4) TAG zrs_d  ;
      DESCENDING ADDITIVE
SET ORDER TO zrs_d
GOTO TOP
mz = zgbh
md = CTOD(riqi)
mt = shijian
SKIP
DO WHILE  .NOT. EOF()
     IF mz <> zgbh .OR. md <>  ;
        CTOD(riqi) .OR. ABS(mt -  ;
        shijian) > sjcfsj
          IF mz = zgbh .AND. md =  ;
             CTOD(riqi) + 1 .AND.  ;
             ABS(shijian - 1440 -  ;
             mt) <= sjcfsj
               sqlexe_run(00000002153,  ;
                         SYS(16),  ;
                         "DELETE FROM KQ_ARDATA WHERE ID=?ID",  ;
                         "")
               DELETE
          ELSE
               mz = zgbh
               md = CTOD(riqi)
               mt = shijian
          ENDIF
     ELSE
          sqlexe_run(00000002161,  ;
                    SYS(16),  ;
                    "DELETE FROM KQ_ARDATA WHERE ID=?ID",  ;
                    "")
          DELETE
     ENDIF
     SKIP
ENDDO
SET ORDER TO zrs_a
SELECT xjjl_d
SET FILTER TO kqlb = 75;
.OR. kqlb = 76;
.OR. kqlb = 78;
.OR. kqlb = 41;
.OR. (kqlb = 98;
.AND. kssj > 0;
.AND. jssj > 0);
.OR. (kqlb >= 93;
.AND. kqlb <= 94;
.AND. kssj > 0)
GOTO TOP
SCAN
     SELECT ardata_
     DO CASE
          CASE xjjl_d.kqlb = 98
               mflag = 0
               SET EXACT OFF
               SEEK xjjl_d.zgbh +  ;
                    xjjl_d.riqi 
               SET EXACT ON
               IF  .NOT. EOF()
                    mflag = chk_dupaddrecord()
               ENDIF
               IF mflag = 10 .OR.  ;
                  mflag = 11
                    APPEND BLANK
                    REPLACE zgbh  ;
                            WITH  ;
                            xjjl_d.zgbh,  ;
                            riqi  ;
                            WITH  ;
                            xjjl_d.riqi,  ;
                            shijian  ;
                            WITH  ;
                            xjjl_d.kssj,  ;
                            addedflag  ;
                            WITH  ;
                            1
                    REPLACE io  ;
                            WITH  ;
                            'I'
               ENDIF
               IF mflag = 1 .OR.  ;
                  mflag = 11
                    APPEND BLANK
                    REPLACE zgbh  ;
                            WITH  ;
                            xjjl_d.zgbh,  ;
                            riqi  ;
                            WITH  ;
                            IIF(xjjl_d.jssj <  ;
                            xjjl_d.kssj,  ;
                            DTOC(CTOD(xjjl_d.riqi) +  ;
                            1),  ;
                            xjjl_d.riqi)
                    REPLACE shijian  ;
                            WITH  ;
                            xjjl_d.jssj,  ;
                            addedflag  ;
                            WITH  ;
                            1
                    REPLACE io  ;
                            WITH  ;
                            'O'
               ENDIF
               IF mflag > 0 .AND.  ;
                  mflag < 99
                    REPLACE xjjl_d.mark  ;
                            WITH  ;
                            1
               ENDIF
          CASE xjjl_d.kqlb >= 93  ;
               .AND. xjjl_d.kqlb <=  ;
               94
               mflag = 0
               SET EXACT OFF
               SEEK xjjl_d.zgbh +  ;
                    xjjl_d.riqi 
               SET EXACT ON
               IF  .NOT. EOF()
                    mflag = chk_dupaddrecord()
               ENDIF
               IF mflag = 10 .OR.  ;
                  mflag = 11
                    APPEND BLANK
                    REPLACE zgbh  ;
                            WITH  ;
                            xjjl_d.zgbh,  ;
                            riqi  ;
                            WITH  ;
                            xjjl_d.riqi,  ;
                            shijian  ;
                            WITH  ;
                            xjjl_d.kssj,  ;
                            addedflag  ;
                            WITH  ;
                            1
                    REPLACE io  ;
                            WITH  ;
                            'I'
               ENDIF
               IF mflag = 1 .OR.  ;
                  mflag = 11
                    APPEND BLANK
                    REPLACE zgbh  ;
                            WITH  ;
                            xjjl_d.zgbh,  ;
                            riqi  ;
                            WITH  ;
                            IIF(xjjl_d.jssj <  ;
                            xjjl_d.kssj,  ;
                            DTOC(CTOD(xjjl_d.riqi) +  ;
                            1),  ;
                            xjjl_d.riqi)
                    REPLACE shijian  ;
                            WITH  ;
                            xjjl_d.jssj,  ;
                            addedflag  ;
                            WITH  ;
                            1
                    REPLACE io  ;
                            WITH  ;
                            'O'
               ENDIF
          CASE xjjl_d.kqlb = 75
               REPLACE xjjl_d.mark  ;
                       WITH 1
               APPEND BLANK
               IF xjjl_d.kssj >  ;
                  1440
                    REPLACE zgbh  ;
                            WITH  ;
                            xjjl_d.zgbh,  ;
                            riqi  ;
                            WITH  ;
                            DTOC(CTOD(xjjl_d.riqi) +  ;
                            1),  ;
                            shijian  ;
                            WITH  ;
                            xjjl_d.kssj -  ;
                            1440
               ELSE
                    REPLACE zgbh  ;
                            WITH  ;
                            xjjl_d.zgbh,  ;
                            riqi  ;
                            WITH  ;
                            xjjl_d.riqi,  ;
                            shijian  ;
                            WITH  ;
                            xjjl_d.kssj
               ENDIF
               REPLACE io WITH  ;
                       'I'
               APPEND BLANK
               IF xjjl_d.jssj <  ;
                  xjjl_d.kssj
                    REPLACE zgbh  ;
                            WITH  ;
                            xjjl_d.zgbh,  ;
                            riqi  ;
                            WITH  ;
                            DTOC(CTOD(xjjl_d.riqi) +  ;
                            1),  ;
                            shijian  ;
                            WITH  ;
                            xjjl_d.jssj
               ELSE
                    IF xjjl_d.jssj >  ;
                       1440
                         REPLACE zgbh  ;
                                 WITH  ;
                                 xjjl_d.zgbh,  ;
                                 riqi  ;
                                 WITH  ;
                                 DTOC(CTOD(xjjl_d.riqi) +  ;
                                 1),  ;
                                 shijian  ;
                                 WITH  ;
                                 xjjl_d.jssj -  ;
                                 1440
                    ELSE
                         REPLACE zgbh  ;
                                 WITH  ;
                                 xjjl_d.zgbh,  ;
                                 riqi  ;
                                 WITH  ;
                                 xjjl_d.riqi,  ;
                                 shijian  ;
                                 WITH  ;
                                 xjjl_d.jssj
                    ENDIF
               ENDIF
               REPLACE io WITH  ;
                       'O'
          CASE xjjl_d.kqlb = 76
               REPLACE xjjl_d.mark  ;
                       WITH 1
               APPEND BLANK
               IF xjjl_d.kssj >  ;
                  1440
                    REPLACE zgbh  ;
                            WITH  ;
                            xjjl_d.zgbh,  ;
                            riqi  ;
                            WITH  ;
                            DTOC(CTOD(xjjl_d.riqi) +  ;
                            1),  ;
                            shijian  ;
                            WITH  ;
                            xjjl_d.kssj -  ;
                            1440
               ELSE
                    REPLACE zgbh  ;
                            WITH  ;
                            xjjl_d.zgbh,  ;
                            riqi  ;
                            WITH  ;
                            xjjl_d.riqi,  ;
                            shijian  ;
                            WITH  ;
                            xjjl_d.kssj
               ENDIF
               REPLACE io WITH  ;
                       IIF(xjjl_d.jbattr =  ;
                       1, "I",  ;
                       IIF(xjjl_d.jbattr =  ;
                       2, "O",  ;
                       " "))
          CASE xjjl_d.kqlb = 78
               REPLACE xjjl_d.mark  ;
                       WITH 1
               SEEK xjjl_d.zgbh +  ;
                    xjjl_d.riqi +  ;
                    STR(xjjl_d.kssj,  ;
                    4) 
               IF  .NOT. EOF()
                    REPLACE io  ;
                            WITH  ;
                            IIF(xjjl_d.jbattr =  ;
                            1,  ;
                            "I",  ;
                            IIF(xjjl_d.jbattr =  ;
                            2,  ;
                            "O",  ;
                            " " ;
                            ))
               ENDIF
          CASE xjjl_d.kqlb = 41
               REPLACE xjjl_d.mark  ;
                       WITH 1
               SET EXACT OFF
               SEEK xjjl_d.zgbh +  ;
                    xjjl_d.riqi 
               SET EXACT ON
               mkssj = xjjl_d.kssj
               mjssj = IIF(xjjl_d.kssj >  ;
                       xjjl_d.jssj,  ;
                       1440 +  ;
                       xjjl_d.jssj,  ;
                       xjjl_d.jssj)
               DO WHILE  .NOT.  ;
                  EOF() .AND.  ;
                  xjjl_d.zgbh= ;
                  zgbh .AND.  ;
                  xjjl_d.riqi= ;
                  riqi
                    IF xjjl_d.kssj =  ;
                       0 .AND.  ;
                       xjjl_d.jssj =  ;
                       0
                         DELETE
                    ELSE
                         IF shijian >=  ;
                            mkssj  ;
                            .AND.  ;
                            shijian <=  ;
                            mjssj
                              DELETE
                         ENDIF
                    ENDIF
                    SKIP
               ENDDO
               IF mjssj >= 1440
                    DO WHILE   ;
                       .NOT.  ;
                       EOF()  ;
                       .AND.  ;
                       xjjl_d.zgbh= ;
                       zgbh .AND.  ;
                       CTOD(xjjl_d.riqi)+ ;
                       1= ;
                       CTOD(riqi)
                         IF shijian >=  ;
                            0  ;
                            .AND.  ;
                            shijian <=  ;
                            mjssj -  ;
                            1440
                              DELETE
                         ENDIF
                         SKIP
                    ENDDO
               ENDIF
     ENDCASE
     SELECT xjjl_d
ENDSCAN
SELECT xjjl_d
SET RELATION TO bc INTO time
SET FILTER TO kqlb = 98
GOTO TOP
SCAN
     IF  .NOT. EMPTY(bc)
          SELECT ardata_
          SEEK xjjl_d.zgbh +  ;
               xjjl_d.riqi 
          IF FOUND()
               mrec = 0
               mzgbh = zgbh
               mdate = CTOD(riqi)
               msbsj = time.sbsj
               mxbsj = IIF(time.xbsj >  ;
                       time.sbsj,  ;
                       time.xbsj,  ;
                       1440 +  ;
                       time.xbsj)
               mcnt = 0
               DO CASE
                    CASE time.lb =  ;
                         "1"
                         DO WHILE   ;
                            .NOT.  ;
                            EOF()  ;
                            .AND.  ;
                            mzgbh= ;
                            zgbh  ;
                            .AND.  ;
                            mdate= ;
                            CTOD(riqi)
                              IF (ABS(shijian -  ;
                                 msbsj) <  ;
                                 delta4  ;
                                 .OR.  ;
                                 ABS(shijian -  ;
                                 mxbsj) <  ;
                                 delta4)  ;
                                 .AND.  ;
                                 mark <  ;
                                 1
                                   IF mrec = 0
                                        mrec = RECNO()
                                   ENDIF
                                   REPLACE mark WITH 8
                                   mcnt = mcnt + 1
                              ENDIF
                              SKIP
                         ENDDO
                    CASE time.lb =  ;
                         "2"
                         DO WHILE   ;
                            .NOT.  ;
                            EOF()  ;
                            .AND.  ;
                            mzgbh= ;
                            zgbh  ;
                            .AND.  ;
                            mdate= ;
                            CTOD(riqi)
                              IF (ABS(shijian -  ;
                                 msbsj) <  ;
                                 delta4  ;
                                 .OR.  ;
                                 ABS(shijian -  ;
                                 mxbsj) <  ;
                                 delta4)  ;
                                 .AND.  ;
                                 mark <  ;
                                 1
                                   IF mrec = 0
                                        mrec = RECNO()
                                   ENDIF
                                   REPLACE mark WITH 8
                                   mcnt = mcnt + 1
                              ENDIF
                              SKIP
                         ENDDO
                         DO WHILE   ;
                            .NOT.  ;
                            EOF()  ;
                            .AND.  ;
                            mzgbh= ;
                            zgbh  ;
                            .AND.  ;
                            mdate= ;
                            CTOD(riqi)- ;
                            1  ;
                            .AND.  ;
                            shijian< ;
                            delta4* ;
                            2/3
                              IF (ABS(1440 +  ;
                                 shijian -  ;
                                 msbsj) <  ;
                                 delta4  ;
                                 .OR.  ;
                                 ABS(1440 +  ;
                                 shijian -  ;
                                 mxbsj) <  ;
                                 delta4)  ;
                                 .AND.  ;
                                 mark <  ;
                                 1
                                   IF mrec = 0
                                        mrec = RECNO()
                                   ENDIF
                                   REPLACE riqi WITH DTOC(mdate), shijian WITH 1440 + shijian, mark WITH 8
                                   mcnt = mcnt + 1
                              ENDIF
                              SKIP
                         ENDDO
                    CASE time.lb =  ;
                         "3"
                         DO WHILE   ;
                            .NOT.  ;
                            EOF()  ;
                            .AND.  ;
                            mzgbh= ;
                            zgbh  ;
                            .AND.  ;
                            mdate= ;
                            CTOD(riqi)
                              IF (ABS(shijian -  ;
                                 msbsj) <  ;
                                 delta4  ;
                                 .OR.  ;
                                 ABS(shijian -  ;
                                 mxbsj) <  ;
                                 delta4)  ;
                                 .AND.  ;
                                 mark <  ;
                                 1
                                   IF mrec = 0
                                        mrec = RECNO()
                                   ENDIF
                                   REPLACE mark WITH 8
                                   mcnt = mcnt + 1
                              ENDIF
                              SKIP
                         ENDDO
                         DO WHILE   ;
                            .NOT.  ;
                            EOF()  ;
                            .AND.  ;
                            mzgbh= ;
                            zgbh  ;
                            .AND.  ;
                            mdate= ;
                            CTOD(riqi)- ;
                            1
                              IF (ABS(1440 +  ;
                                 shijian -  ;
                                 msbsj) <  ;
                                 delta4  ;
                                 .OR.  ;
                                 ABS(1440 +  ;
                                 shijian -  ;
                                 mxbsj) <  ;
                                 delta4)  ;
                                 .AND.  ;
                                 mark <  ;
                                 1
                                   IF mrec = 0
                                        mrec = RECNO()
                                   ENDIF
                                   REPLACE riqi WITH DTOC(mdate), shijian WITH 1440 + shijian, mark WITH 8
                                   mcnt = mcnt + 1
                              ENDIF
                              SKIP
                         ENDDO
               ENDCASE
               IF mrec > 0
                    GOTO mrec
                    DO CASE
                         CASE mcnt =  ;
                              1
                              SELECT  ;
                               zg
                              SEEK  ;
                               mzgbh 
                              SELECT  ;
                               clfx
                              APPEND  ;
                               BLANK
                              REPLACE  ;
                               zgbh  ;
                               WITH  ;
                               mzgbh,  ;
                               riqi  ;
                               WITH  ;
                               DTOC(mdate),  ;
                               bc  ;
                               WITH  ;
                               time.bc,  ;
                               lb  ;
                               WITH  ;
                               time.lb
                              REPLACE  ;
                               sbsj  ;
                               WITH  ;
                               msbsj,  ;
                               xbsj  ;
                               WITH  ;
                               mxbsj,  ;
                               zdcl  ;
                               WITH  ;
                               73,  ;
                               rgcl  ;
                               WITH  ;
                               98
                              IF ABS(ardata_.shijian -  ;
                                 msbsj) >  ;
                                 ABS(ardata_.shijian -  ;
                                 mxbsj)
                                   REPLACE xbsk WITH ardata_.shijian
                              ELSE
                                   REPLACE sbsk WITH ardata_.shijian
                              ENDIF
                              REPLACE  ;
                               cqss  ;
                               WITH  ;
                               time.ss
                              SELECT  ;
                               ardata_
                         CASE mcnt >=  ;
                              2
                              SELECT  ;
                               zg
                              SEEK  ;
                               mzgbh 
                              SELECT  ;
                               clfx
                              APPEND  ;
                               BLANK
                              REPLACE  ;
                               zgbh  ;
                               WITH  ;
                               mzgbh,  ;
                               riqi  ;
                               WITH  ;
                               DTOC(mdate),  ;
                               bc  ;
                               WITH  ;
                               time.bc,  ;
                               lb  ;
                               WITH  ;
                               time.lb
                              REPLACE  ;
                               sbsk  ;
                               WITH  ;
                               ardata_.shijian,  ;
                               sbsj  ;
                               WITH  ;
                               msbsj,  ;
                               xbsj  ;
                               WITH  ;
                               mxbsj,  ;
                               rgcl  ;
                               WITH  ;
                               98
                              SELECT  ;
                               ardata_
                              i =  ;
                               1
                              DO WHILE  ;
                                 i< ;
                                 mcnt- ;
                                 1
                                   SKIP
                                   REPLACE mark WITH 9
                                   i = i + 1
                              ENDDO
                              SKIP
                              SELECT  ;
                               clfx
                              REPLACE  ;
                               xbsk  ;
                               WITH  ;
                               ardata_.shijian
                              mcd =  ;
                               sbsk -  ;
                               sbsj
                              IF mcd >  ;
                                 sjcd1  ;
                                 .AND.  ;
                                 rgcl =  ;
                                 0
                                   REPLACE cdss WITH IIF(sjcd2 > 1, sjcd2 * (INT(mcd / sjcd2) + 1), mcd)
                                   REPLACE zdcl WITH 80
                              ENDIF
                              mzt =  ;
                               xbsj -  ;
                               xbsk
                              IF mzt >  ;
                                 sjzt1  ;
                                 .AND.  ;
                                 rgcl =  ;
                                 0
                                   REPLACE ztss WITH IIF(sjzt2 > 1, sjzt2 * (INT(mzt / sjzt2) + 1), mzt)
                                   REPLACE zdcl WITH IIF(zdcl = 80, 82, 81)
                              ENDIF
                              IF (cdss >=  ;
                                 sjcd3  ;
                                 .OR.  ;
                                 ztss >=  ;
                                 sjzt3)  ;
                                 .AND.  ;
                                 rgcl =  ;
                                 0
                                   REPLACE kgss WITH time.ss
                                   REPLACE zdcl WITH 85
                                   REPLACE cdss WITH 0, ztss WITH 0
                              ELSE
                                   REPLACE cqss WITH time.ss
                              ENDIF
                              SELECT  ;
                               ardata_
                    ENDCASE
               ENDIF
               IF mcnt > 0
                    REPLACE xjjl_d.mark  ;
                            WITH  ;
                            1
               ENDIF
          ENDIF
          SELECT xjjl_d
     ENDIF
ENDSCAN
SELECT clfx
SET RELATION TO bc INTO time
GOTO TOP
SET EXACT ON
SELECT xjjl_d
SET FILTER TO (kqlb = 92;
.OR. kqlb = 93;
.OR. kqlb = 94;
.OR. kqlb = 97;
.OR. (kqlb > 0;
.AND. kqlb < 31);
.OR. kqlb = 80;
.OR. kqlb = 98);
.AND. mark <> 1
mzgbh = ""
mdate = CTOD("")
mkqlb = 0
mbc = ""
mjbattr = 0
mkssj = 0
mjssj = 0
mss = 0
mts = 0
mrec = RECNO()
SCAN
     IF mzgbh <> zgbh .OR. mkqlb <>  ;
        kqlb .OR. mbc <> bc .OR.  ;
        mjbattr <> jbattr .OR.  ;
        mdate <> CTOD(riqi)
          mzgbh = zgbh
          mdate = CTOD(riqi)
          mkqlb = kqlb
          mbc = bc
          mjbattr = jbattr
          mkssj = kssj
          mjssj = jssj
          mss = ss
          mts = ts
          mrec = RECNO()
          LOOP
     ENDIF
     DO CASE
          CASE ABS(mjssj - kssj) <  ;
               10 .OR. ABS(mjssj -  ;
               (1440 + kssj)) <  ;
               10
               REPLACE mark WITH  ;
                       1
               mjssj = jssj
               mss = mss + ss
               mts = mts + ts
               DELETE
               GOTO mrec
               REPLACE jssj WITH  ;
                       mjssj, ss  ;
                       WITH mss,  ;
                       ts WITH  ;
                       mts
          CASE ABS(jssj - mkssj) <  ;
               10 .OR. ABS(jssj -  ;
               (1440 + mkssj)) <  ;
               10
               REPLACE mark WITH  ;
                       1
               mkssj = kssj
               mss = mss + ss
               mts = mts + ts
               DELETE
               GOTO mrec
               REPLACE kssj WITH  ;
                       mkssj, ss  ;
                       WITH mss,  ;
                       ts WITH  ;
                       mts
     ENDCASE
ENDSCAN
SET RELATION TO bc INTO bctmp
GOTO TOP
SELECT ardata_
SET FILTER TO mark < 8
SET RELATION TO zgbh INTO zg
GOTO TOP
mz = ''
SCAN
     IF CTOD(zg.jzsj) <> CTOD("")
          IF CTOD(riqi) <  ;
             CTOD(zg.jzsj) - 1
               DELETE
          ENDIF
     ENDIF
     IF CTOD(zg.lzsj) <> CTOD("")
          IF CTOD(riqi) >  ;
             CTOD(zg.lzsj) + 1
               DELETE
          ENDIF
     ENDIF
     IF mz = zgbh .AND. md =  ;
        CTOD(riqi) .AND. mt =  ;
        shijian .AND. mi = io
          DELETE
     ELSE
          mz = zgbh
          md = CTOD(riqi)
          mt = shijian
          mi = io
     ENDIF
ENDSCAN
GOTO TOP
IF  .NOT. EOF()
     recptr = RECNO()
     mzgbh = zgbh
     mdate = CTOD(riqi) - 1
ENDIF
RETURN
ENDPROC
**
FUNCTION chk_DupAddRecord
mret = 0
mkssj = IIF(xjjl_d.kssj >= 1440,  ;
        xjjl_d.kssj - 1440,  ;
        xjjl_d.kssj)
mjssj = IIF(xjjl_d.jssj >= 1440,  ;
        xjjl_d.jssj - 1440,  ;
        xjjl_d.jssj)
mrec = RECNO()
DO WHILE mret=0
     IF mkssj >= shijian - 60  ;
        .AND. mkssj <= shijian -  ;
        60
          mret = mret + 10
     ENDIF
     IF mjssj >= shijian - 60  ;
        .AND. mjssj <= shijian -  ;
        60
          mret = mret + 1
     ENDIF
     IF xjjl_d.zgbh <> zgbh .OR.  ;
        xjjl_d.riqi < riqi
          mret = 99
     ELSE
          SKIP
          IF EOF()
               mret = 99
          ENDIF
     ENDIF
ENDDO
GOTO mrec
RETURN mret
ENDFUNC
**
FUNCTION ModiSk_jb
PARAMETER l_sks, l_sjs, l_jbss,  ;
          l_jbks, l_jbjs
l_ret = 0
l_tks = l_sks
l_tjs = l_sjs
IF l_jbks = 0 .AND. l_jbjs = 0
     mdt = l_jbss / (l_sjs -  ;
           l_sks)
     IF mdt > 0.8  .AND. mdt <  ;
        1.2 
          l_ret = 1
     ELSE
          IF l_sjs - l_jbss >  ;
             l_sks .AND. l_jbss <  ;
             7.5 
               l_tjs = l_sjs -  ;
                       l_jbss
          ENDIF
     ENDIF
ELSE
     i_jbks = 9999
     i_jbjs = 9999
     i_jbtype = 0
     DO CASE
          CASE l_jbks >= l_sks  ;
               .AND. l_jbks <=  ;
               l_sjs .AND. l_jbjs >=  ;
               l_sks .AND. l_jbjs <=  ;
               l_sjs
               i_jbks = l_jbks -  ;
                        l_sks
               i_jbjs = l_sjs -  ;
                        l_jbjs
               i_jbtype = 1
          CASE l_jbks <= l_sks  ;
               .AND. l_jbks <=  ;
               l_sjs .AND. l_jbjs >=  ;
               l_sks .AND. l_jbjs >=  ;
               l_sjs
               i_jbks = l_sks -  ;
                        l_jbks
               i_jbjs = l_jbjs -  ;
                        l_sjs
               i_jbtype = 2
          CASE l_jbks <= l_sks  ;
               .AND. l_jbks <=  ;
               l_sjs .AND. l_jbjs >=  ;
               l_sks .AND. l_jbjs <=  ;
               l_sjs
               i_jbks = l_sks -  ;
                        l_jbks
               i_jbjs = l_sjs -  ;
                        l_jbjs
               i_jbtype = 3
          CASE l_jbks >= l_sks  ;
               .AND. l_jbks <=  ;
               l_sjs .AND. l_jbjs >=  ;
               l_sks .AND. l_jbjs >=  ;
               l_sjs
               i_jbks = l_jbks -  ;
                        l_sks
               i_jbjs = l_jbjs -  ;
                        l_sjs
               i_jbtype = 4
     ENDCASE
     DO CASE
          CASE i_jbks <  ;
               i_jbdelta1 .AND.  ;
               i_jbjs <  ;
               i_jbdelta1
               l_ret = 1
          CASE i_jbks = 9999  ;
               .AND. i_jbjs =  ;
               9999
          OTHERWISE
               DO CASE
                    CASE i_jbtype =  ;
                         1
                         IF i_jbks <=  ;
                            i_jbjs
                              l_tks =  ;
                               l_jbjs
                         ELSE
                              l_tjs =  ;
                               l_jbks
                         ENDIF
                    CASE i_jbtype =  ;
                         3
                         l_tks = l_jbjs
                    CASE i_jbtype =  ;
                         4
                         l_tjs = l_jbks
               ENDCASE
     ENDCASE
ENDIF
RETURN l_ret
ENDFUNC
**
FUNCTION chkjb
PARAMETER m_sb1, m_xb1, m_mode
m_xb1 = m_xb1 + IIF(m_xb1 < m_sb1,  ;
        1440, 0)
IF m_mode = 0
     m_sb2 = pub_jbks(1,  ;
             pub_jbqj_no)
     m_xb2 = IIF(pub_jbjs(1,  ;
             pub_jbqj_no) <  ;
             pub_jbks(1,  ;
             pub_jbqj_no), 1440 +  ;
             pub_jbjs(1,  ;
             pub_jbqj_no),  ;
             pub_jbjs(1,  ;
             pub_jbqj_no))
ELSE
     m_sb2 = pub_jbks(2,  ;
             pub_jbqj_no)
     m_xb2 = IIF(pub_jbjs(2,  ;
             pub_jbqj_no) <  ;
             pub_jbks(2,  ;
             pub_jbqj_no), 1440 +  ;
             pub_jbjs(2,  ;
             pub_jbqj_no),  ;
             pub_jbjs(2,  ;
             pub_jbqj_no))
ENDIF
IF m_sb2 = 0 .OR. m_xb2 = 0
     ret = -1
ELSE
     ret = 0
     kdelta9 = IIF(delta9 *  ;
               pub_jbss(1,  ;
               pub_jbqj_no) <  ;
               delta9max, delta9 *  ;
               pub_jbss(1,  ;
               pub_jbqj_no),  ;
               delta9max)
     DO CASE
          CASE m_sb2 >= m_sb1  ;
               .AND. m_sb2 <=  ;
               m_xb1 .AND. m_xb2 >=  ;
               m_sb1 .AND. m_xb2 <=  ;
               m_xb1
               IF m_sb2 - m_sb1 <  ;
                  kdelta9 .AND.  ;
                  m_xb1 - m_xb2 <  ;
                  kdelta9
                    ret = -9999
               ENDIF
          CASE m_sb2 <= m_sb1  ;
               .AND. m_sb2 <=  ;
               m_xb1 .AND. m_xb2 >=  ;
               m_sb1 .AND. m_xb2 <=  ;
               m_xb1
               IF m_sb1 - m_sb2 <  ;
                  kdelta9 .AND.  ;
                  m_xb1 - m_xb2 <  ;
                  kdelta9
                    ret = -9999
               ENDIF
          CASE m_sb2 >= m_sb1  ;
               .AND. m_sb2 <=  ;
               m_xb1 .AND. m_xb2 >=  ;
               m_sb1 .AND. m_xb2 >=  ;
               m_xb1
               IF m_sb2 - m_sb1 <  ;
                  kdelta9 .AND.  ;
                  m_xb2 - m_xb1 <  ;
                  kdelta9
                    ret = -9999
               ENDIF
     ENDCASE
ENDIF
RETURN ret
ENDFUNC
**
PROCEDURE WriteZtwc
msele = LTRIM(STR(SELECT()))
SELECT ztwc
IF sktabsel > tabptr + 1
     APPEND BLANK
     REPLACE zgbh WITH mzgbh,  ;
             riqi WITH  ;
             DTOC(mdate)
     IF bctabsel > 0
          REPLACE bc WITH  ;
                  bctabbh(bctabsel)
     ENDIF
     m = IIF(sktab(tabptr + 1) >=  ;
         0, IIF(sktab(tabptr + 1) <=  ;
         1440, sktab(tabptr + 1),  ;
         sktab(tabptr + 1) -  ;
         1440), 1440 +  ;
         sktab(tabptr + 1))
     REPLACE sk1 WITH m
ENDIF
FOR i = tabptr + 2 TO sktabsel -  ;
    1
     m = IIF(sktab(i) >= 0,  ;
         IIF(sktab(i) <= 1440,  ;
         sktab(i), sktab(i) -  ;
         1440), 1440 + sktab(i))
     IF sk2 > 0
          APPEND BLANK
          REPLACE zgbh WITH mzgbh,  ;
                  riqi WITH  ;
                  DTOC(mdate)
          IF bctabsel > 0
               REPLACE bc WITH  ;
                       bctabbh(bctabsel)
          ENDIF
          REPLACE sk1 WITH m
     ELSE
          REPLACE sk2 WITH m
          REPLACE ss WITH  ;
                  (IIF(sk2 >= sk1,  ;
                  0, 1440) + sk2 -  ;
                  sk1) / 60
          REPLACE ts WITH  ;
                  (IIF(sk2 >= sk1,  ;
                  0, 1440) + sk2 -  ;
                  sk1) / sjcq
     ENDIF
ENDFOR
SELECT &msele
RETURN
ENDPROC
**
PROCEDURE ModiSk_1440
PARAMETER para_sb, para_xb
modisk_1440_sb = para_sb
modisk_1440_xb = para_xb
mx = 0
DO WHILE modisk_1440_sb>=1440+ ;
   delta0
     modisk_1440_sb = modisk_1440_sb -  ;
                      1440
     mx = mx + 1
ENDDO
my = 0
DO WHILE modisk_1440_xb>=1440  ;
   .AND. modisk_1440_xb-1440>= ;
   modisk_1440_sb .AND. my<mx
     modisk_1440_xb = modisk_1440_xb -  ;
                      1440
     my = my + 1
ENDDO
RETURN
ENDPROC
**
PROCEDURE GetJbQj
FOR i = 1 TO 3
     FOR j = 1 TO 3
          STORE 0 TO pub_jbss(i,  ;
                j), pub_jblb(i,  ;
                j), pub_jbks(i,  ;
                j), pub_jbjs(i,  ;
                j), pub_jbbcks(i,  ;
                j), pub_jbbcjs(i,  ;
                j), pub_jbbcss(i,  ;
                j)
          STORE 0 TO pub_qjss(i,  ;
                j), pub_qjlb(i,  ;
                j), pub_qjks(i,  ;
                j), pub_qjjs(i,  ;
                j), pub_qjbcks(i,  ;
                j), pub_qjbcjs(i,  ;
                j), pub_qjbcss(i,  ;
                j)
          STORE 0 TO pub_cqss(i,  ;
                j), pub_cqks(i,  ;
                j), pub_cqjs(i,  ;
                j), pub_cqbcks(i,  ;
                j), pub_cqbcjs(i,  ;
                j), pub_cqbcss(i,  ;
                j)
          STORE "" TO pub_jbbc(i,  ;
                j), pub_qjbc(i,  ;
                j), pub_cqbc(i,  ;
                j)
     ENDFOR
ENDFOR
SELECT xjjl_d
SET EXACT OFF
SEEK mzgbh 
IF  .NOT. EOF()
     DO WHILE  .NOT. EOF() .AND.  ;
        zgbh=mzgbh .AND.  ;
        CTOD(riqi)<mdate
          SKIP
     ENDDO
ENDIF
IF  .NOT. EOF()
     FOR i = 1 TO 3
          j = 0
          DO WHILE  .NOT. EOF()  ;
             .AND. zgbh=mzgbh  ;
             .AND. CTOD(riqi)= ;
             mdate+i-1
               DO CASE
                    CASE kqlb =  ;
                         98 .AND.  ;
                         kssj > 0  ;
                         .AND.  ;
                         jssj >  ;
                         0
                         IF j < 3
                              j =  ;
                               j +  ;
                               1
                              pub_cqss(i,  ;
                               j) =  ;
                               ss
                              pub_cqks(i,  ;
                               j) =  ;
                               kssj
                              pub_cqjs(i,  ;
                               j) =  ;
                               IIF(jssj >=  ;
                               kssj,  ;
                               jssj,  ;
                               1440 +  ;
                               jssj)
                              IF   ;
                               .NOT.  ;
                               EMPTY(bc)
                                   pub_cqbc(i, j) = bc
                                   pub_cqbcks(i, j) = bctmp.sbsj
                                   pub_cqbcjs(i, j) = IIF(bctmp.xbsj >= bctmp.sbsj, bctmp.xbsj, 1440 + bctmp.xbsj)
                                   pub_cqbcss(i, j) = IIF(bctmp.xbsj < bctmp.sbsj, 1440, 0) + bctmp.xbsj - bctmp.sbsj - bctmp.zjxx
                              ENDIF
                         ENDIF
                    CASE (kqlb >=  ;
                         92 .AND.  ;
                         kqlb <=  ;
                         94) .OR.  ;
                         kqlb =  ;
                         97
                         IF j < 3
                              j =  ;
                               j +  ;
                               1
                              pub_jblb(i,  ;
                               j) =  ;
                               kqlb
                              pub_jbss(i,  ;
                               j) =  ;
                               ss
                              pub_jbks(i,  ;
                               j) =  ;
                               kssj
                              pub_jbjs(i,  ;
                               j) =  ;
                               IIF(jssj >=  ;
                               kssj,  ;
                               jssj,  ;
                               1440 +  ;
                               jssj)
                              IF   ;
                               .NOT.  ;
                               EMPTY(bc)
                                   pub_jbbc(i, j) = bc
                                   pub_jbbcks(i, j) = bctmp.sbsj
                                   pub_jbbcjs(i, j) = IIF(bctmp.xbsj >= bctmp.sbsj, bctmp.xbsj, 1440 + bctmp.xbsj)
                                   pub_jbbcss(i, j) = IIF(bctmp.xbsj < bctmp.sbsj, 1440, 0) + bctmp.xbsj - bctmp.sbsj - bctmp.zjxx
                              ENDIF
                         ENDIF
                    CASE (kqlb >=  ;
                         1 .AND.  ;
                         kqlb <=  ;
                         30) .OR.  ;
                         kqlb =  ;
                         80
                         IF j < 3
                              j =  ;
                               j +  ;
                               1
                              pub_qjlb(i,  ;
                               j) =  ;
                               IIF(kqlb =  ;
                               80,  ;
                               30,  ;
                               kqlb)
                              pub_qjss(i,  ;
                               j) =  ;
                               ss
                              pub_qjks(i,  ;
                               j) =  ;
                               kssj
                              pub_qjjs(i,  ;
                               j) =  ;
                               IIF(jssj >=  ;
                               kssj,  ;
                               jssj,  ;
                               1440 +  ;
                               jssj)
                              IF   ;
                               .NOT.  ;
                               EMPTY(bc)
                                   pub_qjbc(i, j) = bc
                                   pub_qjbcks(i, j) = bctmp.sbsj
                                   pub_qjbcjs(i, j) = IIF(bctmp.xbsj >= bctmp.sbsj, bctmp.xbsj, 1440 + bctmp.xbsj)
                                   pub_qjbcss(i, j) = IIF(bctmp.xbsj < bctmp.sbsj, 1440, 0) + bctmp.xbsj - bctmp.sbsj - bctmp.zjxx
                              ENDIF
                         ENDIF
               ENDCASE
               SKIP
          ENDDO
     ENDFOR
ENDIF
SET EXACT ON
RETURN
ENDPROC
**
FUNCTION ChkDup
LPARAMETERS cd_sbsk1, cd_xbsk1,  ;
            cd_sbsk2, cd_xbsk2
IF cd_sbsk1 = 0 .OR. cd_xbsk1 = 0  ;
   .OR. cd_sbsk2 = 0 .OR.  ;
   cd_xbsk2 = 0
     RETURN 0
ENDIF
DO modisk_1440 WITH cd_sbsk1,  ;
   IIF(cd_xbsk1<cd_sbsk1, 1440+ ;
   cd_xbsk1, cd_xbsk1)
mcd_sbsk1 = modisk_1440_sb
mcd_xbsk1 = modisk_1440_xb
mcd_sbsk2 = cd_sbsk2
mcd_xbsk2 = IIF(cd_xbsk2 <  ;
            cd_sbsk2, 1440 +  ;
            cd_xbsk2, cd_xbsk2)
DO CASE
     CASE ABS(mcd_sbsk2 -  ;
          mcd_sbsk1) <= 120 .AND.  ;
          ABS(mcd_xbsk2 -  ;
          mcd_xbsk1) <= 120
          cd_ret = 4
     CASE mcd_sbsk1 >= mcd_sbsk2  ;
          .AND. mcd_sbsk1 <=  ;
          mcd_xbsk2 .AND.  ;
          mcd_xbsk1 >= mcd_sbsk2  ;
          .AND. mcd_xbsk1 <=  ;
          mcd_xbsk2
          cd_ret = 3
     CASE mcd_sbsk2 >= mcd_sbsk1  ;
          .AND. mcd_sbsk2 <=  ;
          mcd_xbsk1 .AND.  ;
          mcd_xbsk2 >= mcd_sbsk1  ;
          .AND. mcd_xbsk2 <=  ;
          mcd_xbsk1
          cd_ret = 3
     CASE mcd_sbsk1 >= mcd_sbsk2  ;
          .AND. mcd_sbsk1 <=  ;
          mcd_xbsk2 .AND.  ;
          (mcd_xbsk1 < mcd_sbsk2  ;
          .OR. mcd_xbsk1 >  ;
          mcd_xbsk2)
          cd_ret = 2
     CASE mcd_sbsk2 >= mcd_sbsk1  ;
          .AND. mcd_sbsk2 <=  ;
          mcd_xbsk1 .AND.  ;
          (mcd_xbsk2 < mcd_sbsk1  ;
          .OR. mcd_xbsk2 >  ;
          mcd_xbsk1)
          cd_ret = 2
     CASE (mcd_sbsk1 < mcd_sbsk2  ;
          .OR. mcd_sbsk1 >  ;
          mcd_xbsk2) .AND.  ;
          mcd_xbsk1 >= mcd_sbsk2  ;
          .AND. mcd_xbsk1 <=  ;
          mcd_xbsk2
          cd_ret = 2
     CASE (mcd_sbsk2 < mcd_sbsk1  ;
          .OR. mcd_sbsk2 >  ;
          mcd_xbsk1) .AND.  ;
          mcd_xbsk2 >= mcd_sbsk1  ;
          .AND. mcd_xbsk2 <=  ;
          mcd_xbsk1
          cd_ret = 2
     OTHERWISE
          cd_ret = 1
ENDCASE
RETURN cd_ret
ENDFUNC
**
FUNCTION ChkDupForAll
LPARAMETERS cda_start, cda_end,  ;
            cda_day
cda_ret = 0
cda_jbks = pub_jbks(cda_day,  ;
           pub_jbqj_no)
cda_jbjs = pub_jbjs(cda_day,  ;
           pub_jbqj_no)
IF (cda_jbks = 0 .OR. cda_jbjs =  ;
   0) .AND. pub_jbss(cda_day,  ;
   pub_jbqj_no) > 0
     FOR cda_i = cda_start TO  ;
         cda_end - 1
          cda_rate = (sktab(cda_i +  ;
                     1) -  ;
                     sktab(cda_i)) /  ;
                     pub_jbss(cda_day,  ;
                     pub_jbqj_no)
          IF cda_rate >= 0.9   ;
             .AND. cda_rate <=  ;
             1.1 
               cda_ret = cda_i
               EXIT
          ENDIF
     ENDFOR
ELSE
     IF cda_jbks > 0 .AND.  ;
        cda_jbjs > 0
          FOR cda_i = cda_start  ;
              TO cda_end - 1
               IF chkdup(sktab(cda_i),  ;
                  sktab(cda_i +  ;
                  1), cda_jbks,  ;
                  cda_jbjs) = 4
                    cda_ret = cda_i
                    EXIT
               ENDIF
          ENDFOR
     ENDIF
ENDIF
RETURN cda_ret
ENDFUNC
**
FUNCTION Chk98
LPARAMETERS chk98_zgbh,  ;
            chk98_riqi
chk98_sele = LTRIM(STR(SELECT()))
chk98_ret = .F.
SELECT xjjl_d
chk98_filter = FILTER()
SET FILTER TO
SEEK chk98_zgbh + chk98_riqi 
DO WHILE  .NOT. EOF() .AND.  ;
   chk98_zgbh=zgbh .AND.  ;
   chk98_riqi=riqi
     IF kqlb = 98 .AND. mark = 1
          chk98_ret = .T.
          EXIT
     ENDIF
     SKIP
ENDDO
set filter to &chk98_filter 
select &chk98_sele	
RETURN chk98_ret
ENDFUNC
**
FUNCTION ChkWeeHours
LPARAMETERS cwh_mode, cwh_time
IF cwh_mode < 1 .OR. cwh_mode > 2  ;
   .OR. cwh_time = 0
     RETURN .F.
ENDIF
cwh_flag = 0
mcwh_time = cwh_time
IF pub_qjks(cwh_mode, 1) > 0  ;
   .AND. pub_qjjs(cwh_mode, 1) >  ;
   0
     IF (cwh_time >=  ;
        pub_qjks(cwh_mode, 1)  ;
        .AND. cwh_time <=  ;
        pub_qjjs(cwh_mode, 1))  ;
        .OR. (1440 + cwh_time >=  ;
        pub_qjks(cwh_mode, 1)  ;
        .AND. 1440 + cwh_time <=  ;
        pub_qjjs(cwh_mode, 1))
          mcwh_time = pub_qjks(cwh_mode,  ;
                      1)
          cwh_flag = 0
     ENDIF
ENDIF
DO WHILE mcwh_time>=1440
     mcwh_time = mcwh_time - 1440
ENDDO
cwh_ret = .F.
IF cwh_flag = 0
     IF mcwh_time <= delta0
          cwh_ret = .T.
     ENDIF
ELSE
     IF (mcwh_time <= delta0)  ;
        .OR. (mcwh_time > 1440 -  ;
        delta0)
          cwh_ret = .T.
     ENDIF
ENDIF
RETURN cwh_ret
ENDFUNC
**
***
*** syslog.fxp
***
*
PARAMETER sl_loglevel,  ;
          sl_location,  ;
          sl_description
IF sl_loglevel < sysloglevel
     sl_description = STRTRAN(sl_description,  ;
                      "'", '"')
     log_sele = LTRIM(STR(SELECT()))
     sl_sql = "insert into sys_log (ID,CreateTime,LogLevel,Operator,Location,Description) values (?log_ID,'"
     sl_sql = sl_sql +  ;
              TTOC(DATETIME()) +  ;
              "',"
     sl_sql = sl_sql +  ;
              STR(sl_loglevel, 2) +  ;
              ",'"
     IF EMPTY(pub_user)
          sl_sql = sl_sql + "SYS" +  ;
                   " (" + SYS(0) +  ;
                   ")','"
     ELSE
          sl_sql = sl_sql +  ;
                   pub_user +  ;
                   " (" + SYS(0) +  ;
                   ")','"
     ENDIF
     sl_sql = sl_sql +  ;
              sl_location +  ;
              "','"
     sl_sql = sl_sql +  ;
              IIF(LEN(sl_description) >  ;
              127,  ;
              LEFT(sl_description,  ;
              127),  ;
              sl_description) +  ;
              "')"
     log_id = getcount(7, 1)
     IF log_id < 0
          RETURN
     ENDIF
     log_id = log_id + 1
     sqlexe_run(00000000032,  ;
               SYS(16), sl_sql,  ;
               "sys_log")
     select &log_sele
ENDIF
RETURN
ENDPROC
**
***
*** dayofweek.fxp
***
*
**
FUNCTION DayOfWeek
LPARAMETERS dayofweek_year,  ;
            dayofweek_week,  ;
            dayofweek_mod
IF dayofweek_year <> sys_wyear
     sys_wday = CTOD(STR(dayofweek_year,  ;
                4) + "/07/01")
     sys_wweek = WEEK(sys_wday)
     sys_wyear = YEAR(sys_wday)
ENDIF
sys_wday = sys_wday + 7 *  ;
           (dayofweek_week -  ;
           sys_wweek)
IF WEEK(sys_wday) <  ;
   dayofweek_week
     DO WHILE WEEK(sys_wday)< ;
        dayofweek_week
          sys_wday = sys_wday + 1
     ENDDO
ELSE
     IF WEEK(sys_wday) >  ;
        dayofweek_week
          DO WHILE WEEK(sys_wday)> ;
             dayofweek_week
               sys_wday = sys_wday -  ;
                          1
          ENDDO
     ENDIF
ENDIF
IF dayofweek_mod = 0
     DO WHILE WEEK(sys_wday)= ;
        dayofweek_week
          sys_wday = sys_wday - 1
     ENDDO
     sys_wday = sys_wday + 1
     DO WHILE DOW(sys_wday)=1  ;
        .OR. DOW(sys_wday)=7
          sys_wday = sys_wday + 1
     ENDDO
ELSE
     DO WHILE WEEK(sys_wday)= ;
        dayofweek_week
          sys_wday = sys_wday + 1
     ENDDO
     sys_wday = sys_wday - 1
     DO WHILE DOW(sys_wday)=1  ;
        .OR. DOW(sys_wday)=7
          sys_wday = sys_wday - 1
     ENDDO
ENDIF
sys_wweek = WEEK(sys_wday)
sys_wyear = YEAR(sys_wday)
RETURN sys_wday
ENDFUNC
**
***
*** lastweek.fxp
***
*
**
FUNCTION LastWeek
LPARAMETERS lastweek_year
lastweek_day = CTOD(STR(lastweek_year,  ;
               4) + "/12/31")
DO WHILE WEEK(lastweek_day)=1
     lastweek_day = lastweek_day -  ;
                    1
ENDDO
RETURN WEEK(lastweek_day)
ENDFUNC
**
***
*** getgongling.fxp
***
*
SELECT nj_sh
LOCATE FOR classid = zg.njlb
IF EOF()
     SELECT nj_0_curr
     LOOP
ENDIF
DO CASE
     CASE checkday = 0
          menddate = DATE()
          IF YEAR(menddate) <>  ;
             pub_nd .OR.  ;
             MONTH(menddate) <>  ;
             pub_yf
               menddate = CTOD(STR(pub_nd,  ;
                          4) +  ;
                          '/' +  ;
                          STR(pub_yf,  ;
                          2) +  ;
                          '/' +  ;
                          STR(sjdate2,  ;
                          2))
               IF menddate =  ;
                  CTOD("")
                    menddate = CTOD(STR(pub_nd,  ;
                               4) +  ;
                               '/' +  ;
                               STR(pub_yf,  ;
                               2) +  ;
                               '/' +  ;
                               STR(sjdate2 -  ;
                               1,  ;
                               2))
                    IF menddate =  ;
                       CTOD("")
                         menddate =  ;
                          CTOD(STR(pub_nd,  ;
                          4) +  ;
                          '/' +  ;
                          STR(pub_yf,  ;
                          2) +  ;
                          '/' +  ;
                          STR(sjdate2 -  ;
                          2, 2))
                         IF menddate =  ;
                            CTOD("")
                              menddate =  ;
                               CTOD(STR(pub_nd,  ;
                               4) +  ;
                               '/' +  ;
                               STR(pub_yf,  ;
                               2) +  ;
                               '/' +  ;
                               STR(sjdate2 -  ;
                               3,  ;
                               2))
                         ENDIF
                    ENDIF
               ENDIF
          ENDIF
     CASE checkday >= 1 .AND.  ;
          checkday <= 31
          menddate = CTOD(STR(pub_nd,  ;
                     4) + '/' +  ;
                     STR(pub_yf,  ;
                     2) + '/' +  ;
                     STR(checkday,  ;
                     2))
          IF menddate = CTOD("")
               menddate = CTOD(STR(pub_nd,  ;
                          4) +  ;
                          '/' +  ;
                          STR(pub_yf,  ;
                          2) +  ;
                          '/' +  ;
                          STR(checkday -  ;
                          1, 2))
               IF menddate =  ;
                  CTOD("")
                    IF menddate =  ;
                       CTOD("")
                         menddate =  ;
                          CTOD(STR(pub_nd,  ;
                          4) +  ;
                          '/' +  ;
                          STR(pub_yf,  ;
                          2) +  ;
                          '/' +  ;
                          STR(checkday -  ;
                          3, 2))
                    ENDIF
                    menddate = CTOD(STR(pub_nd,  ;
                               4) +  ;
                               '/' +  ;
                               STR(pub_yf,  ;
                               2) +  ;
                               '/' +  ;
                               STR(checkday -  ;
                               2,  ;
                               2))
               ENDIF
          ENDIF
     OTHERWISE
          menddate = CTOD(STR(p_nd,  ;
                     4) + '/' +  ;
                     STR(p_yf, 2) +  ;
                     '/' +  ;
                     STR(sjdate1,  ;
                     2))
ENDCASE
my2 = YEAR(menddate)
mm2 = MONTH(menddate)
md2 = DAY(menddate)
mbrith = CTOD(zg.jzsj)
my1 = YEAR(mbrith)
mm1 = MONTH(mbrith)
md1 = DAY(mbrith)
IF menddate - mbrith <= 0
     mnds = 0
     myfs = 0
ELSE
     DO CASE
          CASE mm2 = mm1 .AND.  ;
               md2 >= md1
               mnds = my2 - my1
               myfs = 0
          CASE mm2 > mm1
               mnds = my2 - my1
               IF md2 >= md1
                    myfs = mm2 -  ;
                           mm1
               ELSE
                    myfs = mm2 -  ;
                           mm1 -  ;
                           1
               ENDIF
          OTHERWISE
               mnds = my2 - my1 -  ;
                      1
               myfs = 12 - mm1 +  ;
                      mm2
               IF md2 < md1
                    myfs = myfs -  ;
                           1
               ENDIF
     ENDCASE
ENDIF
ENDPROC
**
***
*** getitemdef.fxp
***
*
**
FUNCTION GetItemDef
LPARAMETERS gid_screenid,  ;
            gid_itemid
gid_area = STR(SELECT())
IF  .NOT. USED('sys_cd_item')
     sqlexe_run(00000000011,  ;
               SYS(16),  ;
               "select * from sys_cd_item",  ;
               "sys_cd_item")
     SELECT sys_cd_item
     INDEX ON TRIM(hmbh) +  ;
           STR(flag, 2) +  ;
           TRIM(xmid) TAG hm_xm
ENDIF
SELECT sys_cd_item
SEEK gid_screenid + ' 1' +  ;
     gid_itemid 
IF  .NOT. EOF()
     DO CASE
          CASE flag = 1
               gid_ret = ALLTRIM(strval)
          CASE flag = 2
               mval = ALLTRIM(strval)
               gid_ret = &mval
     ENDCASE
ELSE
     gid_ret = .NULL.
ENDIF
select &gid_Area
RETURN gid_ret
ENDFUNC
**
***
*** chkitemval.fxp
***
*
**
FUNCTION ChkItemVal
LPARAMETERS gid_screenid
gid_area = STR(SELECT())
IF  .NOT. USED('sys_cd_item')
     sqlexe_run(00000000011,  ;
               SYS(16),  ;
               "select * from sys_cd_item",  ;
               "sys_cd_item")
     SELECT sys_cd_item
     INDEX ON TRIM(hmbh) +  ;
           STR(flag, 2) +  ;
           TRIM(xmid) TAG hm_xm
ENDIF
gid_ret = .T.
SELECT sys_cd_item
LOCATE FOR hmbh = gid_screenid  ;
       .AND. STR(flag, 2) = ' 2'
DO WHILE gid_ret .AND.  .NOT.  ;
   EOF() .AND. hmbh=gid_screenid  ;
   .AND. STR(flag, 2)=' 2'
     gid_chkstr = ALLTRIM(strval)
     gid_chkstr = STRTRAN(gid_chkstr,  ;
                  "p",  ;
                  TRIM(xmbh))
     select &gid_Area
     IF  .NOT. EMPTY(gid_chkstr)
          gid_ret = &gid_chkstr;
  
     ENDIF
     SELECT sys_cd_item
     SKIP
ENDDO
SELECT sys_cd_item
IF  .NOT. gid_ret
     = MESSAGEBOX("项目 [" +  ;
       sys_cd_item.xmmc +  ;
       "] 的输入有错误，请检查。",  ;
       64, "ANT2000")
ENDIF
select &gid_Area
RETURN gid_ret
ENDFUNC
**
***
*** createscreen.fxp
***
*
**
PROCEDURE CreateScreen
SET SYSMENU TO _MEDIT
_SCREEN.autocenter = .T.
_SCREEN.icon = "icon\tct.ico"
_SCREEN.picture = "picture\sky.bmp"
_SCREEN.closable = .F.
_SCREEN.addobject('img_Tree',  ;
                 'Image')
_SCREEN.img_tree.top = 132
_SCREEN.img_tree.left = 288
_SCREEN.img_tree.height = 424
_SCREEN.img_tree.width = 490
_SCREEN.img_tree.backstyle = 0
_SCREEN.img_tree.picture = 'picture\bkg_main.bmp'
_SCREEN.addobject('lab_Demo',  ;
                 'Label')
_SCREEN.lab_demo.caption = '演示数据：2004年06月'
_SCREEN.lab_demo.autosize = .T.
_SCREEN.lab_demo.top = 38
_SCREEN.lab_demo.left = 204
_SCREEN.lab_demo.backstyle = 0
SET CLASSLIB TO Cmd
_SCREEN.addobject('lab_www',  ;
                 'Lab_WWW', 456,  ;
                 528)
_SCREEN.addobject('img_3ars',  ;
                 'Cmd_MainMenu',  ;
                 48, 36,  ;
                 '人力资源(M)')
_SCREEN.addobject('img_3akq',  ;
                 'Cmd_MainMenu',  ;
                 48, 89,  ;
                 '考勤分析(A)')
_SCREEN.addobject('img_3agz',  ;
                 'Cmd_MainMenu',  ;
                 48, 142,  ;
                 '薪资管理(S)')
_SCREEN.addobject('img_3aft',  ;
                 'Cmd_MainMenu',  ;
                 48, 195,  ;
                 '就餐管理(D)')
_SCREEN.addobject('img_tools',  ;
                 'Cmd_MainMenu',  ;
                 48, 301,  ;
                 '系统工具(T)')
_SCREEN.addobject('img_quit',  ;
                 'Cmd_MainMenu',  ;
                 48, 391,  ;
                 '退出系统(E)')
_SCREEN.img_tree.visible = .T.
_SCREEN.img_3ars.visible = .T.
_SCREEN.img_3akq.visible = .T.
_SCREEN.img_3agz.visible = .T.
_SCREEN.img_3aft.visible = .T.
_SCREEN.img_tools.visible = .T.
_SCREEN.img_quit.visible = .T.
IF pub_language
     _SCREEN.caption = getlanguage("t_RenShiKaoQin")
     _SCREEN.img_3ars.title.fontname =  ;
      "Comic Sans MS"
     _SCREEN.img_3ars.title.caption =  ;
      UPPER(getlanguage("m_RenLiZiYuan"))
     _SCREEN.img_3akq.title.fontname =  ;
      "Comic Sans MS"
     _SCREEN.img_3akq.title.caption =  ;
      UPPER(getlanguage("m_KaoQinFenXi"))
     _SCREEN.img_3agz.title.fontname =  ;
      "Comic Sans MS"
     _SCREEN.img_3agz.title.caption =  ;
      UPPER(getlanguage("m_XinZiGuanLi"))
     _SCREEN.img_3aft.title.fontname =  ;
      "Comic Sans MS"
     _SCREEN.img_3aft.title.caption =  ;
      UPPER(getlanguage("m_JiuCanGuanLi"))
     _SCREEN.img_tools.title.fontname =  ;
      "Comic Sans MS"
     _SCREEN.img_tools.title.caption =  ;
      UPPER(getlanguage("m_XiTongWeiHu"))
     _SCREEN.img_quit.title.fontname =  ;
      "Comic Sans MS"
     _SCREEN.img_quit.title.caption =  ;
      UPPER(getlanguage("m_ZhongZhi"))
ELSE
     _SCREEN.caption = "ANT2000人事考勤系统"
ENDIF
_SCREEN.windowstate = 2
ENDPROC
**
***
*** getvaliddate.fxp
***
*
**
FUNCTION GetValidDate
LPARAMETERS gvd_yy, gvd_mm,  ;
            gvd_dd
gvd_i = 1
gvd_date = CTOD(STR(gvd_yy, 4) +  ;
           '.' + STR(gvd_mm, 2) +  ;
           '.' + STR(gvd_dd, 2))
DO WHILE CTOD("")=gvd_date .AND.  ;
   gvd_i<5
     gvd_dd = gvd_dd - 1
     gvd_date = CTOD(STR(gvd_yy,  ;
                4) + '.' +  ;
                STR(gvd_mm, 2) +  ;
                '.' + STR(gvd_dd,  ;
                2))
     gvd_i = gvd_i + 1
ENDDO
IF gvd_i >= 5
     gvd_date = CTOD("")
ENDIF
RETURN gvd_date
ENDFUNC
**
***
*** getshift.fxp
***
*
**
FUNCTION GetShift
LPARAMETERS gs_sdate, gs_edate
FOR gs_i = 1 TO shiftmax
     shifttype(gs_i) = ""
     shiftbegin(gs_i) = CTOD("")
     shiftend(gs_i) = CTOD("")
     shiftattr(gs_i) = 0
ENDFOR
shiftcount = 0
v_ksbc = ALLTRIM(zg.ksbc)
DO WHILE .T.
     IF EMPTY(v_ksbc) .OR.  ;
        shiftcount >= shiftmax
          EXIT
     ENDIF
     shiftcount = shiftcount + 1
     mat1 = AT(",", v_ksbc)
     mbc = LEFT(v_ksbc, IIF(mat1 =  ;
           0, LEN(v_ksbc), mat1 -  ;
           1))
     mat2 = AT("(", mbc)
     shifttype(shiftcount) =  ;
              LEFT(mbc, IIF(mat2 =  ;
              0, LEN(mbc), mat2 -  ;
              1))
     mbc = RIGHT(mbc, LEN(mbc) -  ;
           mat2)
     mat3 = AT("-", mbc)
     IF mat3 = 0
          mat3 = AT(")", mbc)
          IF mat3 > 0
               mbc = LEFT(mbc,  ;
                     mat3 - 1)
          ENDIF
          IF CTOD(mbc) <>  ;
             CTOD("")
               shiftbegin(shiftcount) =  ;
                         CTOD(mbc)
               shiftend(shiftcount) =  ;
                       CTOD(mbc)
               shiftattr(shiftcount) =  ;
                        2
          ENDIF
     ELSE
          IF LEN(mbc) < 15
               mbc = LEFT(mbc,  ;
                     mat3 - 1)
               IF CTOD(mbc) <>  ;
                  CTOD("")
                    shiftbegin(shiftcount) =  ;
                              CTOD(mbc)
                    shiftattr(shiftcount) =  ;
                             1
               ENDIF
          ELSE
               mbc1 = LEFT(mbc,  ;
                      mat3 - 1)
               IF CTOD(mbc1) <>  ;
                  CTOD("")
                    mat4 = AT(")",  ;
                           mbc)
                    IF mat4 > 0
                         mbc2 = SUBSTR(mbc,  ;
                                mat3 +  ;
                                1,  ;
                                mat4 -  ;
                                mat3 -  ;
                                1)
                         IF CTOD(mbc2) <>  ;
                            CTOD("")
                              shiftbegin(shiftcount) =  ;
                               CTOD(mbc1)
                              shiftend(shiftcount) =  ;
                               CTOD(mbc2)
                              shiftattr(shiftcount) =  ;
                               2
                         ENDIF
                    ENDIF
               ENDIF
          ENDIF
     ENDIF
     IF mat1 > 0
          v_ksbc = SUBSTR(v_ksbc,  ;
                   mat1 + 1,  ;
                   254)
     ELSE
          v_ksbc = ""
     ENDIF
ENDDO
gs_i = 1
gs_normal = 0
DO WHILE gs_i<=shiftcount
     IF shiftbegin(gs_i) =  ;
        CTOD("")
          shiftbegin(gs_i) =  ;
                    gs_sdate
     ENDIF
     IF shiftend(gs_i) = CTOD("")
          shiftend(gs_i) =  ;
                  gs_edate
     ENDIF
     IF shiftattr(gs_i) = 0 .AND.  ;
        gs_normal = 0
          gs_normal = 1
          gs_i = gs_i + 1
     ELSE
          IF shiftattr(gs_i) = 0
               FOR gs_j = gs_i TO  ;
                   shiftcount -  ;
                   1
                    shifttype(gs_j) =  ;
                             shifttype(gs_j +  ;
                             1)
                    shiftbegin(gs_j) =  ;
                              shiftbegin(gs_j +  ;
                              1)
                    shiftend(gs_j) =  ;
                            shiftend(gs_j +  ;
                            1)
                    shiftattr(gs_j) =  ;
                             shiftattr(gs_j +  ;
                             1)
               ENDFOR
               shiftcount = shiftcount -  ;
                            1
          ELSE
               gs_i = gs_i + 1
          ENDIF
     ENDIF
ENDDO
FOR gs_i = 1 TO shiftcount - 1
     FOR gs_j = gs_i TO  ;
         shiftcount
          IF shiftattr(gs_j) >  ;
             shiftattr(gs_i)
               gs_shifttype = shifttype(gs_i)
               gs_shiftbegin = shiftbegin(gs_i)
               gs_shiftend = shiftend(gs_i)
               gs_shiftattr = shiftattr(gs_i)
               shifttype(gs_i) =  ;
                        shifttype(gs_j)
               shiftbegin(gs_i) =  ;
                         shiftbegin(gs_j)
               shiftend(gs_i) =  ;
                       shiftend(gs_j)
               shiftattr(gs_i) =  ;
                        shiftattr(gs_j)
               shifttype(gs_j) =  ;
                        gs_shifttype
               shiftbegin(gs_j) =  ;
                         gs_shiftbegin
               shiftend(gs_j) =  ;
                       gs_shiftend
               shiftattr(gs_j) =  ;
                        gs_shiftattr
          ENDIF
     ENDFOR
ENDFOR
RETURN shiftcount
ENDFUNC
**
***
*** 3akq036.fxp
***
*
DO prginit
SELECT pbb
SCAN
     obj_form4.txt_msg1.value = zgbh +  ;
                                ' ' +  ;
                                riqi
     SELECT clfx
     APPEND BLANK
     REPLACE zgbh WITH pbb.zgbh,  ;
             riqi WITH pbb.riqi,  ;
             bc WITH pbb.bc, lb  ;
             WITH time.lb, zdcl  ;
             WITH pbb.kqlb
     REPLACE sbsj WITH time.sbsj,  ;
             xbsj WITH time.xbsj
     DO CASE
          CASE pbb.kqlb >= 1  ;
               .AND. pbb.kqlb <=  ;
               30
               REPLACE qjss WITH  ;
                       sjcq, qjts  ;
                       WITH 1
          CASE pbb.kqlb >= 92  ;
               .AND. pbb.kqlb <=  ;
               94
               REPLACE jbss WITH  ;
                       time.ss,  ;
                       jbts WITH  ;
                       time.ts
          CASE pbb.kqlb = 98
               REPLACE cqss WITH  ;
                       time.ss,  ;
                       cqts WITH  ;
                       time.ts
     ENDCASE
     SELECT pbb
ENDSCAN
DO prgterm
RETURN
ENDPROC
**
PROCEDURE PrgInit
PUBLIC delta0
delta0 = getantenv("FXPARA",  ;
         "DELTA0")
IF pub_language
     obj_form4.txt_msg.value = "Be loading the datas,please wait a minute..."
ELSE
     obj_form4.txt_msg.value = "正在加载考勤关联资料，请等待..."
ENDIF
strsql = "SELECT * from kq_ZG WHERE " +  ;
         STRTRAN(str_bmbh, "@",  ;
         "BMBH") +  ;
         STRTRAN(pub_zgbh_filter,  ;
         "@", "kq_zg")
sqlexe_run(00000000054, SYS(16),  ;
          strsql, "zg")
SELECT zg
INDEX ON zgbh TO zg
ndate = DTOC(pub_kaishiriqi)
kdate = DTOC(pub_jieshuriqi)
strsql = "select distinct kq_xjjl_d.ID,kq_xjjl_d.ZGBH,kq_xjjl_d.RIQI,kq_xjjl_d.KQLB,kq_xjjl_d.BC,kq_xjjl_d.SS,kq_xjjl_d.TS,kq_xjjl_d.JBATTR,kq_xjjl_d.KSSJ,kq_xjjl_d.JSSJ"
strsql = strsql +  ;
         ",0 as mark from kq_xjjl_d,kq_zg where kq_xjjl_d.RIQI>=?ndate and kq_xjjl_d.RIQI<=?kdate"
strsql = strsql +  ;
         " and kq_xjjl_d.zgbh=kq_zg.zgbh and " +  ;
         STRTRAN(str_bmbh, "@",  ;
         "kq_zg.BMBH")
strsql = strsql +  ;
         STRTRAN(pub_zgbh_filter,  ;
         "@", "kq_xjjl_d")
sqlexe_run(00000000066, SYS(16),  ;
          strsql, "xjjl_d")
SELECT xjjl_d
INDEX ON zgbh + riqi TAG xjjl_d
sqlexe_run(00000000070, SYS(16),  ;
          "select * from kq_time",  ;
          "time")
SELECT time
INDEX ON bc TO time
SELECT pbb
SET RELATION TO bc INTO time
GOTO TOP
SET ESCAPE ON
ON ESCAPE DO P_ESC		
IF pub_language
     obj_form4.txt_msg.value = "Be processing the time records,please wait a minute..."
ELSE
     obj_form4.txt_msg.value = "正在处理考勤排班数据，请等待..."
ENDIF
RETURN
ENDPROC
**
PROCEDURE PrgTerm
SET ESCAPE OFF
SET EXACT OFF
RETURN
ENDPROC
**
***
*** 3akq037.fxp
***
*
DO prginit
IF  .NOT. pub_escape
     DO fenxi1
     DO fenxi2
     DO fenxi3
     mserver = getantenv("SERVER",  ;
               "ANT2000")
     mp = mserver +  ;
          "function\kqfx_add.fxp"
     IF FILE(mp)
          do &mp
     ENDIF
ENDIF
DO prgterm
RETURN
ENDPROC
**
PROCEDURE prginit
IF pub_language
     obj_form4.txt_msg.value = "Be analysing for attendance,please wait a minute..."
ELSE
     obj_form4.txt_msg.value = "正在进行综合分析，请等待..."
ENDIF
pub_escape = .F.
sqlexe_run(00000000041, SYS(16),  ;
          "select * from kq_xjjl_s",  ;
          "xjjl_s")
sqlexe_run(00000000043, SYS(16),  ;
          "select * from kq_xjjl_j",  ;
          "xjjl_j")
SELECT xjjl_j
INDEX ON STR(mm, 2) + STR(dd, 2)  ;
      TO xjjl_j
SELECT xjjl_d
SET FILTER TO
INDEX ON zgbh + riqi TO xjjl_d
SELECT clfx
INDEX ON zgbh + riqi TO clfx
SET RELATION TO bc INTO time
GOTO TOP
SET ESCAPE ON
SET EXACT ON
ON ESCAPE DO P_ESC
RETURN
ENDPROC
**
PROCEDURE prgterm
RELEASE delta0
SET ESCAPE OFF
SET EXACT OFF
RETURN
ENDPROC
**
PROCEDURE fenxi1
SET EXACT OFF
SELECT zg
SCAN FOR  .NOT. pub_escape
     IF pub_language
          obj_form4.txt_msg1.value =  ;
           "The first scanning..." +  ;
           zgbh
     ELSE
          obj_form4.txt_msg1.value =  ;
           "第一趟扫描..." +  ;
           zgbh
     ENDIF
     i = pub_kaishiriqi
     j = .T.
     SELECT clfx
     SEEK zg.zgbh 
     DO WHILE i<=pub_jieshuriqi  ;
        .AND.  .NOT. pub_escape
          IF pub_language
               obj_form4.txt_msg1.value =  ;
                "The first scanning..." +  ;
                zgbh
          ELSE
               obj_form4.txt_msg1.value =  ;
                "第一趟扫描..." +  ;
                zgbh
          ENDIF
          IF (EOF() .OR. zgbh <>  ;
             zg.zgbh .OR.  ;
             CTOD(riqi) <> i)  ;
             .AND. i >=  ;
             CTOD(zg.jzsj) .AND.  ;
             (i < CTOD(zg.lzsj)  ;
             .OR. CTOD(zg.lzsj) =  ;
             CTOD(""))
               APPEND BLANK
               REPLACE zgbh WITH  ;
                       zg.zgbh,  ;
                       riqi WITH  ;
                       DTOC(i),  ;
                       zdcl WITH  ;
                       51
          ENDIF
          IF CTOD(riqi) <= i
               mdate = CTOD(riqi)
               DO WHILE  .NOT.  ;
                  EOF() .AND.  ;
                  zgbh=zg.zgbh  ;
                  .AND. mdate= ;
                  CTOD(riqi)  ;
                  .AND.  .NOT.  ;
                  pub_escape
                    SKIP
               ENDDO
               IF  .NOT. EOF()  ;
                   .AND. zgbh <>  ;
                   zg.zgbh
                    SKIP -1
               ENDIF
          ENDIF
          i = i + 1
     ENDDO
     SELECT zg
ENDSCAN
SET EXACT ON
RETURN
ENDPROC
**
PROCEDURE fenxi2
SELECT clfx
mzgbh = ""
mdate = CTOD("")
SCAN FOR  .NOT. pub_escape
     IF pub_language
          obj_form4.txt_msg1.value =  ;
           "The third scanning..." +  ;
           zgbh
     ELSE
          obj_form4.txt_msg1.value =  ;
           "第二趟扫描..." + zgbh +  ;
           " " + riqi
     ENDIF
     IF mark > 0
          LOOP
     ENDIF
     mzgbh = zgbh
     mdate = CTOD(riqi)
     mkqlb = IIF(rgcl > 0, rgcl,  ;
             zdcl)
     SELECT xjjl_d
     SET EXACT OFF
     SEEK clfx.zgbh + clfx.riqi 
     SET EXACT ON
     DO WHILE  .NOT. EOF() .AND.  ;
        zgbh=clfx.zgbh .AND. riqi= ;
        clfx.riqi .AND.  .NOT.  ;
        pub_escape
          IF mark > 0
               SKIP
               LOOP
          ENDIF
          REPLACE mark WITH 1
          msw = .T.
          DO CASE
               CASE kqlb > 0  ;
                    .AND. kqlb <  ;
                    31
                    mflag = .F.
                    IF clfx.qjss >  ;
                       0 .AND.  ;
                       clfx.zdcl <>  ;
                       kqlb .AND.  ;
                       clfx.rgcl <>  ;
                       kqlb .AND.  ;
                       clfx.zdcl <>  ;
                       1 .AND.  ;
                       clfx.zdcl <>  ;
                       15
                         SELECT clfx
                         mflag = .T.
                         APPEND BLANK
                         REPLACE zgbh  ;
                                 WITH  ;
                                 mzgbh,  ;
                                 riqi  ;
                                 WITH  ;
                                 DTOC(mdate),  ;
                                 mark  ;
                                 WITH  ;
                                 1
                         SELECT xjjl_d
                    ENDIF
                    IF clfx.zdcl <>  ;
                       1 .AND.  ;
                       clfx.zdcl <>  ;
                       15
                         REPLACE clfx.qjss  ;
                                 WITH  ;
                                 clfx.qjss +  ;
                                 ss,  ;
                                 clfx.qjts  ;
                                 WITH  ;
                                 clfx.qjts +  ;
                                 ts
                    ELSE
                         REPLACE clfx.qjss  ;
                                 WITH  ;
                                 ss,  ;
                                 clfx.qjts  ;
                                 WITH  ;
                                 ts
                    ENDIF
                    IF mflag .OR.  ;
                       clfx.cqss >  ;
                       0
                         REPLACE clfx.cqss  ;
                                 WITH  ;
                                 clfx.cqss -  ;
                                 ss,  ;
                                 clfx.cqts  ;
                                 WITH  ;
                                 clfx.cqts -  ;
                                 ts
                    ENDIF
                    IF clfx.cqss =  ;
                       0 .OR.  ;
                       clfx.cqts =  ;
                       0
                         REPLACE clfx.cqss  ;
                                 WITH  ;
                                 0,  ;
                                 clfx.cqts  ;
                                 WITH  ;
                                 0
                    ENDIF
                    IF EMPTY(bc)  ;
                       .AND.  ;
                       EMPTY(clfx.bc)
                         REPLACE clfx.bc  ;
                                 WITH  ;
                                 bc
                         SELECT time
                         SEEK clfx.bc 
                         SELECT xjjl_d
                         REPLACE clfx.lb  ;
                                 WITH  ;
                                 time.lb
                    ENDIF
               CASE kqlb = 92
                    IF  .NOT.  ;
                        EMPTY(clfx.bc)  ;
                        .AND.   ;
                        .NOT.  ;
                        EMPTY(bc)  ;
                        .AND.  ;
                        clfx.bc <>  ;
                        bc
                         SELECT clfx
                         APPEND BLANK
                         REPLACE zgbh  ;
                                 WITH  ;
                                 mzgbh,  ;
                                 riqi  ;
                                 WITH  ;
                                 DTOC(mdate),  ;
                                 mark  ;
                                 WITH  ;
                                 1
                         SELECT xjjl_d
                    ENDIF
                    IF clfx.sbsj =  ;
                       0 .AND.  ;
                       clfx.xbsj =  ;
                       0
                         REPLACE clfx.sbsj  ;
                                 WITH  ;
                                 kssj,  ;
                                 clfx.xbsj  ;
                                 WITH  ;
                                 jssj
                    ENDIF
                    REPLACE clfx.jbss  ;
                            WITH  ;
                            clfx.jbss +  ;
                            ss,  ;
                            clfx.jbts  ;
                            WITH  ;
                            clfx.jbts +  ;
                            ts
                    REPLACE clfx.jbattr  ;
                            WITH  ;
                            jbattr
                    IF  .NOT.  ;
                        EMPTY(bc)  ;
                        .AND.  ;
                        EMPTY(clfx.bc)
                         REPLACE clfx.bc  ;
                                 WITH  ;
                                 bc
                         SELECT time
                         SEEK clfx.bc 
                         SELECT xjjl_d
                         REPLACE clfx.lb  ;
                                 WITH  ;
                                 time.lb
                         IF clfx.sbsj =  ;
                            0  ;
                            .AND.  ;
                            clfx.xbsj =  ;
                            0
                              REPLACE  ;
                               clfx.sbsj  ;
                               WITH  ;
                               time.sbsj,  ;
                               clfx.xbsj  ;
                               WITH  ;
                               time.xbsj
                         ENDIF
                    ENDIF
                    IF clfx.zdcl =  ;
                       1 .OR.  ;
                       clfx.zdcl =  ;
                       15
                         REPLACE clfx.zdcl  ;
                                 WITH  ;
                                 0
                         REPLACE clfx.qjss  ;
                                 WITH  ;
                                 0,  ;
                                 clfx.qjts  ;
                                 WITH  ;
                                 0
                    ENDIF
                    IF clfx.rgcl =  ;
                       1 .OR.  ;
                       clfx.rgcl =  ;
                       15
                         REPLACE clfx.rgcl  ;
                                 WITH  ;
                                 0
                         REPLACE clfx.qjss  ;
                                 WITH  ;
                                 0,  ;
                                 clfx.qjts  ;
                                 WITH  ;
                                 0
                    ENDIF
               CASE kqlb >= 93  ;
                    .AND. kqlb <=  ;
                    94
                    IF clfx.jbss >  ;
                       0 .AND.  ;
                       (kqlb <>  ;
                       IIF(clfx.rgcl >  ;
                       0,  ;
                       clfx.rgcl,  ;
                       clfx.zdcl)  ;
                       .OR.  ;
                       (clfx.bc <>  ;
                       bc .AND.   ;
                       .NOT.  ;
                       EMPTY(clfx.bc)  ;
                       .AND.   ;
                       .NOT.  ;
                       EMPTY(bc)))
                         SELECT clfx
                         APPEND BLANK
                         REPLACE zgbh  ;
                                 WITH  ;
                                 mzgbh,  ;
                                 riqi  ;
                                 WITH  ;
                                 DTOC(mdate),  ;
                                 mark  ;
                                 WITH  ;
                                 1
                         SELECT xjjl_d
                    ENDIF
                    IF clfx.sbsj =  ;
                       0 .AND.  ;
                       clfx.xbsj =  ;
                       0
                         REPLACE clfx.sbsj  ;
                                 WITH  ;
                                 kssj,  ;
                                 clfx.xbsj  ;
                                 WITH  ;
                                 jssj
                    ENDIF
                    IF  .NOT.  ;
                        EMPTY(bc)  ;
                        .AND.  ;
                        EMPTY(clfx.bc)
                         REPLACE clfx.bc  ;
                                 WITH  ;
                                 bc
                         SELECT time
                         SEEK clfx.bc 
                         SELECT xjjl_d
                         REPLACE clfx.lb  ;
                                 WITH  ;
                                 time.lb
                         IF clfx.sbsj =  ;
                            0  ;
                            .AND.  ;
                            clfx.xbsj =  ;
                            0
                              REPLACE  ;
                               clfx.sbsj  ;
                               WITH  ;
                               time.sbsj,  ;
                               clfx.xbsj  ;
                               WITH  ;
                               time.xbsj
                         ENDIF
                    ENDIF
                    REPLACE clfx.cqss  ;
                            WITH  ;
                            0,  ;
                            clfx.cqts  ;
                            WITH  ;
                            0
                    REPLACE clfx.jbss  ;
                            WITH  ;
                            clfx.jbss +  ;
                            ss,  ;
                            clfx.jbts  ;
                            WITH  ;
                            clfx.jbts +  ;
                            ts,  ;
                            clfx.kgss  ;
                            WITH  ;
                            0,  ;
                            clfx.kgts  ;
                            WITH  ;
                            0
                    REPLACE clfx.jbattr  ;
                            WITH  ;
                            jbattr
                    IF clfx.zdcl =  ;
                       1 .OR.  ;
                       clfx.zdcl =  ;
                       15
                         REPLACE clfx.zdcl  ;
                                 WITH  ;
                                 0
                         REPLACE clfx.qjss  ;
                                 WITH  ;
                                 0,  ;
                                 clfx.qjts  ;
                                 WITH  ;
                                 0
                    ENDIF
                    IF clfx.rgcl =  ;
                       1 .OR.  ;
                       clfx.rgcl =  ;
                       15
                         REPLACE clfx.rgcl  ;
                                 WITH  ;
                                 0
                         REPLACE clfx.qjss  ;
                                 WITH  ;
                                 0,  ;
                                 clfx.qjts  ;
                                 WITH  ;
                                 0
                    ENDIF
               CASE kqlb = 80
                    REPLACE clfx.cdss  ;
                            WITH  ;
                            clfx.cdss +  ;
                            ss
               CASE kqlb = 81  ;
                    .OR. kqlb =  ;
                    82
                    REPLACE clfx.ztss  ;
                            WITH  ;
                            clfx.ztss +  ;
                            ss
               CASE kqlb = 85
                    REPLACE clfx.kgss  ;
                            WITH  ;
                            ss,  ;
                            clfx.kgts  ;
                            WITH  ;
                            ts
                    REPLACE clfx.cqss  ;
                            WITH  ;
                            0,  ;
                            clfx.cqts  ;
                            WITH  ;
                            0,  ;
                            clfx.cdss  ;
                            WITH  ;
                            0,  ;
                            clfx.ztss  ;
                            WITH  ;
                            0,  ;
                            clfx.jbss  ;
                            WITH  ;
                            0,  ;
                            clfx.jbts  ;
                            WITH  ;
                            0,  ;
                            clfx.qjss  ;
                            WITH  ;
                            0,  ;
                            clfx.qjts  ;
                            WITH  ;
                            0
               CASE kqlb = 97
                    SELECT clfx
                    APPEND BLANK
                    REPLACE zgbh  ;
                            WITH  ;
                            mzgbh,  ;
                            riqi  ;
                            WITH  ;
                            DTOC(mdate),  ;
                            mark  ;
                            WITH  ;
                            1
                    REPLACE sbsk  ;
                            WITH  ;
                            xjjl_d.kssj,  ;
                            xbsk  ;
                            WITH  ;
                            xjjl_d.jssj
                    REPLACE cqss  ;
                            WITH  ;
                            xjjl_d.ss,  ;
                            cqts  ;
                            WITH  ;
                            xjjl_d.ts,  ;
                            rgcl  ;
                            WITH  ;
                            97
                    IF  .NOT.  ;
                        EMPTY(xjjl_d.bc)
                         REPLACE bc  ;
                                 WITH  ;
                                 xjjl_d.bc
                         SELECT time
                         SEEK xjjl_d.bc 
                         REPLACE clfx.lb  ;
                                 WITH  ;
                                 time.lb,  ;
                                 clfx.sbsj  ;
                                 WITH  ;
                                 sbsj,  ;
                                 clfx.xbsj  ;
                                 WITH  ;
                                 xbsj
                    ENDIF
                    SELECT xjjl_d
               CASE kqlb = 98
                    REPLACE clfx.cqss  ;
                            WITH  ;
                            ss,  ;
                            clfx.cqts  ;
                            WITH  ;
                            ts
                    IF  .NOT.  ;
                        EMPTY(bc)  ;
                        .AND.  ;
                        EMPTY(clfx.bc)
                         REPLACE clfx.bc  ;
                                 WITH  ;
                                 bc
                         SELECT time
                         SEEK clfx.bc 
                         REPLACE clfx.lb  ;
                                 WITH  ;
                                 time.lb
                         SELECT xjjl_d
                    ENDIF
               OTHERWISE
                    REPLACE mark  ;
                            WITH  ;
                            0
                    msw = .F.
          ENDCASE
          IF clfx.rgcl <> kqlb  ;
             .AND. msw
               IF clfx.rgcl > 0
                    REPLACE clfx.zdcl  ;
                            WITH  ;
                            clfx.rgcl
               ENDIF
               REPLACE clfx.rgcl  ;
                       WITH kqlb
          ENDIF
          SKIP
     ENDDO
     SELECT clfx
ENDSCAN
RETURN
ENDPROC
**
PROCEDURE fenxi3
SELECT clfx
SET RELATION TO bc INTO time
SET RELATION ADDITIVE TO zgbh INTO zg
GOTO TOP
SCAN FOR  .NOT. pub_escape
     IF pub_language
          obj_form4.txt_msg1.value =  ;
           "The second scanning..." +  ;
           zgbh
     ELSE
          obj_form4.txt_msg1.value =  ;
           "第三趟扫描..." + zgbh +  ;
           " " + riqi
     ENDIF
     IF zdcl > 0 .OR. rgcl > 0
          LOOP
     ENDIF
     SELECT xjjl_j
     SEEK STR(MONTH(CTOD(clfx.riqi)),  ;
          2) +  ;
          STR(DAY(CTOD(clfx.riqi)),  ;
          2) 
     IF FOUND()
          REPLACE clfx.zdcl WITH  ;
                  15, clfx.qjss  ;
                  WITH sjcq,  ;
                  clfx.qjts WITH  ;
                  1
          SELECT clfx
          LOOP
     ENDIF
     SELECT clfx
ENDSCAN
RETURN
ENDPROC
**
***
*** 3akq038.fxp
***
*
DO prginit
DO preprocess
IF pub_language
     obj_form4.txt_msg.value = "Be processing the time records,please wait a minute..."
ELSE
     obj_form4.txt_msg.value = "正在处理考勤刷卡数据，请等待..."
ENDIF
SELECT clfx
INDEX ON zgbh + riqi + STR(sbsj,  ;
      4) TAG zgbh_d_t
SCAN
     obj_form4.txt_msg1.value = zgbh +  ;
                                ' ' +  ;
                                riqi
     IF clfx.mark = 1
          LOOP
     ENDIF
     DO getbctab
     DO getsktab
     IF sktabcnt > 0
          DO skproc
          DO setmark
     ELSE
          SELECT clfx
          IF rgcl = 0 .AND. zdcl =  ;
             98
               REPLACE zdcl WITH  ;
                       0, cqss  ;
                       WITH 0,  ;
                       cqts WITH  ;
                       0, cdss  ;
                       WITH 0,  ;
                       ztss WITH  ;
                       0
          ENDIF
     ENDIF
     IF pub_escape
          EXIT
     ENDIF
     SELECT clfx
ENDSCAN
DO savecl2
DO jjrjb
DO fenxi7
mserver = getantenv("SERVER",  ;
          "ANT2000")
mp = mserver +  ;
     "function\kqfx_add.fxp"
IF FILE(mp)
     do &mp
ENDIF
DO prgterm
RETURN
ENDPROC
**
PROCEDURE PrgInit
PUBLIC njbflag
njbflag = getantenv("FXPARA",  ;
          "NJBFLAG")
IF pub_language
     obj_form4.txt_msg.value = "Be loading the datas,please wait a minute..."
ELSE
     obj_form4.txt_msg.value = "正在加载考勤关联资料，请等待..."
ENDIF
PUBLIC sktabbou, sktabcnt,  ;
       sktabptrs, sktabptrx, itwo,  ;
       bctabbou, bctabcnt,  ;
       bctabsel, currentbc
sktabbou = 10
bctabbou = 30
currentbc = '@@@'
PUBLIC bctabbh(bctabbou),  ;
       bctablb(bctabbou),  ;
       bctabsb(bctabbou),  ;
       bctabxb(bctabbou),  ;
       bctabss(bctabbou),  ;
       bctabts(bctabbou)
PUBLIC sktab(sktabbou),  ;
       bztab(sktabbou)
PUBLIC delta0, delta2, delta3,  ;
       delta4, delta8, delta9,  ;
       delta9max, wtsb1, wtxb1,  ;
       wtsb2, wtxb2
pub_escape = .F.
delta0 = getantenv("FXPARA",  ;
         "DELTA0")
delta2 = getantenv("FXPARA",  ;
         "DELTA2")
delta3 = getantenv("FXPARA",  ;
         "DELTA3")
delta4 = getantenv("FXPARA",  ;
         "DELTA4")
wtsb1 = getantenv("FXPARA",  ;
        "WTSB1")
wtxb1 = getantenv("FXPARA",  ;
        "WTXB1")
wtsb2 = getantenv("FXPARA",  ;
        "WTSB2")
wtxb2 = getantenv("FXPARA",  ;
        "WTXB2")
delta8 = 120
delta9 = 0.3 
delta9max = 120
SET EXACT OFF
SET ESCAPE ON
ON ESCAPE DO P_ESC		
RETURN
ENDPROC
**
PROCEDURE PreProcess
IF pub_language
     obj_form4.txt_msg.value = "Be preprocessing the datas..."
ELSE
     obj_form4.txt_msg.value = "正在预处理刷卡数据..."
ENDIF
SELECT ardata_
INDEX ON zgbh + riqi +  ;
      STR(shijian, 4) TAG  ;
      zgbh_d_t
GOTO TOP
mz = zgbh
md = CTOD(riqi)
mt = shijian
SKIP
DO WHILE  .NOT. EOF()
     IF mz <> zgbh .OR. md <>  ;
        CTOD(riqi) .OR. ABS(mt -  ;
        shijian) > sjcfsj
          IF mz = zgbh .AND. md =  ;
             CTOD(riqi) - 1 .AND.  ;
             ABS(1440 + shijian -  ;
             mt) <= sjcfsj
               sqlexe_run((00000000132),  ;
                         SYS(16),  ;
                         "DELETE FROM KQ_ARDATA WHERE ID=?ID",  ;
                         "")
               DELETE
          ELSE
               mz = zgbh
               md = CTOD(riqi)
               mt = shijian
          ENDIF
     ELSE
          sqlexe_run((00000000140),  ;
                    SYS(16),  ;
                    "DELETE FROM KQ_ARDATA WHERE ID=?ID",  ;
                    "")
          DELETE
     ENDIF
     SKIP
ENDDO
SELECT xjjl_d
SET FILTER TO kqlb = 75;
.OR. kqlb = 76;
.OR. kqlb = 41
SCAN
     SELECT ardata_
     DO CASE
          CASE xjjl_d.kqlb = 75
               REPLACE xjjl_d.mark  ;
                       WITH 1
               APPEND BLANK
               IF xjjl_d.kssj >  ;
                  1440
                    REPLACE zgbh  ;
                            WITH  ;
                            xjjl_d.zgbh,  ;
                            riqi  ;
                            WITH  ;
                            DTOC(CTOD(xjjl_d.riqi) +  ;
                            1),  ;
                            shijian  ;
                            WITH  ;
                            xjjl_d.kssj -  ;
                            1440
               ELSE
                    REPLACE zgbh  ;
                            WITH  ;
                            xjjl_d.zgbh,  ;
                            riqi  ;
                            WITH  ;
                            xjjl_d.riqi,  ;
                            shijian  ;
                            WITH  ;
                            xjjl_d.kssj
               ENDIF
               APPEND BLANK
               IF xjjl_d.jssj <  ;
                  xjjl_d.kssj
                    REPLACE zgbh  ;
                            WITH  ;
                            xjjl_d.zgbh,  ;
                            riqi  ;
                            WITH  ;
                            DTOC(CTOD(xjjl_d.riqi) +  ;
                            1),  ;
                            shijian  ;
                            WITH  ;
                            xjjl_d.jssj
               ELSE
                    IF xjjl_d.jssj >  ;
                       1440
                         REPLACE zgbh  ;
                                 WITH  ;
                                 xjjl_d.zgbh,  ;
                                 riqi  ;
                                 WITH  ;
                                 DTOC(CTOD(xjjl_d.riqi) +  ;
                                 1),  ;
                                 shijian  ;
                                 WITH  ;
                                 xjjl_d.jssj -  ;
                                 1440
                    ELSE
                         REPLACE zgbh  ;
                                 WITH  ;
                                 xjjl_d.zgbh,  ;
                                 riqi  ;
                                 WITH  ;
                                 xjjl_d.riqi,  ;
                                 shijian  ;
                                 WITH  ;
                                 xjjl_d.jssj
                    ENDIF
               ENDIF
          CASE xjjl_d.kqlb = 76
               REPLACE xjjl_d.mark  ;
                       WITH 1
               APPEND BLANK
               IF xjjl_d.kssj >  ;
                  1440
                    REPLACE zgbh  ;
                            WITH  ;
                            xjjl_d.zgbh,  ;
                            riqi  ;
                            WITH  ;
                            DTOC(CTOD(xjjl_d.riqi) +  ;
                            1),  ;
                            shijian  ;
                            WITH  ;
                            xjjl_d.kssj -  ;
                            1440
               ELSE
                    REPLACE zgbh  ;
                            WITH  ;
                            xjjl_d.zgbh,  ;
                            riqi  ;
                            WITH  ;
                            xjjl_d.riqi,  ;
                            shijian  ;
                            WITH  ;
                            xjjl_d.kssj
               ENDIF
          CASE xjjl_d.kqlb = 41
               REPLACE xjjl_d.mark  ;
                       WITH 1
               SEEK xjjl_d.zgbh +  ;
                    xjjl_d.riqi 
               mkssj = xjjl_d.kssj
               mjssj = IIF(xjjl_d.kssj >  ;
                       xjjl_d.jssj,  ;
                       1440 +  ;
                       xjjl_d.jssj,  ;
                       xjjl_d.jssj)
               DO WHILE  .NOT.  ;
                  EOF() .AND.  ;
                  xjjl_d.zgbh= ;
                  zgbh .AND.  ;
                  xjjl_d.riqi= ;
                  riqi
                    IF xjjl_d.kssj =  ;
                       0 .AND.  ;
                       xjjl_d.jssj =  ;
                       0
                         DELETE
                    ELSE
                         IF shijian >=  ;
                            mkssj  ;
                            .AND.  ;
                            shijian <=  ;
                            mjssj
                              DELETE
                         ENDIF
                    ENDIF
                    SKIP
               ENDDO
               IF mjssj >= 1440
                    DO WHILE   ;
                       .NOT.  ;
                       EOF()  ;
                       .AND.  ;
                       xjjl_d.zgbh= ;
                       zgbh .AND.  ;
                       CTOD(xjjl_d.riqi)+ ;
                       1= ;
                       CTOD(riqi)
                         IF shijian >=  ;
                            0  ;
                            .AND.  ;
                            shijian <=  ;
                            mjssj -  ;
                            1440
                              DELETE
                         ENDIF
                         SKIP
                    ENDDO
               ENDIF
     ENDCASE
     SELECT xjjl_d
ENDSCAN
SELECT xjjl_d
SET FILTER TO
SELECT ardata_
SET FILTER TO mark < 8
SET RELATION TO zgbh INTO zg
SCAN
     IF CTOD(zg.jzsj) <> CTOD("")
          IF CTOD(riqi) <  ;
             CTOD(zg.jzsj) - 1
               DELETE
          ENDIF
     ENDIF
     IF CTOD(zg.lzsj) <> CTOD("")
          IF CTOD(riqi) >  ;
             CTOD(zg.lzsj) + 1
               DELETE
          ENDIF
     ENDIF
ENDSCAN
RETURN
ENDPROC
**
PROCEDURE GetSkTab
itwo = 0
sktabcnt = 0
SELECT ardata_
SEEK clfx.zgbh + clfx.riqi 
DO WHILE sktabcnt<sktabbou .AND.   ;
   .NOT. EOF() .AND. clfx.zgbh= ;
   zgbh .AND. clfx.riqi=riqi
     IF mark > 0
          SKIP
          LOOP
     ENDIF
     sktabcnt = sktabcnt + 1
     sktab(sktabcnt) = shijian
     bztab(sktabcnt) = 9
     SKIP
ENDDO
DO WHILE sktabcnt<sktabbou .AND.   ;
   .NOT. EOF() .AND. clfx.zgbh= ;
   zgbh .AND. CTOD(clfx.riqi)= ;
   CTOD(riqi)-1
     sktabcnt = sktabcnt + 1
     IF itwo = 0 .AND. shijian >  ;
        delta0
          itwo = sktabcnt
     ENDIF
     sktab(sktabcnt) = shijian +  ;
          1440
     bztab(sktabcnt) = 9
     SKIP
ENDDO
IF itwo = 1
     sktabcnt = 0
ENDIF
RETURN
ENDPROC
**
PROCEDURE SkProc
SELECT clfx
IF  .NOT. EMPTY(clfx.bc) .OR.  ;
    (clfx.sbsj > 0 .AND.  ;
    clfx.xbsj > 0)
     IF clfx.zdcl > 90 .OR.  ;
        (clfx.zdcl = 0 .AND.  ;
        clfx.rgcl > 90)
          msbsj = clfx.sbsj
          mxbsj = IIF(clfx.xbsj <=  ;
                  clfx.sbsj, 1440 +  ;
                  clfx.xbsj,  ;
                  clfx.xbsj)
          sktabptrs = 1
          FOR i = 2 TO sktabcnt
               DO CASE
                    CASE sktab(sktabptrs) <=  ;
                         msbsj  ;
                         .AND.  ;
                         sktab(i) <=  ;
                         msbsj  ;
                         .AND. i <  ;
                         itwo
                         sktabptrs =  ;
                          i
                    CASE sktab(sktabptrs) <=  ;
                         msbsj  ;
                         .AND.  ;
                         sktab(i) >=  ;
                         msbsj  ;
                         .AND.  ;
                         sktab(i) <  ;
                         mxbsj  ;
                         .AND. i <  ;
                         itwo
                         IF msbsj -  ;
                            sktab(sktabptrs) >  ;
                            sktab(i) -  ;
                            msbsj
                              sktabptrs =  ;
                               i
                         ENDIF
                    OTHERWISE
               ENDCASE
          ENDFOR
          sktabptrx = sktabcnt
          FOR i = sktabcnt - 1 TO  ;
              sktabptrs + 1 STEP - ;
              1
               DO CASE
                    CASE sktab(i) >=  ;
                         mxbsj  ;
                         .AND.  ;
                         sktab(sktabptrx) >=  ;
                         mxbsj
                         sktabptrx =  ;
                          i
                    CASE sktab(i) <=  ;
                         mxbsj  ;
                         .AND.  ;
                         sktab(sktabptrx) >=  ;
                         mxbsj
                         IF sktab(sktabptrx) -  ;
                            mxbsj >  ;
                            mxbsj -  ;
                            sktab(i)
                              sktabptrx =  ;
                               i
                         ENDIF
                    OTHERWISE
               ENDCASE
          ENDFOR
          IF sbsj > 0 .AND. xbsj >  ;
             0
               mzgbh = zgbh
               mriqi = riqi
               mrec = RECNO()
               msbsj = sbsj
               mxbsj = IIF(xbsj <  ;
                       sbsj, 1440 +  ;
                       xbsj,  ;
                       xbsj)
               IF msbsj -  ;
                  sktab(sktabptrs) >  ;
                  240
                    DO WHILE   ;
                       .NOT.  ;
                       BOF()  ;
                       .AND.  ;
                       mzgbh=zgbh  ;
                       .AND.  ;
                       mriqi= ;
                       riqi
                         SKIP -1
                         IF  .NOT.  ;
                             BOF()  ;
                             .AND.  ;
                             mzgbh =  ;
                             zgbh  ;
                             .AND.  ;
                             mriqi =  ;
                             riqi  ;
                             .AND.  ;
                             rgcl =  ;
                             97
                              sktab(sktabptrs) =  ;
                               msbsj
                              EXIT
                         ENDIF
                    ENDDO
                    GOTO mrec
               ELSE
                    IF sktab(sktabptrx) -  ;
                       mxbsj >  ;
                       240
                         DO WHILE   ;
                            .NOT.  ;
                            EOF()  ;
                            .AND.  ;
                            mzgbh= ;
                            zgbh  ;
                            .AND.  ;
                            mriqi= ;
                            riqi
                              SKIP
                              IF   ;
                               .NOT.  ;
                               EOF()  ;
                               .AND.  ;
                               mzgbh =  ;
                               zgbh  ;
                               .AND.  ;
                               mriqi =  ;
                               riqi  ;
                               .AND.  ;
                               rgcl =  ;
                               97
                                   sktab(sktabptrx) = mxbsj
                                   EXIT
                              ENDIF
                         ENDDO
                         GOTO mrec
                    ENDIF
               ENDIF
          ENDIF
          IF itwo > 0 .AND.  ;
             sktabptrs < itwo  ;
             .AND. sktabptrx >=  ;
             itwo
               msbsj = clfx.sbsj
               mxbsj = IIF(msbsj >  ;
                       clfx.xbsj,  ;
                       1440 +  ;
                       clfx.xbsj,  ;
                       clfx.xbsj)
               DO CASE
                    CASE (sktab(sktabptrs) <=  ;
                         msbsj  ;
                         .AND.  ;
                         sktab(sktabptrx) <=  ;
                         msbsj)  ;
                         .OR.  ;
                         (sktab(sktabptrs) >=  ;
                         mxbsj  ;
                         .AND.  ;
                         sktab(sktabptrx) >=  ;
                         mxbsj)
                         mdup = 0
                    CASE sktab(sktabptrs) >  ;
                         msbsj  ;
                         .AND.  ;
                         sktab(sktabptrs) <  ;
                         mxbsj  ;
                         .AND.  ;
                         sktab(sktabptrx) >=  ;
                         mxbsj
                         IF clfx.qjss >  ;
                            0
                              mdup =  ;
                               (mxbsj -  ;
                               sktab(sktabptrs) +  ;
                               clfx.qjss) /  ;
                               (mxbsj -  ;
                               msbsj)
                         ELSE
                              mdup =  ;
                               (mxbsj -  ;
                               sktab(sktabptrs)) /  ;
                               (mxbsj -  ;
                               msbsj)
                         ENDIF
                    CASE sktab(sktabptrs) <=  ;
                         msbsj  ;
                         .AND.  ;
                         sktab(sktabptrx) >  ;
                         msbsj  ;
                         .AND.  ;
                         sktab(sktabptrx) <  ;
                         mxbsj
                         IF clfx.qjss >  ;
                            0
                              mdup =  ;
                               (sktab(sktabptrx) +  ;
                               clfx.qjss -  ;
                               msbsj) /  ;
                               (mxbsj -  ;
                               msbsj)
                         ELSE
                              mdup =  ;
                               (sktab(sktabptrx) -  ;
                               msbsj) /  ;
                               (mxbsj -  ;
                               msbsj)
                         ENDIF
                    OTHERWISE
                         IF (clfx.zdcl =  ;
                            92  ;
                            .OR.  ;
                            clfx.rgcl =  ;
                            92)  ;
                            .AND.  ;
                            (sktab(sktabptrx) -  ;
                            sktab(sktabptrs) -  ;
                            clfx.jbss) >  ;
                            clfx.cqss *  ;
                            2
                              mdup =  ;
                               0
                         ELSE
                              DO CASE
                                   CASE sktab(sktabptrs) > msbsj .AND. sktab(sktabptrs) < mxbsj .AND. sktab(sktabptrx) > msbsj .AND. sktab(sktabptrx) < mxbsj
                                        mdup = (sktab(sktabptrx) - sktab(sktabptrs)) / (mxbsj - msbsj)
                                   CASE sktab(sktabptrs) < msbsj .AND. sktab(sktabptrx) > mxbsj
                                        ksktabs = sktab(sktabptrs)
                                        ksktabx = sktab(sktabptrx)
                                        ksbsj = clfx.sbsj
                                        kxbsj = IIF(clfx.xbsj < clfx.sbsj, 1440 + clfx.xbsj, clfx.xbsj)
                                        SELECT xjjl_d
                                        SEEK clfx.zgbh + clfx.riqi 
                                        DO WHILE  .NOT. EOF() .AND. zgbh=clfx.zgbh .AND. riqi=clfx.riqi
                                             IF kqlb = 92
                                                  IF clfx.sbsj - ksktabs > ksktabx - clfx.xbsj
                                                       ksktabs = ksktabs + ss
                                                  ELSE
                                                       ksktabx = ksktabx - ss
                                                  ENDIF
                                             ENDIF
                                             SKIP
                                        ENDDO
                                        SELECT clfx
                                        IF ksktabx - ksktabs - sjcq > sjcq
                                             mdup = 0
                                        ELSE
                                             mdup = 1
                                        ENDIF
                                   OTHERWISE
                                        mdup = 1
                              ENDCASE
                         ENDIF
               ENDCASE
          ELSE
               mdup = 1
          ENDIF
          DO CASE
               CASE sktabptrx >  ;
                    sktabptrs  ;
                    .AND. (itwo =  ;
                    0 .OR.  ;
                    (sktabptrs <  ;
                    itwo .AND.  ;
                    sktabptrx <  ;
                    itwo) .OR.  ;
                    mdup > 0.6 )
                    bztab(sktabptrs) =  ;
                         1
                    bztab(sktabptrx) =  ;
                         1
                    DO appetwosk
                    FOR i =  ;
                        sktabptrs +  ;
                        1 TO  ;
                        sktabptrx -  ;
                        1
                         bztab(i) =  ;
                              2
                    ENDFOR
                    DO writeztwc
                    FOR i = 1 TO  ;
                        sktabptrs -  ;
                        1
                         bztab(i) =  ;
                              3
                    ENDFOR
                    IF itwo > 0
                         FOR i =  ;
                             sktabptrx +  ;
                             1 TO  ;
                             itwo -  ;
                             1
                              bztab(i) =  ;
                               3
                         ENDFOR
                    ELSE
                         FOR i =  ;
                             sktabptrx +  ;
                             1 TO  ;
                             sktabcnt
                              bztab(i) =  ;
                               3
                         ENDFOR
                    ENDIF
               OTHERWISE
                    IF itwo > 0
                         FOR i =  ;
                             1 TO  ;
                             itwo -  ;
                             1
                              bztab(i) =  ;
                               3
                         ENDFOR
                    ELSE
                         FOR i =  ;
                             1 TO  ;
                             sktabcnt
                              bztab(i) =  ;
                               3
                         ENDFOR
                    ENDIF
          ENDCASE
     ELSE
          IF itwo > 0
               FOR i = 1 TO itwo -  ;
                   1
                    bztab(i) = 3
               ENDFOR
          ELSE
               FOR i = 1 TO  ;
                   sktabcnt
                    bztab(i) = 3
               ENDFOR
          ENDIF
     ENDIF
ELSE
     IF itwo > 0
          mcnt = itwo
          SKIP
          IF  .NOT. EOF() .AND.  ;
              sbsj > 0 .AND. xbsj >  ;
              0
               msbsj = 1440 +  ;
                       sbsj
               IF ABS(msbsj -  ;
                  sktab(itwo)) <  ;
                  120
                    mcnt = itwo
               ENDIF
          ENDIF
          SKIP -1
          FOR i = 1 TO mcnt
               bztab(i) = 3
          ENDFOR
     ELSE
          FOR i = 1 TO sktabcnt
               bztab(i) = 3
          ENDFOR
     ENDIF
ENDIF
RETURN
ENDPROC
**
PROCEDURE AppeTwoSk
SELECT clfx
REPLACE sbsk WITH  ;
        IIF(sktab(sktabptrs) <=  ;
        1440, sktab(sktabptrs),  ;
        sktab(sktabptrs) - 1440),  ;
        xbsk WITH  ;
        IIF(sktab(sktabptrx) <=  ;
        1440, sktab(sktabptrx),  ;
        sktab(sktabptrx) - 1440)
DO writecdzt
IF cdss >= sjcd3 .OR. ztss >=  ;
   sjzt3
     mtime1 = sbsk
     mtime2 = IIF(sbsk > xbsk,  ;
              1440 + xbsk, xbsk)
     IF trybc(mtime1, mtime2) <  ;
        9999
          SELECT clfx
          IF bc <>  ;
             bctabbh(bctabsel)
               REPLACE bc WITH  ;
                       bctabbh(bctabsel),  ;
                       lb WITH  ;
                       bctablb(bctabsel)
               REPLACE cqss WITH  ;
                       bctabss(bctabsel),  ;
                       cqts WITH  ;
                       bctabts(bctabsel),  ;
                       sbsj WITH  ;
                       bctabsb(bctabsel),  ;
                       xbsj WITH  ;
                       bctabxb(bctabsel)
               REPLACE cdss WITH  ;
                       0, ztss  ;
                       WITH 0
               IF zdcl > 80 .AND.  ;
                  zdcl < 85
                    REPLACE zdcl  ;
                            WITH  ;
                            0
               ENDIF
               IF rgcl > 80 .AND.  ;
                  rgcl < 85
                    REPLACE rgcl  ;
                            WITH  ;
                            0
               ENDIF
               IF zdcl > 0 .AND.  ;
                  rgcl = 0
                    REPLACE rgcl  ;
                            WITH  ;
                            95
               ELSE
                    REPLACE zdcl  ;
                            WITH  ;
                            95
               ENDIF
               DO writecdzt
               IF cdss >= sjcd3  ;
                  .OR. ztss >=  ;
                  sjzt3
                    REPLACE kgss  ;
                            WITH  ;
                            cqss,  ;
                            kgts  ;
                            WITH  ;
                            cqts
                    REPLACE cqss  ;
                            WITH  ;
                            0,  ;
                            cqts  ;
                            WITH  ;
                            0,  ;
                            cdss  ;
                            WITH  ;
                            0,  ;
                            ztss  ;
                            WITH  ;
                            0
                    IF zdcl > 80  ;
                       .AND. zdcl <  ;
                       85
                         REPLACE zdcl  ;
                                 WITH  ;
                                 0
                    ENDIF
                    IF rgcl > 80  ;
                       .AND. rgcl <  ;
                       85
                         REPLACE rgcl  ;
                                 WITH  ;
                                 0
                    ENDIF
                    IF zdcl > 0  ;
                       .AND. rgcl =  ;
                       0
                         REPLACE rgcl  ;
                                 WITH  ;
                                 85
                    ELSE
                         REPLACE zdcl  ;
                                 WITH  ;
                                 85
                    ENDIF
               ENDIF
          ELSE
               REPLACE kgss WITH  ;
                       cqss, kgts  ;
                       WITH cqts
               REPLACE cqss WITH  ;
                       0, cqts  ;
                       WITH 0,  ;
                       cdss WITH  ;
                       0, ztss  ;
                       WITH 0
               IF zdcl > 80 .AND.  ;
                  zdcl < 85
                    REPLACE zdcl  ;
                            WITH  ;
                            0
               ENDIF
               IF rgcl > 80 .AND.  ;
                  rgcl < 85
                    REPLACE rgcl  ;
                            WITH  ;
                            0
               ENDIF
               IF zdcl > 0 .AND.  ;
                  rgcl = 0
                    REPLACE rgcl  ;
                            WITH  ;
                            85
               ELSE
                    REPLACE zdcl  ;
                            WITH  ;
                            85
               ENDIF
          ENDIF
     ENDIF
ENDIF
RETURN
ENDPROC
**
PROCEDURE WriteCdZt
IF (zdcl > 92 .AND. zdcl < 95)  ;
   .OR. (rgcl > 92 .AND. rgcl <  ;
   95) .OR. rgcl = 98 .OR. planbc =  ;
   '*'
     RETURN
ENDIF
msbsj = sbsj
mxbsj = IIF(sbsj > xbsj, 1440 +  ;
        xbsj, xbsj)
IF mxbsj >= 1440 .AND. sbsk <  ;
   delta0
     msbsk = sbsk + 1440
ELSE
     msbsk = sbsk
ENDIF
mxbsk = IIF(msbsk > xbsk, 1440 +  ;
        xbsk, xbsk)
mcd = msbsk - msbsj
mzt = mxbsj - mxbsk
IF mcd > sjcd1 .OR. mzt > sjzt1
     mk = 0
     IF qjss > 0
          IF mcd > sjcd1
               mk = mk +  ;
                    IIF(sjcd2 > 1,  ;
                    sjcd2 *  ;
                    (INT(mcd /  ;
                    sjcd2) + 1),  ;
                    mcd)
          ENDIF
          IF mzt > sjzt1
               mk = mk +  ;
                    IIF(sjzt2 > 1,  ;
                    sjzt2 *  ;
                    (INT(mzt /  ;
                    sjzt2) + 1),  ;
                    mzt)
          ENDIF
          mk = mk / qjss
     ENDIF
     IF mk < 0.5  .OR. mk > 1.5 
          IF mcd > sjcd1
               IF  .NOT.  ;
                   chkqingjia(0)
                    REPLACE cdss  ;
                            WITH  ;
                            IIF(sjcd2 >  ;
                            1,  ;
                            sjcd2 *  ;
                            (INT(mcd /  ;
                            sjcd2) +  ;
                            1),  ;
                            mcd)
                    IF zdcl > 95
                         REPLACE zdcl  ;
                                 WITH  ;
                                 80
                    ELSE
                         IF rgcl =  ;
                            0
                              REPLACE  ;
                               rgcl  ;
                               WITH  ;
                               80
                         ENDIF
                    ENDIF
               ENDIF
          ENDIF
          IF mzt > sjzt1
               IF  .NOT.  ;
                   chkqingjia(1)
                    REPLACE ztss  ;
                            WITH  ;
                            IIF(sjzt2 >  ;
                            1,  ;
                            sjzt2 *  ;
                            (INT(mzt /  ;
                            sjzt2) +  ;
                            1),  ;
                            mzt)
                    IF zdcl > 95
                         REPLACE zdcl  ;
                                 WITH  ;
                                 IIF(zdcl =  ;
                                 80,  ;
                                 82,  ;
                                 81)
                    ELSE
                         IF rgcl =  ;
                            0
                              REPLACE  ;
                               rgcl  ;
                               WITH  ;
                               IIF(zdcl =  ;
                               80,  ;
                               82,  ;
                               81)
                         ENDIF
                    ENDIF
               ENDIF
          ENDIF
     ENDIF
ENDIF
RETURN
ENDPROC
**
PROCEDURE WriteZtwc
IF sktabptrs >= sktabptrx
     RETURN
ENDIF
SELECT ztwc
APPEND BLANK
REPLACE zgbh WITH clfx.zgbh, riqi  ;
        WITH clfx.riqi, bc WITH  ;
        clfx.bc, sk1 WITH  ;
        IIF(sktab(sktabptrs + 1) <=  ;
        1440, sktab(sktabptrs +  ;
        1), sktab(sktabptrs + 1) -  ;
        1440)
FOR i = sktabptrs + 2 TO  ;
    sktabptrx - 1
     IF sk2 > 0
          APPEND BLANK
          REPLACE zgbh WITH  ;
                  clfx.zgbh, riqi  ;
                  WITH clfx.riqi,  ;
                  bc WITH clfx.bc,  ;
                  sk1 WITH  ;
                  IIF(sktab(i) <=  ;
                  1440, sktab(i),  ;
                  sktab(i) -  ;
                  1440)
     ELSE
          REPLACE sk2 WITH  ;
                  IIF(sktab(i) >=  ;
                  0, IIF(sktab(i) <=  ;
                  1440, sktab(i),  ;
                  sktab(i) -  ;
                  1440), 1440 +  ;
                  sktab(i))
          REPLACE ss WITH  ;
                  (IIF(sk2 >= sk1,  ;
                  0, 1440) + sk2 -  ;
                  sk1) / 60
          REPLACE ts WITH  ;
                  (IIF(sk2 >= sk1,  ;
                  0, 1440) + sk2 -  ;
                  sk1) / sjcq
     ENDIF
ENDFOR
RETURN
ENDPROC
**
PROCEDURE SetMark
j = sktabcnt
DO WHILE  .NOT. EOF() .AND. j>1
     IF bztab(j) = 1
          EXIT
     ENDIF
     j = j - 1
ENDDO
IF (itwo > 0 .AND. j + 1 < itwo)  ;
   .OR. (itwo = 0 .AND. j + 1 <=  ;
   sktabcnt)
     SELECT clfx
     mzgbh = zgbh
     mriqi = riqi
     SKIP
     IF zgbh = mzgbh .AND. mriqi =  ;
        riqi .AND.  .NOT.  ;
        EMPTY(bc) .AND. mark = 1
          sktabcnt = j
          REPLACE mark WITH 0
     ENDIF
     SKIP -1
ENDIF
SELECT ardata_
SEEK clfx.zgbh + clfx.riqi 
i = 1
DO WHILE  .NOT. EOF() .AND. i<= ;
   sktabcnt
     IF mark > 0
          SKIP
          LOOP
     ENDIF
     IF bztab(i) = 9 .OR. (itwo >  ;
        0 .AND. i >= itwo .AND.  ;
        bztab(i) = 3)
          EXIT
     ENDIF
     REPLACE mark WITH bztab(i)
     i = i + 1
     SKIP
ENDDO
RETURN
ENDPROC
**
PROCEDURE PrgTerm
IF  .NOT. pub_escape
     obj_form4.txt_msg1.value = ""
     obj_form4.txt_msg.value = "正在进行数据处理的结束工作，请等待..."
     SELECT ardata_
     COPY TO ardata
     USE ardata ALIAS ardata IN 0
     SELECT ardata
     INDEX ON zgbh + riqi +  ;
           STR(shijian, 4) TO  ;
           ARDATA
     SELECT ardata_
     SET RELATION TO zgbh + riqi + STR(shijian,;
4) INTO ardata
     GOTO TOP
     mpar = 0
     mmin = 0
     mzgbh = ""
     mdate = CTOD(riqi)
     mtime = shijian
     SCAN
          SELECT ardata
          IF mzgbh <>  ;
             ardata_.zgbh .OR.  ;
             CTOD(ardata_.riqi) -  ;
             mdate > 1
               mpar = 0
               mmin = 0
          ENDIF
          IF EOF()
               DO CASE
                    CASE ardata_.mark =  ;
                         2
                    CASE ardata_.mark =  ;
                         1 .AND.  ;
                         mpar =  ;
                         0
                         IF ardata_.shijian <  ;
                            delta0
                              mmin =  ;
                               1
                         ENDIF
                         mpar = mpar +  ;
                                1
                    OTHERWISE
                         mpar = 0
                         mmin = 0
               ENDCASE
          ELSE
               DO CASE
                    CASE ardata_.mark =  ;
                         2
                         REPLACE donedate  ;
                                 WITH  ;
                                 DTOC(CTOD(riqi) -  ;
                                 mmin)
                    CASE ardata_.mark =  ;
                         1 .AND.  ;
                         mpar =  ;
                         0
                         IF ardata_.shijian <  ;
                            delta0
                              mmin =  ;
                               1
                         ENDIF
                         REPLACE donedate  ;
                                 WITH  ;
                                 DTOC(CTOD(riqi) -  ;
                                 mmin)
                         mpar = mpar +  ;
                                1
                    CASE ardata_.mark =  ;
                         1 .AND.  ;
                         mpar =  ;
                         1
                         IF ardata_.shijian <  ;
                            mtime
                              mmin =  ;
                               1
                         ENDIF
                         REPLACE donedate  ;
                                 WITH  ;
                                 DTOC(CTOD(riqi) -  ;
                                 mmin)
                         mpar = 0
                         mmin = 0
                    OTHERWISE
                         IF  .NOT.  ;
                             EMPTY(ardata_.donedate)
                              REPLACE  ;
                               donedate  ;
                               WITH  ;
                               ardata_.donedate
                         ELSE
                              REPLACE  ;
                               donedate  ;
                               WITH  ;
                               riqi
                         ENDIF
                         mpar = 0
                         mmin = 0
               ENDCASE
          ENDIF
          SELECT ardata_
          mzgbh = zgbh
          mdate = CTOD(riqi)
          mtime = shijian
     ENDSCAN
ENDIF
RELEASE bctabbou, bctabcnt,  ;
        bctabbh, bctablb, bctabsb,  ;
        bctabxb, bctabss, bctabts,  ;
        bctabsel, currentbc
RELEASE sktabbou, sktabcnt,  ;
        sktabptrs, sktabptrx,  ;
        itwo, sktab, bztab,  ;
        njbflag
RELEASE delta0, delta2, delta3,  ;
        delta4, delta8, delta9,  ;
        delta9max, wtsb1, wtxb1,  ;
        wtsb2, wtxb2
SELECT ardata_
USE
SET ESCAPE OFF
SET EXACT OFF
RETURN
ENDPROC
**
PROCEDURE SaveCl2
SELECT clfx
INDEX ON zgbh + riqi + STR(xbsj,  ;
      4) TO CLFX
SELECT ardata_
SET RELATION TO zgbh INTO zg
GOTO TOP
DO WHILE  .NOT. EOF()
     obj_form4.txt_msg1.value = zgbh +  ;
                                ' ' +  ;
                                riqi
     IF mark = 3
          mflag = .F.
          mzgbh = zgbh
          mdate = CTOD(riqi)
          mtime1 = shijian
          bctabsel = 0
          mrec = RECNO()
          mdelta = 9999
          SELECT clfx
          SEEK mzgbh +  ;
               DTOC(mdate) 
          IF  .NOT. EOF() .AND.   ;
              .NOT. EMPTY(bc)  ;
              .AND.  ;
              ardata_.shijian >  ;
              delta0
               mbcflag = .T.
          ELSE
               mbcflag = .F.
          ENDIF
          SELECT ardata_
          SKIP
          k = 0
          DO WHILE  .NOT. EOF()  ;
             .AND. mzgbh=zgbh  ;
             .AND. (mdate= ;
             CTOD(riqi) .OR.  ;
             mdate+1=CTOD(riqi))  ;
             .AND. mark=3 .AND.   ;
             .NOT. mbcflag
               IF k > 0 .AND.  ;
                  EMPTY(clfx.bc)
                    EXIT
               ENDIF
               IF mdate =  ;
                  CTOD(riqi)
                    mtime2 = shijian
               ELSE
                    mtime2 = 1440 +  ;
                             shijian
               ENDIF
               k = k + 1
               mdelta2 = trybc(mtime1,  ;
                         mtime2)
               IF mdelta2 <  ;
                  mdelta
                    mbctabsel = bctabsel
                    mtime3 = mtime2
                    mdelta = mdelta2
                    mflag = .T.
                    mrec2 = RECNO()
               ENDIF
               SKIP
          ENDDO
          IF mflag
               bctabsel = mbctabsel
               IF mtime1 < delta0  ;
                  .AND. mflag
                    mdate = mdate -  ;
                            1
               ENDIF
               GOTO mrec2
               DO WHILE RECNO()<> ;
                  mrec
                    REPLACE donedate  ;
                            WITH  ;
                            DTOC(mdate)
                    IF RECNO() >  ;
                       mrec .AND.  ;
                       RECNO() <  ;
                       mrec2
                         REPLACE mark  ;
                                 WITH  ;
                                 2
                    ELSE
                         REPLACE mark  ;
                                 WITH  ;
                                 1
                    ENDIF
                    SKIP -1
               ENDDO
          ENDIF
          GOTO mrec
          SELECT clfx
          SEEK mzgbh +  ;
               DTOC(mdate) 
          IF  .NOT. FOUND() .OR.  ;
              (sbsk <> 0 .AND.  ;
              xbsk <> 0) .OR.  ;
              (mflag .AND. (sbsk <>  ;
              0 .OR. xbsk <> 0))
               APPEND BLANK
               REPLACE zgbh WITH  ;
                       ardata_.zgbh,  ;
                       riqi WITH  ;
                       DTOC(mdate)
          ENDIF
          DO CASE
               CASE  .NOT. mflag  ;
                     .AND. sbsk =  ;
                     0
                    REPLACE sbsk  ;
                            WITH  ;
                            mtime1
                    IF zdcl = 98
                         REPLACE zdcl  ;
                                 WITH  ;
                                 73
                         REPLACE cqss  ;
                                 WITH  ;
                                 0,  ;
                                 cqts  ;
                                 WITH  ;
                                 0
                    ENDIF
               CASE  .NOT. mflag  ;
                     .AND. xbsk =  ;
                     0
                    REPLACE xbsk  ;
                            WITH  ;
                            mtime1
                    IF zdcl = 98
                         REPLACE zdcl  ;
                                 WITH  ;
                                 73
                         REPLACE cqss  ;
                                 WITH  ;
                                 0,  ;
                                 cqts  ;
                                 WITH  ;
                                 0
                    ENDIF
               CASE bctabsel > 0
                    IF bc <>  ;
                       bctabbh(bctabsel)
                         IF EMPTY(bc)
                              REPLACE  ;
                               planbc  ;
                               WITH  ;
                               '*'
                         ELSE
                              REPLACE  ;
                               planbc  ;
                               WITH  ;
                               bc
                         ENDIF
                         IF rgcl =  ;
                            0  ;
                            .AND.  ;
                            planbc <>  ;
                            '*'
                              REPLACE  ;
                               zdcl  ;
                               WITH  ;
                               98
                              REPLACE  ;
                               cqss  ;
                               WITH  ;
                               bctabss(bctabsel),  ;
                               cqts  ;
                               WITH  ;
                               bctabts(bctabsel),  ;
                               qjss  ;
                               WITH  ;
                               0,  ;
                               qjts  ;
                               WITH  ;
                               0
                         ENDIF
                         REPLACE bc  ;
                                 WITH  ;
                                 bctabbh(bctabsel),  ;
                                 lb  ;
                                 WITH  ;
                                 bctablb(bctabsel)
                         REPLACE sbsk  ;
                                 WITH  ;
                                 mtime1,  ;
                                 xbsk  ;
                                 WITH  ;
                                 IIF(mtime3 >  ;
                                 1440,  ;
                                 mtime3 -  ;
                                 1440,  ;
                                 mtime3),  ;
                                 sbsj  ;
                                 WITH  ;
                                 bctabsb(bctabsel),  ;
                                 xbsj  ;
                                 WITH  ;
                                 bctabxb(bctabsel)
                    ELSE
                         IF rgcl =  ;
                            0
                              REPLACE  ;
                               cqss  ;
                               WITH  ;
                               bctabss(bctabsel),  ;
                               cqts  ;
                               WITH  ;
                               bctabts(bctabsel),  ;
                               qjss  ;
                               WITH  ;
                               0,  ;
                               qjts  ;
                               WITH  ;
                               0,  ;
                               zdcl  ;
                               WITH  ;
                               98
                         ENDIF
                         REPLACE bc  ;
                                 WITH  ;
                                 bctabbh(bctabsel),  ;
                                 lb  ;
                                 WITH  ;
                                 bctablb(bctabsel)
                         REPLACE sbsk  ;
                                 WITH  ;
                                 mtime1,  ;
                                 xbsk  ;
                                 WITH  ;
                                 IIF(mtime3 >  ;
                                 1440,  ;
                                 mtime3 -  ;
                                 1440,  ;
                                 mtime3),  ;
                                 sbsj  ;
                                 WITH  ;
                                 bctabsb(bctabsel),  ;
                                 xbsj  ;
                                 WITH  ;
                                 bctabxb(bctabsel)
                    ENDIF
                    DO writecdzt
          ENDCASE
     ENDIF
     SELECT ardata_
     SKIP
ENDDO
SELECT clfx
INDEX ON zgbh + riqi +  ;
      STR(IIF(sbsk > 0, sbsk,  ;
      xbsk), 4) TO CLFX
SET RELATION TO zgbh INTO zg
GOTO TOP
mzgbh = zgbh
mdate = CTOD(riqi)
rec = -1
t1 = -1
t2 = -1
mtogether = 0
DO WHILE  .NOT. EOF()
     obj_form4.txt_msg1.value = zgbh +  ;
                                ' ' +  ;
                                riqi
     IF mzgbh <> zgbh .OR. mdate <>  ;
        CTOD(riqi)
          IF t2 >= 0 .AND.  ;
             mtogether > 0
               GOTO rec
               REPLACE sbsk WITH  ;
                       t1, xbsk  ;
                       WITH t2
               IF zdcl = 98
                    REPLACE zdcl  ;
                            WITH  ;
                            73
                    REPLACE cqss  ;
                            WITH  ;
                            0,  ;
                            cqts  ;
                            WITH  ;
                            0
               ENDIF
               SKIP
               DO WHILE  .NOT.  ;
                  EOF() .AND.  ;
                  mzgbh=zgbh  ;
                  .AND. mdate= ;
                  CTOD(riqi)
                    IF EMPTY(bc)
                         DELETE
                    ENDIF
                    SKIP
               ENDDO
          ENDIF
          t1 = -1
          t2 = -1
          mtogether = 0
          rec = RECNO()
          mzgbh = zgbh
          mdate = CTOD(riqi)
     ENDIF
     IF zdcl = 71 .OR. zdcl = 72
          IF mtogether = 0
               t1 = IIF(zdcl = 71,  ;
                    sbsk, xbsk)
               rec = RECNO()
          ELSE
               t2 = IIF(zdcl = 71,  ;
                    sbsk, xbsk)
          ENDIF
          mtogether = mtogether +  ;
                      1
     ELSE
          IF mtogether < 2
               t1 = -1
               t2 = -1
               mtogether = 0
               rec = RECNO()
          ENDIF
     ENDIF
     IF (zg.mk = '1' .OR. zg.mk =  ;
        '4' .OR. zg.mk = '5' .OR.  ;
        zg.mk = '7') .AND. zdcl <>  ;
        73 .AND. zdcl <> 0
          REPLACE cdss WITH 0,  ;
                  ztss WITH 0,  ;
                  kgss WITH 0,  ;
                  jbss WITH 0
          REPLACE cqss WITH xbsk -  ;
                  sbsk
          IF zdcl >= 80 .AND.  ;
             zdcl <= 85
               REPLACE zdcl WITH  ;
                       98
          ENDIF
     ENDIF
     SKIP
ENDDO
IF t2 >= 0 .AND. EOF() .AND.  ;
   mtogether > 0
     GOTO rec
     REPLACE sbsk WITH t1, xbsk  ;
             WITH t2
     IF zdcl = 98
          REPLACE zdcl WITH 73
          REPLACE cqss WITH 0,  ;
                  cqts WITH 0
     ENDIF
     SKIP
     DO WHILE  .NOT. EOF() .AND.  ;
        mzgbh=zgbh .AND. mdate= ;
        CTOD(riqi)
          IF EMPTY(bc)
               DELETE
          ENDIF
          SKIP
     ENDDO
     GOTO rec
     IF (zg.mk = '1' .OR. zg.mk =  ;
        '4' .OR. zg.mk = '5' .OR.  ;
        zg.mk = '7') .AND. zdcl <>  ;
        73 .AND. zdcl <> 0
          REPLACE cdss WITH 0,  ;
                  ztss WITH 0,  ;
                  kgss WITH 0,  ;
                  jbss WITH 0
          REPLACE cqss WITH xbsk -  ;
                  sbsk
          IF zdcl >= 80 .AND.  ;
             zdcl <= 85
               REPLACE zdcl WITH  ;
                       98
          ENDIF
     ENDIF
ENDIF
DIMENSION azgbh(3), mdate(3),  ;
          msk(3), mtime(3)
FOR i = 1 TO 3
     azgbh(i) = ""
     mdate(i) = CTOD("")
     msk(i) = 0
     mtime(i) = 0
ENDFOR
SELECT clfx
SCAN
     obj_form4.txt_msg1.value = zgbh +  ;
                                ' ' +  ;
                                riqi
     IF (sbsk > 0 .AND. xbsk > 0)
          LOOP
     ENDIF
     IF sbsk = 0 .AND. xbsk = 0
          msbsj = sbsj
          mxbsj = IIF(sbsj > xbsj,  ;
                  1440 + xbsj,  ;
                  xbsj)
          mdate = CTOD(riqi)
          SKIP
          IF (mdate = CTOD(riqi) -  ;
             1) .AND. ((sbsk > 0  ;
             .AND. xbsk = 0) .OR.  ;
             (sbsk = 0 .AND. xbsk >  ;
             0))
               mshijian = 1440 +  ;
                          IIF(sbsk >  ;
                          0, sbsk,  ;
                          xbsk)
               IF mshijian -  ;
                  mxbsj < delta4 /  ;
                  2
                    REPLACE sbsk  ;
                            WITH  ;
                            0,  ;
                            xbsk  ;
                            WITH  ;
                            0
                    IF zdcl > 70  ;
                       .AND. zdcl <  ;
                       75
                         REPLACE zdcl  ;
                                 WITH  ;
                                 0
                    ENDIF
                    IF rgcl > 70  ;
                       .AND. rgcl <  ;
                       75
                         REPLACE rgcl  ;
                                 WITH  ;
                                 0
                    ENDIF
                    IF zdcl = 0  ;
                       .AND. rgcl =  ;
                       0 .AND.  ;
                       sbsj = 0  ;
                       .AND. xbsj =  ;
                       0
                         DELETE
                    ENDIF
                    SELECT ardata_
                    SEEK clfx.zgbh +  ;
                         clfx.riqi +  ;
                         STR(mshijian -  ;
                         1440, 4) 
                    IF  .NOT.  ;
                        EOF()
                         REPLACE donedate  ;
                                 WITH  ;
                                 DTOC(mdate)
                    ENDIF
                    SELECT clfx
                    SKIP -1
                    REPLACE xbsk  ;
                            WITH  ;
                            mshijian,  ;
                            cqss  ;
                            WITH  ;
                            0,  ;
                            cqts  ;
                            WITH  ;
                            0,  ;
                            zdcl  ;
                            WITH  ;
                            73
                    LOOP
               ELSE
                    SKIP -1
                    IF rgcl = 0  ;
                       .AND. zdcl =  ;
                       98
                         REPLACE cqss  ;
                                 WITH  ;
                                 0,  ;
                                 cqts  ;
                                 WITH  ;
                                 0,  ;
                                 zdcl  ;
                                 WITH  ;
                                 0
                    ENDIF
                    LOOP
               ENDIF
          ELSE
               SKIP -1
               IF rgcl = 0 .AND.  ;
                  zdcl = 98
                    REPLACE cqss  ;
                            WITH  ;
                            0,  ;
                            cqts  ;
                            WITH  ;
                            0,  ;
                            zdcl  ;
                            WITH  ;
                            0
               ENDIF
               LOOP
          ENDIF
     ENDIF
     mzgbh = zgbh
     mdate = CTOD(riqi)
     mkqlb1 = zdcl + rgcl
     msksj1 = IIF(sbsk > 0, sbsk,  ;
              xbsk)
     SKIP
     IF  .NOT. EOF() .AND. ((sbsk >  ;
         0 .AND. xbsk > 0) .OR.  ;
         (sbsk = 0 .AND. xbsk =  ;
         0))
          SKIP
          LOOP
     ENDIF
     mkqlb2 = zdcl + rgcl
     IF  .NOT. EOF() .AND. (mdate <>  ;
         CTOD(riqi) - 1 .OR.  ;
         (sbsk > 0 .AND. xbsk >  ;
         0))
          SKIP
          LOOP
     ENDIF
     IF mkqlb1 > 0
          msk2 = IIF(sbsk > 0,  ;
                 sbsk, xbsk)
          IF trybc(msksj1, 1440 +  ;
             msk2) = 9999
               LOOP
          ENDIF
          REPLACE sbsk WITH 0,  ;
                  xbsk WITH 0,  ;
                  cqss WITH 0,  ;
                  cqts WITH 0,  ;
                  zdcl WITH  ;
                  IIF(zdcl = 98,  ;
                  0, zdcl)
          SKIP -1
          IF xbsk > 0
               REPLACE sbsk WITH  ;
                       xbsk
          ENDIF
          REPLACE xbsk WITH msk2,  ;
                  zdcl WITH 0
          SKIP
          mzgbh = zgbh
          mriqi = riqi
          SKIP
          IF  .NOT. EOF()
               IF mzgbh = zgbh  ;
                  .AND. mriqi =  ;
                  riqi
                    SKIP -1
                    DELETE
               ELSE
                    SKIP -1
               ENDIF
          ELSE
               SKIP -1
          ENDIF
     ELSE
          msk2 = IIF(sbsk > 0,  ;
                 sbsk, xbsk)
          IF trybc(msksj1, 1440 +  ;
             msk2) = 9999
               LOOP
          ENDIF
          REPLACE xbsk WITH sbsk
          REPLACE sbsk WITH  ;
                  msksj1
          mrec = RECNO()
          SKIP -1
          mzgbh = zgbh
          mriqi = riqi
          IF  .NOT. BOF()
               SKIP -1
               IF  .NOT. BOF()
                    IF mzgbh =  ;
                       zgbh .AND.  ;
                       mriqi =  ;
                       riqi
                         SKIP
                         DELETE
                    ENDIF
               ENDIF
          ENDIF
          GOTO mrec
     ENDIF
     IF  .NOT. EOF()
          SKIP
     ENDIF
ENDSCAN
RETURN
ENDPROC
**
PROCEDURE fenxi7
IF sjjb0 = 0 .AND. sjjb1 = 0
     RETURN
ENDIF
SELECT clfx
SET RELATION TO zgbh INTO zg
mzgbh = ""
mdate = CTOD("")
mcqss = 0
nzgbh = ""
ndate = CTOD("")
njb = .F.
kzgbh = ""
kdate = CTOD("")
kkqlb = 0
SCAN
     IF pub_language
          obj_form4.txt_msg1.value =  ;
           "Automatic overtime..." +  ;
           zgbh + " " + riqi
     ELSE
          obj_form4.txt_msg1.value =  ;
           "自动加班处理..." +  ;
           zgbh + " " + riqi
     ENDIF
     IF zdcl = 85 .OR. rgcl = 85  ;
        .OR. rgcl = 98
          LOOP
     ENDIF
     IF zg.zdjb <> "1" .AND.  ;
        zg.zdjb <> "4" .AND.  ;
        zg.zdjb <> "5" .AND.  ;
        zg.zdjb <> "7"
          mflag = .F.
          IF rgcl = 0 .AND. (zdcl =  ;
             0 .OR. zdcl = 85  ;
             .OR. zdcl = 73 .OR.  ;
             zdcl = 74 .OR. (zdcl >=  ;
             81 .AND. zdcl <= 83  ;
             .AND. cdss + ztss >  ;
             cqss / 3))
               IF mzgbh = zgbh  ;
                  .AND. mdate =  ;
                  CTOD(riqi)  ;
                  .AND. mcqss >  ;
                  0
                    mflag = .T.
               ELSE
                    mrec = RECNO()
                    mzgbh_ = zgbh
                    mdate_ = CTOD(riqi)
                    SKIP
                    IF  .NOT.  ;
                        EOF()  ;
                        .AND.  ;
                        mzgbh_ =  ;
                        zgbh  ;
                        .AND.  ;
                        mdate_ =  ;
                        CTOD(riqi)  ;
                        .AND.  ;
                        (rgcl > 0  ;
                        .OR.   ;
                        .NOT.  ;
                        (zdcl = 0  ;
                        .OR. zdcl =  ;
                        85 .OR.  ;
                        zdcl = 73  ;
                        .OR. zdcl =  ;
                        74 .OR.  ;
                        (zdcl >=  ;
                        81 .AND.  ;
                        zdcl <=  ;
                        83 .AND.  ;
                        cdss +  ;
                        ztss >  ;
                        cqss /  ;
                        3)))
                         mflag = .T.
                    ENDIF
                    GOTO mrec
               ENDIF
          ENDIF
          IF mflag
               REPLACE cqss WITH  ;
                       0, cqts  ;
                       WITH 0,  ;
                       cdss WITH  ;
                       0, ztss  ;
                       WITH 0,  ;
                       kgss WITH  ;
                       0, kgts  ;
                       WITH 0,  ;
                       zdcl WITH  ;
                       0, rgcl  ;
                       WITH 0
          ENDIF
          mzgbh = zgbh
          mdate = CTOD(riqi)
          mcqss = cqss
          LOOP
     ENDIF
     IF jbss > 0 .OR. jbts > 0
          mzgbh = zgbh
          mdate = CTOD(riqi)
          mcqss = cqss
          mflag = .T.
          IF sbsj > 0 .AND. xbsj >  ;
             0 .AND. (rgcl = 92  ;
             .OR. zdcl = 92)
               mxbsj = IIF(xbsj >=  ;
                       sbsj, xbsj,  ;
                       1440 +  ;
                       xbsj)
               SELECT xjjl_d
               SEEK mzgbh +  ;
                    DTOC(mdate) +  ;
                    "92" 
               DO WHILE  .NOT.  ;
                  EOF() .AND.  ;
                  mzgbh=zgbh  ;
                  .AND. mdate= ;
                  CTOD(riqi)  ;
                  .AND. mflag
                    mjssj = IIF(jssj >=  ;
                            kssj,  ;
                            jssj,  ;
                            1440 +  ;
                            jssj)
                    IF kssj >  ;
                       clfx.sbsj  ;
                       .AND. kssj <  ;
                       mxbsj  ;
                       .AND.  ;
                       mjssj >  ;
                       clfx.sbsj  ;
                       .AND.  ;
                       mjssj <  ;
                       mxbsj
                         mflag = .F.
                    ENDIF
                    SKIP
               ENDDO
               SELECT clfx
          ENDIF
          IF mflag
               LOOP
          ENDIF
     ENDIF
     IF njb .AND. (rgcl = 1 .OR.  ;
        rgcl = 15 .OR. ((zdcl = 1  ;
        .OR. zdcl = 15) .AND.  ;
        rgcl = 0)) .AND. nzgbh =  ;
        zgbh .AND. ndate =  ;
        CTOD(riqi) - 1
          SKIP -1
          njb1 = 0
          njb2 = 0
          nxbsj = xbsj
          nxbsk = xbsk
          DO CASE
               CASE xbsk < sbsk  ;
                    .AND. sbsj <  ;
                    xbsk .AND.  ;
                    sbsj < sbsk
                    IF sjjb0 > 0  ;
                       .AND. 1440 +  ;
                       sbsj -  ;
                       sbsk >  ;
                       sjjb0
                         njb1 = sjjb2 *  ;
                                INT((1440 +  ;
                                sbsj -  ;
                                sbsk) /  ;
                                sjjb2)
                    ENDIF
                    IF sjjb1 > 0  ;
                       .AND. xbsk -  ;
                       xbsj >  ;
                       sjjb1
                         njb2 = sjjb2 *  ;
                                INT((xbsk -  ;
                                xbsj) /  ;
                                sjjb2)
                    ENDIF
               CASE xbsk < sbsk  ;
                    .AND. xbsj >  ;
                    sbsk .AND.  ;
                    xbsj < xbsk
                    IF sjjb0 > 0  ;
                       .AND. sbsj -  ;
                       sbsk >  ;
                       sjjb0
                         njb1 = sjjb2 *  ;
                                INT((sbsj -  ;
                                sbsk) /  ;
                                sjjb2)
                    ENDIF
                    IF sjjb1 > 0  ;
                       .AND. 1440 +  ;
                       xbsk -  ;
                       xbsj >  ;
                       sjjb1
                         njb2 = sjjb2 *  ;
                                INT((1440 +  ;
                                xbsk -  ;
                                xbsj) /  ;
                                sjjb2)
                    ENDIF
               CASE xbsj < sbsj  ;
                    .AND. xbsk >  ;
                    sbsj .AND.  ;
                    xbsk > xbsj
                    IF sjjb0 > 0  ;
                       .AND. sbsj -  ;
                       sbsk >  ;
                       sjjb0
                         njb1 = sjjb2 *  ;
                                INT((sbsj -  ;
                                sbsk) /  ;
                                sjjb2)
                    ENDIF
               CASE xbsj < sbsj  ;
                    .AND. sbsk <  ;
                    sbsj .AND.  ;
                    sbsk < xbsj
                    IF sjjb1 > 0  ;
                       .AND. xbsk -  ;
                       xbsj >  ;
                       sjjb1
                         njb2 = sjjb2 *  ;
                                INT((xbsk -  ;
                                xbsj) /  ;
                                sjjb2)
                    ENDIF
               OTHERWISE
                    IF sjjb0 > 0  ;
                       .AND. sbsj -  ;
                       sbsk >  ;
                       sjjb0
                         njb1 = sjjb2 *  ;
                                INT((sbsj -  ;
                                sbsk) /  ;
                                sjjb2)
                    ENDIF
                    IF sjjb1 > 0  ;
                       .AND. xbsk -  ;
                       xbsj >  ;
                       sjjb1
                         njb2 = sjjb2 *  ;
                                INT((xbsk -  ;
                                xbsj) /  ;
                                sjjb2)
                    ENDIF
          ENDCASE
          IF njb2 > 0
               REPLACE jbss WITH  ;
                       jbss -  ;
                       njb2
               REPLACE jbts WITH  ;
                       jbss /  ;
                       sjcq
               IF jbss = 0
                    IF zdcl = 92
                         REPLACE zdcl  ;
                                 WITH  ;
                                 98
                    ENDIF
                    IF rgcl = 92
                         REPLACE rgcl  ;
                                 WITH  ;
                                 98
                    ENDIF
               ENDIF
               SKIP
               mkqlb = IIF(rgcl >  ;
                       0, rgcl,  ;
                       zdcl)
               REPLACE jbss WITH  ;
                       njb2, jbts  ;
                       WITH njb2 /  ;
                       sjcq, qjss  ;
                       WITH 0,  ;
                       qjts WITH  ;
                       0, rgcl  ;
                       WITH 0,  ;
                       zdcl WITH  ;
                       IIF(mkqlb =  ;
                       1, 93,  ;
                       94)
               REPLACE xrcolor  ;
                       WITH  ;
                       RGB(128,  ;
                       255, 128)
               DO WHILE nxbsj>= ;
                  1440
                    nxbsj = nxbsj -  ;
                            1440
               ENDDO
               DO WHILE nxbsk>= ;
                  1440
                    nxbsk = nxbsk -  ;
                            1440
               ENDDO
               REPLACE sbsk WITH  ;
                       nxbsj,  ;
                       xbsk WITH  ;
                       nxbsk
          ELSE
               SKIP
          ENDIF
          mzgbh = zgbh
          mdate = CTOD(riqi)
          mcqss = cqss
          LOOP
     ENDIF
     IF (sbsk = 0 .OR. xbsk = 0)  ;
        .OR. ((sbsj = 0 .OR. xbsj =  ;
        0) .AND.  .NOT. (rgcl = 0  ;
        .AND. (zdcl = 0 .OR. zdcl =  ;
        85 .OR. zdcl = 73 .OR.  ;
        zdcl = 74 .OR. (zdcl >=  ;
        81 .AND. zdcl <= 83 .AND.  ;
        cdss + ztss > cqss /  ;
        3))))
          mzgbh = zgbh
          mdate = CTOD(riqi)
          mcqss = cqss
          LOOP
     ENDIF
     mxrjb = 0
     IF sbsk > 0 .AND. xbsk > 0  ;
        .AND. (sbsk > xbsk .OR.  ;
        xbsk > 1440)
          szgbh = zgbh
          sdate = CTOD(riqi)
          SKIP
          IF szgbh = zgbh .AND.  ;
             sdate = CTOD(riqi) -  ;
             1 .AND. (rgcl = 93  ;
             .OR. rgcl = 94)
               mxrjb = jbss
          ENDIF
          SKIP -1
     ENDIF
     msecond = .F.
     IF rgcl = 0 .AND. (zdcl = 0  ;
        .OR. zdcl = 85 .OR. zdcl =  ;
        73 .OR. zdcl = 74 .OR.  ;
        (zdcl >= 81 .AND. zdcl <=  ;
        83 .AND. cdss + ztss >  ;
        cqss / 3))
          IF mzgbh = zgbh .AND.  ;
             mdate = CTOD(riqi)  ;
             .AND. mcqss > 0
               msecond = .T.
          ELSE
               mrec = RECNO()
               mzgbh_ = zgbh
               mdate_ = CTOD(riqi)
               SKIP
               IF  .NOT. EOF()
                    IF mzgbh_ =  ;
                       zgbh .AND.  ;
                       mdate_ =  ;
                       CTOD(riqi)
                         IF rgcl >  ;
                            0  ;
                            .OR.   ;
                            .NOT.  ;
                            (zdcl =  ;
                            0  ;
                            .OR.  ;
                            zdcl =  ;
                            85  ;
                            .OR.  ;
                            zdcl =  ;
                            73  ;
                            .OR.  ;
                            zdcl =  ;
                            74  ;
                            .OR.  ;
                            (zdcl >=  ;
                            81  ;
                            .AND.  ;
                            zdcl <=  ;
                            83  ;
                            .AND.  ;
                            cdss +  ;
                            ztss >  ;
                            cqss /  ;
                            3))
                              msecond =  ;
                               .T.
                         ENDIF
                    ELSE
                         msecond =  ;
                          .T.
                    ENDIF
               ENDIF
               IF  .NOT. msecond
                    GOTO mrec
                    SKIP -1
                    IF mrec <>  ;
                       RECNO()
                         IF mzgbh_ =  ;
                            zgbh  ;
                            .AND.  ;
                            mdate_ =  ;
                            CTOD(riqi)
                              IF rgcl >  ;
                                 0  ;
                                 .OR.   ;
                                 .NOT.  ;
                                 (zdcl =  ;
                                 0  ;
                                 .OR.  ;
                                 zdcl =  ;
                                 85  ;
                                 .OR.  ;
                                 zdcl =  ;
                                 73  ;
                                 .OR.  ;
                                 zdcl =  ;
                                 74  ;
                                 .OR.  ;
                                 (zdcl >=  ;
                                 81  ;
                                 .AND.  ;
                                 zdcl <=  ;
                                 83  ;
                                 .AND.  ;
                                 cdss +  ;
                                 ztss >  ;
                                 cqss /  ;
                                 3))
                                   msecond = .T.
                              ENDIF
                         ELSE
                              msecond =  ;
                               .T.
                         ENDIF
                    ENDIF
               ENDIF
               GOTO mrec
          ENDIF
     ENDIF
     IF  .NOT. msecond
          DO CASE
               CASE sbsk <= sbsj  ;
                    .AND. sbsj <=  ;
                    xbsj .AND.  ;
                    xbsj <= xbsk
                    IF sjjb0 > 0  ;
                       .AND. sbsj -  ;
                       sbsk >  ;
                       sjjb0
                         REPLACE jbss  ;
                                 WITH  ;
                                 jbss +  ;
                                 sjjb2 *  ;
                                 INT((sbsj -  ;
                                 sbsk) /  ;
                                 sjjb2)
                    ENDIF
                    IF sjjb1 > 0  ;
                       .AND. xbsk -  ;
                       xbsj >  ;
                       sjjb1
                         mxrjb_rate =  ;
                          mxrjb /  ;
                          (sjjb2 *  ;
                          INT((xbsk -  ;
                          xbsj) /  ;
                          sjjb2))
                         IF mxrjb_rate <  ;
                            0.9   ;
                            .OR.  ;
                            mxrjb_rate >  ;
                            1.1 
                              REPLACE  ;
                               jbss  ;
                               WITH  ;
                               jbss +  ;
                               sjjb2 *  ;
                               INT((xbsk -  ;
                               xbsj) /  ;
                               sjjb2)
                         ENDIF
                    ENDIF
               CASE sbsj <= sbsk  ;
                    .AND. sbsk <=  ;
                    xbsj .AND.  ;
                    xbsj <= xbsk
                    IF sjjb1 > 0  ;
                       .AND. xbsk -  ;
                       xbsj >  ;
                       sjjb1
                         mxrjb_rate =  ;
                          mxrjb /  ;
                          (sjjb2 *  ;
                          INT((xbsk -  ;
                          xbsj) /  ;
                          sjjb2))
                         IF mxrjb_rate <  ;
                            0.9   ;
                            .OR.  ;
                            mxrjb_rate >  ;
                            1.1 
                              REPLACE  ;
                               jbss  ;
                               WITH  ;
                               jbss +  ;
                               sjjb2 *  ;
                               INT((xbsk -  ;
                               xbsj) /  ;
                               sjjb2)
                         ENDIF
                    ENDIF
               CASE sbsk <= sbsj  ;
                    .AND. sbsj <=  ;
                    xbsk .AND.  ;
                    xbsk <= xbsj
                    IF sjjb0 > 0  ;
                       .AND. sbsj -  ;
                       sbsk >  ;
                       sjjb0
                         REPLACE jbss  ;
                                 WITH  ;
                                 jbss +  ;
                                 sjjb2 *  ;
                                 INT((sbsj -  ;
                                 sbsk) /  ;
                                 sjjb2)
                    ENDIF
               CASE sbsk >= sbsj  ;
                    .AND. sbsj <=  ;
                    xbsj .AND.  ;
                    xbsj <= xbsk  ;
                    .AND. sbsk >=  ;
                    xbsk
                    IF sjjb0 > 0  ;
                       .AND. 1440 +  ;
                       sbsj -  ;
                       sbsk >  ;
                       sjjb0
                         REPLACE jbss  ;
                                 WITH  ;
                                 jbss +  ;
                                 sjjb2 *  ;
                                 INT((1440 +  ;
                                 sbsj -  ;
                                 sbsk) /  ;
                                 sjjb2)
                    ENDIF
                    IF sjjb1 > 0  ;
                       .AND. xbsk -  ;
                       xbsj >  ;
                       sjjb1
                         mxrjb_rate =  ;
                          mxrjb /  ;
                          (sjjb2 *  ;
                          INT((xbsk -  ;
                          xbsj) /  ;
                          sjjb2))
                         IF mxrjb_rate <  ;
                            0.9   ;
                            .OR.  ;
                            mxrjb_rate >  ;
                            1.1 
                              REPLACE  ;
                               jbss  ;
                               WITH  ;
                               jbss +  ;
                               sjjb2 *  ;
                               INT((xbsk -  ;
                               xbsj) /  ;
                               sjjb2)
                         ENDIF
                    ENDIF
               CASE sbsj >= sbsk  ;
                    .AND. sbsk <=  ;
                    xbsj .AND.  ;
                    xbsj <= xbsk  ;
                    .AND. sbsj >=  ;
                    xbsj
                    IF sjjb1 > 0  ;
                       .AND. xbsk -  ;
                       xbsj >  ;
                       sjjb1
                         mxrjb_rate =  ;
                          mxrjb /  ;
                          (sjjb2 *  ;
                          INT((xbsk -  ;
                          xbsj) /  ;
                          sjjb2))
                         IF mxrjb_rate <  ;
                            0.9   ;
                            .OR.  ;
                            mxrjb_rate >  ;
                            1.1 
                              REPLACE  ;
                               jbss  ;
                               WITH  ;
                               jbss +  ;
                               sjjb2 *  ;
                               INT((xbsk -  ;
                               xbsj) /  ;
                               sjjb2)
                         ENDIF
                    ENDIF
               CASE sbsk >= sbsj  ;
                    .AND. sbsj <=  ;
                    xbsk .AND.  ;
                    xbsk <= xbsj  ;
                    .AND. sbsk >=  ;
                    xbsk
                    IF sjjb0 > 0  ;
                       .AND. 1440 +  ;
                       sbsj -  ;
                       sbsk >  ;
                       sjjb0
                         REPLACE jbss  ;
                                 WITH  ;
                                 jbss +  ;
                                 sjjb2 *  ;
                                 INT((1440 +  ;
                                 sbsj -  ;
                                 sbsk) /  ;
                                 sjjb2)
                    ENDIF
               CASE sbsk <= sbsj  ;
                    .AND. sbsj >=  ;
                    xbsj .AND.  ;
                    xbsj <= xbsk  ;
                    .AND. sbsk >=  ;
                    xbsk .AND.  ;
                    sbsj >= xbsj
                    IF sjjb0 > 0  ;
                       .AND. sbsj -  ;
                       sbsk >  ;
                       sjjb0
                         REPLACE jbss  ;
                                 WITH  ;
                                 jbss +  ;
                                 sjjb2 *  ;
                                 INT((sbsj -  ;
                                 sbsk) /  ;
                                 sjjb2)
                    ENDIF
                    IF sjjb1 > 0  ;
                       .AND. xbsk -  ;
                       xbsj >  ;
                       sjjb1
                         mxrjb_rate =  ;
                          mxrjb /  ;
                          (sjjb2 *  ;
                          INT((xbsk -  ;
                          xbsj) /  ;
                          sjjb2))
                         IF mxrjb_rate <  ;
                            0.9   ;
                            .OR.  ;
                            mxrjb_rate >  ;
                            1.1 
                              REPLACE  ;
                               jbss  ;
                               WITH  ;
                               jbss +  ;
                               sjjb2 *  ;
                               INT((xbsk -  ;
                               xbsj) /  ;
                               sjjb2)
                         ENDIF
                    ENDIF
               CASE sbsj <= sbsk  ;
                    .AND. sbsk >=  ;
                    xbsj .AND.  ;
                    xbsj <= xbsk  ;
                    .AND. sbsk >=  ;
                    xbsk .AND.  ;
                    sbsj >= xbsj
                    IF sjjb1 > 0  ;
                       .AND. xbsk -  ;
                       xbsj >  ;
                       sjjb1
                         mxrjb_rate =  ;
                          mxrjb /  ;
                          (sjjb2 *  ;
                          INT((xbsk -  ;
                          xbsj) /  ;
                          sjjb2))
                         IF mxrjb_rate <  ;
                            0.9   ;
                            .OR.  ;
                            mxrjb_rate >  ;
                            1.1 
                              REPLACE  ;
                               jbss  ;
                               WITH  ;
                               jbss +  ;
                               sjjb2 *  ;
                               INT((xbsk -  ;
                               xbsj) /  ;
                               sjjb2)
                         ENDIF
                    ENDIF
               CASE sbsk <= sbsj  ;
                    .AND. sbsj >=  ;
                    xbsk .AND.  ;
                    xbsk <= xbsj  ;
                    .AND. sbsk >=  ;
                    xbsk .AND.  ;
                    sbsj >= xbsj
                    IF sjjb0 > 0  ;
                       .AND. sbsj -  ;
                       sbsk >  ;
                       sjjb0
                         REPLACE jbss  ;
                                 WITH  ;
                                 jbss +  ;
                                 sjjb2 *  ;
                                 INT((sbsj -  ;
                                 sbsk) /  ;
                                 sjjb2)
                    ENDIF
               CASE sbsk <= sbsj  ;
                    .AND. sbsj <=  ;
                    xbsj .AND.  ;
                    xbsj >= xbsk  ;
                    .AND. sbsk >=  ;
                    xbsk
                    IF sjjb0 > 0  ;
                       .AND. sbsj -  ;
                       sbsk >  ;
                       sjjb0
                         REPLACE jbss  ;
                                 WITH  ;
                                 jbss +  ;
                                 sjjb2 *  ;
                                 INT((sbsj -  ;
                                 sbsk) /  ;
                                 sjjb2)
                    ENDIF
                    IF sjjb1 > 0  ;
                       .AND. 1440 +  ;
                       xbsk -  ;
                       xbsj >  ;
                       sjjb1
                         mxrjb_rate =  ;
                          mxrjb /  ;
                          (sjjb2 *  ;
                          INT((1440 +  ;
                          xbsk -  ;
                          xbsj) /  ;
                          sjjb2))
                         IF mxrjb_rate <  ;
                            0.9   ;
                            .OR.  ;
                            mxrjb_rate >  ;
                            1.1 
                              REPLACE  ;
                               jbss  ;
                               WITH  ;
                               jbss +  ;
                               sjjb2 *  ;
                               INT((1440 +  ;
                               xbsk -  ;
                               xbsj) /  ;
                               sjjb2)
                         ENDIF
                    ENDIF
               CASE sbsj <= sbsk  ;
                    .AND. sbsk <=  ;
                    xbsj .AND.  ;
                    xbsj >= xbsk  ;
                    .AND. sbsj >=  ;
                    xbsj
                    IF sjjb1 > 0  ;
                       .AND. 1440 +  ;
                       xbsk -  ;
                       xbsj >  ;
                       sjjb1
                         mxrjb_rate =  ;
                          mxrjb /  ;
                          (sjjb2 *  ;
                          INT((1440 +  ;
                          xbsk -  ;
                          xbsj) /  ;
                          sjjb2))
                         IF mxrjb_rate <  ;
                            0.9   ;
                            .OR.  ;
                            mxrjb_rate >  ;
                            1.1 
                              REPLACE  ;
                               jbss  ;
                               WITH  ;
                               jbss +  ;
                               sjjb2 *  ;
                               INT((1440 +  ;
                               xbsk -  ;
                               xbsj) /  ;
                               sjjb2)
                         ENDIF
                    ENDIF
               CASE sbsk <= sbsj  ;
                    .AND. sbsj <=  ;
                    xbsk .AND.  ;
                    xbsk >= xbsj  ;
                    .AND. sbsj >=  ;
                    xbsj
                    IF sjjb0 > 0  ;
                       .AND. sbsj -  ;
                       sbsk >  ;
                       sjjb0
                         REPLACE jbss  ;
                                 WITH  ;
                                 jbss +  ;
                                 sjjb2 *  ;
                                 INT((sbsj -  ;
                                 sbsk) /  ;
                                 sjjb2)
                    ENDIF
          ENDCASE
          mzgbh = zgbh
          mdate = CTOD(riqi)
          mcqss = cqss
     ENDIF
     IF jbss > 0
          REPLACE jbts WITH jbss /  ;
                  sjcq
          DO CASE
               CASE zdcl = 0
                    REPLACE zdcl  ;
                            WITH  ;
                            92
               CASE rgcl = 0
                    REPLACE rgcl  ;
                            WITH  ;
                            92
               OTHERWISE
                    REPLACE zdcl  ;
                            WITH  ;
                            rgcl,  ;
                            rgcl  ;
                            WITH  ;
                            92
          ENDCASE
     ENDIF
     njb = .F.
     IF njbflag > 0 .AND. (xbsk <  ;
        sbsk .OR. xbsk > 1440  ;
        .OR. sbsk < delta0) .AND.  ;
        jbss > 0 .AND. lb = '3'
          nzgbh = zgbh
          ndate = CTOD(riqi)
          njb = .T.
     ENDIF
     mkqlb = IIF(rgcl = 0, zdcl,  ;
             rgcl)
     IF ((mkqlb = 0 .OR. mkqlb =  ;
        73) .AND. sbsk > 0 .AND.  ;
        xbsk > 0) .OR. (mkqlb >=  ;
        80 .AND. mkqlb <= 83  ;
        .AND. cdss + ztss > 120)  ;
        .OR. mkqlb = 85
          mflag = .F.
          IF nzgbh <> zgbh .OR.  ;
             ndate <> CTOD(riqi)  ;
             .OR. kkqlb = 0
               kzgbh = zgbh
               kdate = CTOD(riqi)
               mrec = RECNO()
               SKIP
               IF  .NOT. EOF()  ;
                   .AND. kzgbh =  ;
                   zgbh .AND.  ;
                   kdate =  ;
                   CTOD(riqi)
                    mkqlb = IIF(rgcl =  ;
                            0,  ;
                            zdcl,  ;
                            rgcl)
                    IF  .NOT.  ;
                        ((mkqlb =  ;
                        0 .OR.  ;
                        mkqlb =  ;
                        73) .AND.  ;
                        sbsk > 0  ;
                        .AND.  ;
                        xbsk > 0)  ;
                        .AND.   ;
                        .NOT.  ;
                        (mkqlb >=  ;
                        80 .AND.  ;
                        mkqlb <=  ;
                        83 .AND.  ;
                        IIF(xbsk >=  ;
                        sbsk, 0,  ;
                        1440) +  ;
                        xbsk -  ;
                        sbsk <  ;
                        sjcq / 2)  ;
                        .AND.  ;
                        mkqlb <>  ;
                        85
                         mflag = .T.
                    ENDIF
               ENDIF
               GOTO mrec
          ELSE
               mflag = .T.
          ENDIF
          IF mflag
               REPLACE jbss WITH  ;
                       sjjb2 *  ;
                       INT((IIF(xbsk >=  ;
                       sbsk, 0,  ;
                       1440) +  ;
                       xbsk -  ;
                       sbsk) /  ;
                       sjjb2),  ;
                       jbts WITH  ;
                       jbss /  ;
                       sjcq, rgcl  ;
                       WITH 92,  ;
                       zdcl WITH  ;
                       0
               REPLACE cqss WITH  ;
                       0, cqts  ;
                       WITH 0,  ;
                       cdss WITH  ;
                       0, ztss  ;
                       WITH 0,  ;
                       kgss WITH  ;
                       0, kgts  ;
                       WITH 0
          ENDIF
     ENDIF
     nzgbh = zgbh
     ndate = CTOD(riqi)
     kkqlb = IIF(cqss > 0, 1, 0)
ENDSCAN
RETURN
ENDPROC
**
PROCEDURE jjrjb
SELECT clfx
SET RELATION TO zgbh INTO zg
SET RELATION ADDITIVE TO bc INTO time
SCAN FOR  .NOT. pub_escape
     IF pub_language
          obj_form4.txt_msg1.value =  ;
           "Overtime in holiday..." +  ;
           zgbh + " " + riqi
     ELSE
          obj_form4.txt_msg1.value =  ;
           "节假日、休日加班..." +  ;
           zgbh + " " + riqi
     ENDIF
     IF (zdcl = 0 .AND. rgcl > 92  ;
        .AND. rgcl < 95) .OR.  ;
        zdcl = 1 .OR. zdcl = 15
          REPLACE xrcolor WITH  ;
                  rgb_holiday
     ENDIF
     IF (zdcl >= 93 .AND. zdcl <=  ;
        94) .OR. (rgcl >= 93  ;
        .AND. rgcl <= 94)
          REPLACE planbc WITH ''
     ENDIF
     IF zg.zdjb < "1" .OR. zdcl =  ;
        93 .OR. zdcl = 94 .OR.  ;
        sbsk = 0 .OR. xbsk = 0  ;
        .OR. (zdcl <> 1 .AND.  ;
        zdcl <> 15)
          LOOP
     ENDIF
     IF zg.zdjb = "3" .OR.  ;
        zg.zdjb = "5" .OR.  ;
        zg.zdjb = "6" .OR.  ;
        zg.zdjb = "7"
          SELECT xjjl_j
          SEEK STR(MONTH(CTOD(clfx.riqi)),  ;
               2) +  ;
               STR(DAY(CTOD(clfx.riqi)),  ;
               2) 
          IF FOUND()
               SELECT clfx
               msbsk = sbsk
               mxbsk = IIF(sbsk >  ;
                       xbsk, 1440 +  ;
                       xbsk,  ;
                       xbsk)
               IF  .NOT.  ;
                   EMPTY(bc)
                    mzjks = time.zjks
                    mzjjs = IIF(time.zjks >  ;
                            time.zjjs,  ;
                            1440 +  ;
                            time.zjjs,  ;
                            time.zjjs)
                    DO CASE
                         CASE mzjks >=  ;
                              msbsk  ;
                              .AND.  ;
                              mzjks <=  ;
                              mxbsk  ;
                              .AND.  ;
                              mzjjs >=  ;
                              msbsk  ;
                              .AND.  ;
                              mzjjs <=  ;
                              mxbsk
                              mzjxx =  ;
                               time.zjxx
                         CASE mzjks <=  ;
                              msbsk  ;
                              .AND.  ;
                              mzjjs >=  ;
                              mxbsk
                              mzjxx =  ;
                               mxbsk -  ;
                               msbsk
                         CASE mzjks <=  ;
                              msbsk  ;
                              .AND.  ;
                              mzjjs >=  ;
                              msbsk  ;
                              .AND.  ;
                              mzjjs <=  ;
                              mxbsk
                              mzjxx =  ;
                               mzjjs -  ;
                               msbsk
                         CASE mzjks >=  ;
                              msbsk  ;
                              .AND.  ;
                              mzjks <=  ;
                              mxbsk  ;
                              .AND.  ;
                              mzjjs >=  ;
                              mxbsk
                              mzjxx =  ;
                               mxbsk -  ;
                               mzjks
                         OTHERWISE
                              mzjxx =  ;
                               0
                    ENDCASE
                    mzjks1 = time.zjks1
                    mzjjs1 = IIF(time.zjks1 >  ;
                             time.zjjs1,  ;
                             1440 +  ;
                             time.zjjs1,  ;
                             time.zjjs1)
                    DO CASE
                         CASE mzjks1 >=  ;
                              msbsk  ;
                              .AND.  ;
                              mzjks1 <=  ;
                              mxbsk  ;
                              .AND.  ;
                              mzjjs1 >=  ;
                              msbsk  ;
                              .AND.  ;
                              mzjjs1 <=  ;
                              mxbsk
                              mzjxx1 =  ;
                               time.zjxx1
                         CASE mzjks1 <=  ;
                              msbsk  ;
                              .AND.  ;
                              mzjjs1 >=  ;
                              mxbsk
                              mzjxx1 =  ;
                               mxbsk -  ;
                               msbsk
                         CASE mzjks1 <=  ;
                              msbsk  ;
                              .AND.  ;
                              mzjjs1 >=  ;
                              msbsk  ;
                              .AND.  ;
                              mzjjs1 <=  ;
                              mxbsk
                              mzjxx1 =  ;
                               mzjjs1 -  ;
                               msbsk
                         CASE mzjks1 >=  ;
                              msbsk  ;
                              .AND.  ;
                              mzjks1 <=  ;
                              mxbsk  ;
                              .AND.  ;
                              mzjjs1 >=  ;
                              mxbsk
                              mzjxx1 =  ;
                               mxbsk -  ;
                               mzjks1
                         OTHERWISE
                              mzjxx1 =  ;
                               0
                    ENDCASE
                    REPLACE jbss  ;
                            WITH  ;
                            sjjb2 *  ;
                            INT((mxbsk -  ;
                            msbsk -  ;
                            mzjxx -  ;
                            mzjxx1) /  ;
                            sjjb2)
                    REPLACE jbts  ;
                            WITH  ;
                            IIF(jbss >  ;
                            0,  ;
                            cqts,  ;
                            0)
               ELSE
                    REPLACE jbss  ;
                            WITH  ;
                            sjjb2 *  ;
                            INT((mxbsk -  ;
                            msbsk) /  ;
                            sjjb2)
                    REPLACE jbts  ;
                            WITH  ;
                            jbss /  ;
                            sjcq
               ENDIF
               REPLACE cqss WITH  ;
                       0, cqts  ;
                       WITH 0,  ;
                       qjss WITH  ;
                       0, qjts  ;
                       WITH 0,  ;
                       cdss WITH  ;
                       0, ztss  ;
                       WITH 0,  ;
                       kgss WITH  ;
                       0, kgts  ;
                       WITH 0
               REPLACE rgcl WITH  ;
                       0
               REPLACE zdcl WITH  ;
                       94
               LOOP
          ENDIF
          SELECT clfx
     ENDIF
     msbsk = sbsk
     mxbsk = IIF(sbsk > xbsk,  ;
             1440 + xbsk, xbsk)
     IF  .NOT. EMPTY(bc)
          mzjks = time.zjks
          mzjjs = IIF(time.zjks >  ;
                  time.zjjs, 1440 +  ;
                  time.zjjs,  ;
                  time.zjjs)
          DO CASE
               CASE mzjks >=  ;
                    msbsk .AND.  ;
                    mzjks <=  ;
                    mxbsk .AND.  ;
                    mzjjs >=  ;
                    msbsk .AND.  ;
                    mzjjs <=  ;
                    mxbsk
                    mzjxx = time.zjxx
               CASE mzjks <=  ;
                    msbsk .AND.  ;
                    mzjjs >=  ;
                    mxbsk
                    mzjxx = mxbsk -  ;
                            msbsk
               CASE mzjks <=  ;
                    msbsk .AND.  ;
                    mzjjs >=  ;
                    msbsk .AND.  ;
                    mzjjs <=  ;
                    mxbsk
                    mzjxx = mzjjs -  ;
                            msbsk
               CASE mzjks >=  ;
                    msbsk .AND.  ;
                    mzjks <=  ;
                    mxbsk .AND.  ;
                    mzjjs >=  ;
                    mxbsk
                    mzjxx = mxbsk -  ;
                            mzjks
               OTHERWISE
                    mzjxx = 0
          ENDCASE
          mzjks1 = time.zjks1
          mzjjs1 = IIF(time.zjks1 >  ;
                   time.zjjs1,  ;
                   1440 +  ;
                   time.zjjs1,  ;
                   time.zjjs1)
          DO CASE
               CASE mzjks1 >=  ;
                    msbsk .AND.  ;
                    mzjks1 <=  ;
                    mxbsk .AND.  ;
                    mzjjs1 >=  ;
                    msbsk .AND.  ;
                    mzjjs1 <=  ;
                    mxbsk
                    mzjxx1 = time.zjxx1
               CASE mzjks1 <=  ;
                    msbsk .AND.  ;
                    mzjjs1 >=  ;
                    mxbsk
                    mzjxx1 = mxbsk -  ;
                             msbsk
               CASE mzjks1 <=  ;
                    msbsk .AND.  ;
                    mzjjs1 >=  ;
                    msbsk .AND.  ;
                    mzjjs1 <=  ;
                    mxbsk
                    mzjxx1 = mzjjs1 -  ;
                             msbsk
               CASE mzjks1 >=  ;
                    msbsk .AND.  ;
                    mzjks1 <=  ;
                    mxbsk .AND.  ;
                    mzjjs1 >=  ;
                    mxbsk
                    mzjxx1 = mxbsk -  ;
                             mzjks1
               OTHERWISE
                    mzjxx1 = 0
          ENDCASE
          REPLACE jbss WITH sjjb2 *  ;
                  INT((mxbsk -  ;
                  msbsk - mzjxx -  ;
                  mzjxx1) /  ;
                  sjjb2)
          REPLACE jbts WITH  ;
                  IIF(jbss > 0,  ;
                  cqts, 0)
     ELSE
          REPLACE jbss WITH sjjb2 *  ;
                  INT((mxbsk -  ;
                  msbsk) /  ;
                  sjjb2)
          REPLACE jbts WITH jbss /  ;
                  sjcq
     ENDIF
     REPLACE cqss WITH 0, cqts  ;
             WITH 0, qjss WITH 0,  ;
             qjts WITH 0, cdss  ;
             WITH 0, ztss WITH 0,  ;
             kgss WITH 0, kgts  ;
             WITH 0
     REPLACE rgcl WITH 0
     REPLACE zdcl WITH 93
     SELECT clfx
ENDSCAN
RETURN
ENDPROC
**
FUNCTION TryBc
PARAMETER t_sb, t_xb
bctabsel = 0
pub_delta1 = 9999
pub_delta2 = 9999
pub_flag1 = 0
pub_flag2 = 0
FOR x = 1 TO bctabcnt
     i_sb = bctabsb(x)
     i_xb = bctabxb(x)
     DO CASE
          CASE t_sb >= i_sb .AND.  ;
               t_sb <= i_xb .AND.  ;
               t_xb >= i_sb .AND.  ;
               t_xb <= i_xb .AND.  ;
               ((t_xb <= 1440  ;
               .AND. i_xb <=  ;
               1440) .OR. (t_xb >  ;
               1440 .AND. i_xb >  ;
               1440))
               mx = (t_sb - i_sb) *  ;
                    wtsb2
               my = (i_xb - t_xb) *  ;
                    wtxb2
               mf1 = wtsb2
               mf2 = wtxb2
               imode = 0
          CASE t_sb <= i_sb .AND.  ;
               t_sb <= i_xb .AND.  ;
               t_xb >= i_sb .AND.  ;
               t_xb >= i_xb .AND.  ;
               ((t_xb <= 1440  ;
               .AND. i_xb <=  ;
               1440) .OR. (t_xb >  ;
               1440 .AND. i_xb >  ;
               1440))
               mx = (i_sb - t_sb) *  ;
                    wtsb1
               my = (t_xb - i_xb) *  ;
                    wtxb1
               mf1 = wtsb1
               mf2 = wtxb1
               imode = 1
          CASE t_sb >= i_sb .AND.  ;
               t_sb <= i_xb .AND.  ;
               t_xb >= i_sb .AND.  ;
               t_xb >= i_xb .AND.  ;
               ((t_xb <= 1440  ;
               .AND. i_xb <=  ;
               1440) .OR. (t_xb >  ;
               1440 .AND. i_xb >  ;
               1440))
               mx = (t_sb - i_sb) *  ;
                    wtsb2
               my = (t_xb - i_xb) *  ;
                    wtxb1
               mf1 = wtsb2
               mf2 = wtxb1
               imode = 0
          CASE t_sb <= i_sb .AND.  ;
               t_sb <= i_xb .AND.  ;
               t_xb >= i_sb .AND.  ;
               t_xb <= i_xb .AND.  ;
               ((t_xb <= 1440  ;
               .AND. i_xb <=  ;
               1440) .OR. (t_xb >  ;
               1440 .AND. i_xb >  ;
               1440))
               mx = (i_sb - t_sb) *  ;
                    wtsb1
               my = (i_xb - t_xb) *  ;
                    wtxb2
               mf1 = wtsb1 +  ;
                     wtxb2
               mf2 = wtsb1 +  ;
                     wtxb2
               imode = 0
          CASE t_sb >= i_sb .AND.  ;
               t_sb <= i_xb .AND.  ;
               t_xb >= i_sb .AND.  ;
               t_xb <= i_xb .AND.  ;
               t_xb <= 1440 .AND.  ;
               i_xb > 1440
               mx = (t_sb - i_sb) *  ;
                    wtsb2
               my = (i_xb - t_xb) *  ;
                    wtxb2
               mf1 = wtsb2
               mf2 = wtxb2
               imode = 0
          CASE 1440 + t_sb >=  ;
               i_sb .AND. 1440 +  ;
               t_sb <= i_xb .AND.  ;
               1440 + t_xb >=  ;
               i_sb .AND. 1440 +  ;
               t_xb <= i_xb .AND.  ;
               t_xb <= 1440 .AND.  ;
               i_xb > 1440
               mx = (1440 + t_sb -  ;
                    i_sb) *  ;
                    wtsb2
               my = (1440 + i_xb -  ;
                    t_xb) *  ;
                    wtxb2
               mf1 = wtsb2
               mf2 = wtxb2
               imode = 0
          CASE t_sb <= i_sb .AND.  ;
               t_sb <= i_xb .AND.  ;
               t_xb >= i_sb .AND.  ;
               t_xb <= i_xb .AND.  ;
               t_xb <= 1440 .AND.  ;
               i_xb > 1440
               mx = (i_sb - t_sb) *  ;
                    wtsb1
               my = (i_xb - t_xb) *  ;
                    wtxb2
               mf1 = wtsb1
               mf2 = wtxb2
               imode = 0
          CASE 1440 + t_sb >=  ;
               i_sb .AND. 1440 +  ;
               t_sb <= i_xb .AND.  ;
               1440 + t_xb >=  ;
               i_sb .AND. 1440 +  ;
               t_xb >= i_xb .AND.  ;
               t_xb <= 1440 .AND.  ;
               i_xb > 1440
               mx = (1440 + t_sb -  ;
                    i_sb) *  ;
                    wtsb2
               my = (1440 + t_xb -  ;
                    i_xb) *  ;
                    wtxb1
               mf1 = wtsb2
               mf2 = wtxb1
               imode = 0
          CASE t_sb <= i_sb .AND.  ;
               t_sb <= i_xb .AND.  ;
               t_xb >= i_sb .AND.  ;
               t_xb >= i_xb .AND.  ;
               t_xb > 1440 .AND.  ;
               i_xb <= 1440
               mx = (i_sb - t_sb) *  ;
                    wtsb1
               my = (t_xb - i_xb) *  ;
                    wtxb1
               mf1 = wtsb1
               mf2 = wtxb1
               imode = 2
          CASE t_sb <= 1440 +  ;
               i_sb .AND. t_sb <=  ;
               1440 + i_xb .AND.  ;
               t_xb >= 1440 +  ;
               i_sb .AND. t_xb >=  ;
               1440 + i_xb .AND.  ;
               t_xb > 1440 .AND.  ;
               i_xb <= 1440
               mx = (1440 + i_sb -  ;
                    t_sb) *  ;
                    wtsb1
               my = (t_xb - i_xb -  ;
                    1440) *  ;
                    wtxb1
               mf1 = wtsb1
               mf2 = wtxb1
               imode = 3
          CASE t_sb >= i_sb .AND.  ;
               t_sb <= i_xb .AND.  ;
               t_xb >= i_sb .AND.  ;
               t_xb >= i_xb .AND.  ;
               t_xb > 1440 .AND.  ;
               i_xb <= 1440
               mx = (t_sb - i_sb) *  ;
                    wtsb2
               my = (t_xb - i_xb) *  ;
                    wtxb1
               mf1 = wtsb2
               mf2 = wtxb1
               imode = 0
          CASE t_sb <= 1440 +  ;
               i_sb .AND. t_sb <=  ;
               1440 + i_xb .AND.  ;
               t_xb >= 1440 +  ;
               i_sb .AND. t_xb <=  ;
               1440 + i_xb .AND.  ;
               t_xb > 1440 .AND.  ;
               i_xb <= 1440
               mx = (1440 + i_sb -  ;
                    t_sb) *  ;
                    wtsb1
               my = (1440 + i_xb -  ;
                    t_xb) *  ;
                    wtxb2
               mf1 = wtsb1
               mf2 = wtxb2
               imode = 0
          OTHERWISE
               mx = 9999
               my = 9999
               mf1 = 0
               mf2 = 0
               imode = 0
     ENDCASE
     IF mx + my < pub_delta1 +  ;
        pub_delta2
          pub_delta1 = mx
          pub_delta2 = my
          pub_flag1 = mf1
          pub_flag2 = mf2
          bctabsel = x
     ENDIF
ENDFOR
IF pub_delta1 < pub_flag1 *  ;
   delta4 .AND. pub_delta2 <  ;
   pub_flag2 * delta4
     iret = pub_delta1 +  ;
            pub_delta2
ELSE
     iret = 9999
ENDIF
RETURN iret
ENDFUNC
**
PROCEDURE GetBcTab
IF clfx.bc = currentbc .AND.  ;
   currentbc <> '@@@'
     RETURN
ENDIF
IF  .NOT. EMPTY(clfx.bc) .AND.  ;
    (clfx.bc <> currentbc .OR.  ;
    EMPTY(currentbc))
     SELECT time
     SEEK clfx.bc 
     IF  .NOT. EOF()
          bctabcnt = 1
          bctabbh(bctabcnt) = bc
          bctablb(bctabcnt) = lb
          bctabsb(bctabcnt) =  ;
                 sbsj
          IF xbsj <= sbsj
               bctabxb(bctabcnt) =  ;
                      xbsj +  ;
                      1440
          ELSE
               bctabxb(bctabcnt) =  ;
                      xbsj
          ENDIF
          bctabss(bctabcnt) = ss
          bctabts(bctabcnt) = ts
     ELSE
          bctabcnt = 0
     ENDIF
ELSE
     bctabcnt = 0
     SELECT time
     SCAN
          bctabcnt = bctabcnt + 1
          IF bctabcnt > bctabbou
               currentbc = clfx.bc
               RETURN
          ENDIF
          bctabbh(bctabcnt) = bc
          bctablb(bctabcnt) = lb
          bctabsb(bctabcnt) =  ;
                 sbsj
          IF xbsj <= sbsj
               bctabxb(bctabcnt) =  ;
                      xbsj +  ;
                      1440
          ELSE
               bctabxb(bctabcnt) =  ;
                      xbsj
          ENDIF
          bctabss(bctabcnt) = ss
          bctabts(bctabcnt) = ts
     ENDSCAN
ENDIF
currentbc = clfx.bc
RETURN
ENDPROC
**
FUNCTION ChkQingJia
LPARAMETERS direction
IF EMPTY(clfx.bc)
     RETURN .F.
ENDIF
cqj_ret = .F.
cqj_area = LTRIM(STR(SELECT()))
SELECT xjjl_d
SEEK clfx.zgbh + clfx.riqi 
DO WHILE  .NOT. EOF() .AND.  ;
   clfx.zgbh=zgbh .AND. clfx.riqi= ;
   riqi
     IF kqlb > 0 .AND. kqlb < 30
          IF direction = 0
               IF kssj > 0 .AND.  ;
                  clfx.sbsj > 0  ;
                  .AND. ABS(kssj -  ;
                  clfx.sbsj) <  ;
                  10
                    cqj_ret = .T.
                    EXIT
               ENDIF
          ELSE
               IF jssj > 0 .AND.  ;
                  clfx.xbsj > 0  ;
                  .AND. ABS(jssj -  ;
                  clfx.xbsj) <  ;
                  10
                    cqj_ret = .T.
                    EXIT
               ENDIF
          ENDIF
     ENDIF
     SKIP
ENDDO
select &cqj_area
RETURN cqj_ret
ENDFUNC
**
***
*** organization.fxp
***
*
SET SAFETY OFF
SET CENTURY ON
SET EXACT ON
SET DATE YMD
SET DELETED ON
SET EXCLUSIVE OFF
CREATE CURSOR organ (rid N (2),  ;
       rank01 C (20) NULL, name01  ;
       C (20) NULL, rank02 C (20)  ;
       NULL, name02 C (20) NULL,  ;
       rank03 C (20) NULL, name03  ;
       C (20) NULL, rank04 C (20)  ;
       NULL, name04 C (20) NULL,  ;
       rank05 C (20) NULL, name05  ;
       C (20) NULL, rank06 C (20)  ;
       NULL, name06 C (20) NULL,  ;
       rank07 C (20) NULL, name07  ;
       C (20) NULL, rank08 C (20)  ;
       NULL, name08 C (20) NULL,  ;
       rank09 C (20) NULL, name09  ;
       C (20) NULL, rank10 C (20)  ;
       NULL, name10 C (20) NULL,  ;
       note C (100) NULL, bmbh C  ;
       (6) NULL, rel_row N (2)  ;
       NULL, rel_col N (2) NULL)
PUBLIC run_mode
IF  .NOT. run_mode
     inaccess = SQLCONNECT("ant2000",  ;
                "ant",  ;
                "tct1810")
ENDIF
sqlcmd = "select a.gyxz,a.zgxm,a.bmbh,b.bmmc,a.zw as zwbh,c.name as zwmc" +  ;
         " from rs_zg a left join rs_bm b on a.bmbh=b.bmbh" +  ;
         " left join rs_cd_zw c on a.zw=c.code where b.bmmc is not null"
SQLEXEC(inaccess, sqlcmd, "bmzw")
DELETE FROM bmzw WHERE  ;
       EMPTY(bmbh) .OR.  ;
       ISNULL(bmbh)
IF  .NOT. USED("bmzw")
     MESSAGEBOX("没有有效数据，执行被取消。")
     RETURN
ENDIF
CREATE CURSOR tmp_rowcol (bmbh C  ;
       (6) NULL, zwbh N (3) NULL,  ;
       rowindex N (2) NULL,  ;
       colindex N (2) NULL)
SELECT bmbh, zwbh, COUNT(*) AS  ;
       recnum FROM bmzw WHERE   ;
       NOT EMPTY(bmbh) GROUP BY  ;
       bmbh, zwbh ORDER BY bmbh,  ;
       zwbh INTO CURSOR g_bmzw
SCAN
     INSERT INTO tmp_rowcol (bmbh,  ;
            zwbh) VALUES  ;
            (ALLTRIM(g_bmzw.bmbh),  ;
            g_bmzw.zwbh)
ENDSCAN
GOTO TOP
tmp_recno = 1
tmp_bmbh = ALLTRIM(g_bmzw.bmbh)
SELECT g_bmzw
SCAN
     IF  .NOT. tmp_bmbh $  ;
         ALLTRIM(g_bmzw.bmbh)
          tmp_recno = tmp_recno +  ;
                      1
     ENDIF
     IF ISNULL(g_bmzw.zwbh)
          SELECT * FROM bmzw  ;
                   WHERE  ;
                   ALLTRIM(bmbh) ==  ;
                   ALLTRIM(g_bmzw.bmbh)  ;
                   AND  ;
                   ISNULL(zwbh)  ;
                   INTO CURSOR  ;
                   tmp
     ELSE
          SELECT * FROM bmzw  ;
                   WHERE  ;
                   ALLTRIM(bmbh) ==  ;
                   ALLTRIM(g_bmzw.bmbh)  ;
                   AND zwbh =  ;
                   g_bmzw.zwbh  ;
                   INTO CURSOR  ;
                   tmp
     ENDIF
     len_bmbh = LEN(ALLTRIM(g_bmzw.bmbh))
     DO CASE
          CASE len_bmbh = 0
               LOOP
          CASE len_bmbh = 1
               tmp_rankfield = "rank01"
               tmp_namefield = "name01"
          CASE len_bmbh = 2
               tmp_rankfield = "rank02"
               tmp_namefield = "name02"
          CASE len_bmbh = 3
               IF ALLTRIM(zwmc) ==  ;
                  "部长"
                    tmp_rankfield =  ;
                     "rank03"
                    tmp_namefield =  ;
                     "name03"
               ELSE
                    tmp_rankfield =  ;
                     "rank04"
                    tmp_namefield =  ;
                     "name04"
               ENDIF
          CASE len_bmbh = 4
               IF ALLTRIM(zwmc) ==  ;
                  "课长"
                    tmp_rankfield =  ;
                     "rank04"
                    tmp_namefield =  ;
                     "name04"
               ELSE
                    tmp_rankfield =  ;
                     "rank05"
                    tmp_namefield =  ;
                     "name05"
               ENDIF
          CASE len_bmbh = 5
               IF ALLTRIM(zwmc) ==  ;
                  "系长"
                    tmp_rankfield =  ;
                     "rank06"
                    tmp_namefield =  ;
                     "name06"
               ELSE
                    tmp_rankfield =  ;
                     "rank07"
                    tmp_namefield =  ;
                     "name07"
               ENDIF
          CASE len_bmbh = 6
               IF ALLTRIM(zwmc) ==  ;
                  "班长"
                    tmp_rankfield =  ;
                     "rank08"
                    tmp_namefield =  ;
                     "name08"
               ELSE
                    tmp_rankfield =  ;
                     "rank09"
                    tmp_namefield =  ;
                     "name09"
               ENDIF
     ENDCASE
     IF ISNULL(zwbh)
          tmp_rankfield = "rank09"
          tmp_namefield = "name09"
     ENDIF
     tmp_namevalue = ""
     DO CASE
          CASE RECCOUNT("tmp") =  ;
               1
               tmp_namevalue = ALLTRIM(tmp.zgxm)
          CASE RECCOUNT("tmp") =  ;
               2
               SCAN
                    IF EMPTY(tmp_namevalue)
                         tmp_namevalue =  ;
                          ALLTRIM(tmp.zgxm)
                    ELSE
                         tmp_namevalue =  ;
                          tmp_namevalue +  ;
                          " " +  ;
                          ALLTRIM(tmp.zgxm)
                    ENDIF
               ENDSCAN
               GOTO TOP
          CASE RECCOUNT("tmp") >  ;
               2
               tmp_namevalue = ALLTRIM(STR(RECCOUNT("tmp"))) +  ;
                               "人"
               IF ISNULL(tmp.zwmc)  ;
                  .OR.  ;
                  EMPTY(tmp.zwmc)
                    tmp_namevalue =  ;
                     "员工 " +  ;
                     tmp_namevalue
               ENDIF
     ENDCASE
     tmp_rankvalue = ""
     DO CASE
          CASE ALLTRIM(tmp.zwmc) ==  ;
               "翻译"
               tmp_rankvalue = "翻译"
          CASE len_bmbh <= 2
               tmp_rankvalue = ALLTRIM(tmp.bmmc)
          CASE ISNULL(tmp.zwmc)  ;
               .OR.  ;
               EMPTY(tmp.zwmc)
               tmp_rankvalue = ALLTRIM(tmp.bmmc)
          OTHERWISE
               m = ALLTRIM(tmp.bmmc)
               tmp_rankvalue = SUBSTR(m,  ;
                               1,  ;
                               LEN(m) -  ;
                               2) +  ;
                               IIF(ISNULL(tmp.zwmc),  ;
                               "",  ;
                               ALLTRIM(tmp.zwmc))
               IF LEN(tmp_rankvalue) >  ;
                  13 .AND.  ;
                  LEN(IIF(ISNULL(tmp.zwmc),  ;
                  "",  ;
                  ALLTRIM(tmp.zwmc)) +  ;
                  " " +  ;
                  tmp_namevalue) <=  ;
                  13
                    tmp_rankvalue =  ;
                     SUBSTR(m, 1,  ;
                     LEN(m) - 2)
                    tmp_namevalue =  ;
                     IIF(ISNULL(tmp.zwmc),  ;
                     "",  ;
                     ALLTRIM(tmp.zwmc)) +  ;
                     " " +  ;
                     tmp_namevalue
               ENDIF
     ENDCASE
     IF LEFT(tmp.bmmc, 6) ==  ;
        "临时工"
          SELECT COUNT(*) AS  ;
                 lsgrs FROM bmzw  ;
                 WHERE  ;
                 ALLTRIM(bmbh) ==  ;
                 ALLTRIM(g_bmzw.bmbh)  ;
                 AND gyxz = 4  ;
                 INTO CURSOR  ;
                 tmpxx
          tmp_rankvalue = "临时工"
          tmp_namevalue = ALLTRIM(STR(lsgrs)) +  ;
                          "人"
     ENDIF
     IF RECCOUNT("organ") =  ;
        tmp_recno
          update organ set &tmp_rankfield.=tmp_rankvalue,;
&tmp_namefield.=tmp_namevalue where recno()=tmp_recno
          SELECT bmbh FROM organ  ;
                 WHERE RECNO() =  ;
                 tmp_recno INTO  ;
                 CURSOR tmp_bmbh
          IF LEN(ALLTRIM(tmp.bmbh)) <  ;
             LEN(ALLTRIM(bmbh))
               UPDATE organ SET  ;
                      bmbh =  ;
                      ALLTRIM(tmp.bmbh)  ;
                      WHERE  ;
                      RECNO() =  ;
                      tmp_recno
          ENDIF
     ELSE
          insertcmd="insert into organ(rid,&tmp_rankfield.,&tmp_namefield.,bmbh)";
+"values(tmp_recno,tmp_rankvalue,tmp_namevalue,alltrim(tmp.bmbh))"
          &insertcmd
     ENDIF
     tmp_col = VAL(RIGHT(tmp_rankfield,  ;
               2))
     UPDATE tmp_rowcol SET  ;
            rowindex = tmp_recno,  ;
            colindex = tmp_col  ;
            WHERE ALLTRIM(bmbh) ==  ;
            ALLTRIM(g_bmzw.bmbh)  ;
            .AND. zwbh =  ;
            g_bmzw.zwbh
     IF ALLTRIM(tmp.zwmc) ==  ;
        "翻译"
          tmp_recno = tmp_recno +  ;
                      1
     ENDIF
     tmp_bmbh = ALLTRIM(g_bmzw.bmbh)
ENDSCAN
tmp_zwbh = 0
SELECT zwbh FROM bmzw WHERE  ;
       ALLTRIM(zwmc) == "翻译"  ;
       INTO CURSOR tmp
IF RECCOUNT("tmp") > 0
     tmp_zwbh = tmp.zwbh
ENDIF
SELECT organ
SCAN
     IF rid = 1
          LOOP
     ENDIF
     m = ALLTRIM(bmbh)
     SELECT bmbh, rowindex,  ;
            colindex FROM  ;
            tmp_rowcol a WHERE  ;
            ALLTRIM(bmbh) =  ;
            (SELECT  ;
            MAX(ALLTRIM(bmbh))  ;
            FROM tmp_rowcol WHERE  ;
            ALLTRIM(bmbh) ==  ;
            LEFT(m,  ;
            LEN(ALLTRIM(bmbh)))  ;
            AND  NOT  ;
            (ALLTRIM(bmbh) ==  ;
            ALLTRIM(organ.bmbh))  ;
            AND zwbh <> tmp_zwbh)  ;
            AND zwbh <> tmp_zwbh  ;
            ORDER BY zwbh INTO  ;
            CURSOR tmp
     IF EOF("tmp")
          LOOP
     ENDIF
     GOTO BOTTOM
     SELECT organ
     REPLACE rel_row WITH  ;
             tmp.rowindex,  ;
             rel_col WITH  ;
             tmp.colindex
ENDSCAN
sqlcmd = "select a.zgbh,a.zgxm,b.name as xbmc,a.lzsj,a.jzsj,a.zw,c.name as zwmc" +  ;
         " from rs_zg a left join sys_cd_xb b on a.xb=b.code" +  ;
         " left join rs_cd_zw c on a.zw=c.code"
SQLEXEC(inaccess, sqlcmd, "rszg")
DELETE FROM rszg WHERE  ;
       YEAR(CTOD(lzsj)) * 100 +  ;
       MONTH(CTOD(lzsj)) <  ;
       YEAR(DATE()) * 100 +  ;
       MONTH(DATE()) .AND.  .NOT.  ;
       EMPTY(CTOD(lzsj))
SELECT rszg
COUNT FOR YEAR(CTOD(jzsj)) * 100 +  ;
      MONTH(CTOD(jzsj)) =  ;
      YEAR(DATE()) * 100 +  ;
      MONTH(DATE()) TO tmp_xjrs
COUNT FOR  .NOT.  ;
      EMPTY(CTOD(lzsj)) TO  ;
      tmp_lzrs
COUNT FOR EMPTY(CTOD(lzsj)) TO  ;
      tmp_zrs
SELECT organ
GOTO TOP
REPLACE note WITH "期初人数：" +  ;
        ALLTRIM(STR(tmp_zrs +  ;
        tmp_lzrs - tmp_xjrs)) +  ;
        " " + "期末人数：" +  ;
        ALLTRIM(STR(tmp_zrs))
SKIP
REPLACE note WITH "本月新进员工 " +  ;
        ALLTRIM(STR(tmp_xjrs)) +  ;
        "人"
SKIP
REPLACE note WITH "本月离职员工 " +  ;
        ALLTRIM(STR(tmp_lzrs)) +  ;
        "人"
DELETE FROM rszg WHERE  .NOT.  ;
       EMPTY(CTOD(lzsj))
SELECT COUNT(*) AS rs, xbmc FROM  ;
       rszg GROUP BY xbmc INTO  ;
       CURSOR tmp
tmp_zs = "总员工：" +  ;
         ALLTRIM(STR(tmp_zrs)) +  ;
         "名 ("
SCAN
     IF  .NOT. EMPTY(xbmc) .AND.   ;
         .NOT. ISNULL(xbmc)
          tmp_zs = tmp_zs +  ;
                   ALLTRIM(xbmc) +  ;
                   ALLTRIM(STR(rs)) +  ;
                   ","
     ELSE
          tmp_zs = tmp_zs +  ;
                   "未知" +  ;
                   ALLTRIM(STR(rs)) +  ;
                   ","
     ENDIF
ENDSCAN
tmp_zs = SUBSTR(tmp_zs, 1,  ;
         LEN(tmp_zs) - 1) + ")"
SELECT COUNT(*) AS rs FROM rszg  ;
       WHERE ISNULL(zwmc) OR  ;
       EMPTY(zwmc) INTO CURSOR  ;
       tmp
tmp_ptzy = "职员：" +  ;
           ALLTRIM(STR(rs)) +  ;
           "名 ("
SELECT COUNT(*) AS rs, xbmc FROM  ;
       rszg WHERE ISNULL(zwmc) OR  ;
       EMPTY(zwmc) GROUP BY xbmc  ;
       INTO CURSOR tmp
SCAN
     IF  .NOT. EMPTY(xbmc) .AND.   ;
         .NOT. ISNULL(xbmc)
          tmp_ptzy = tmp_ptzy +  ;
                     ALLTRIM(xbmc) +  ;
                     ALLTRIM(STR(rs)) +  ;
                     ","
     ELSE
          tmp_ptzy = tmp_ptzy +  ;
                     "未知" +  ;
                     ALLTRIM(STR(rs)) +  ;
                     ","
     ENDIF
ENDSCAN
tmp_ptzy = SUBSTR(tmp_ptzy, 1,  ;
           LEN(tmp_ptzy) - 1) +  ;
           ")"
DELETE FROM rszg WHERE  ;
       ISNULL(zwmc)
DELETE FROM rszg WHERE  ;
       EMPTY(zwmc)
SELECT rszg
COUNT TO tmp
tmp_gjzy = "[以上小计：" +  ;
           ALLTRIM(STR(tmp)) +  ;
           "名 ("
SELECT COUNT(*) AS rs, xbmc FROM  ;
       rszg GROUP BY xbmc INTO  ;
       CURSOR tmp
SCAN
     IF  .NOT. EMPTY(xbmc) .AND.   ;
         .NOT. ISNULL(xbmc)
          tmp_gjzy = tmp_gjzy +  ;
                     ALLTRIM(xbmc) +  ;
                     ALLTRIM(STR(rs)) +  ;
                     ","
     ELSE
          tmp_gjzy = tmp_gjzy +  ;
                     "未知" +  ;
                     ALLTRIM(STR(rs)) +  ;
                     ","
     ENDIF
ENDSCAN
tmp_gjzy = SUBSTR(tmp_gjzy, 1,  ;
           LEN(tmp_gjzy) - 1) +  ;
           ")]"
SELECT organ
GOTO BOTTOM
REPLACE note WITH tmp_zs
SKIP -1
REPLACE note WITH tmp_ptzy
SKIP -1
REPLACE note WITH tmp_gjzy
SELECT zwmc, COUNT(*) AS rs FROM  ;
       rszg ORDER BY zw INTO  ;
       CURSOR tmp GROUP BY zw,  ;
       zwmc
IF RECCOUNT("tmp") + 6 <  ;
   RECCOUNT("organ")
     SELECT organ
     GOTO TOP
     GOTO 3 + (RECCOUNT("organ") -  ;
          6 - RECCOUNT("tmp")) +  ;
          1
     SELECT tmp
     SCAN
          SELECT organ
          REPLACE note WITH  ;
                  ALLTRIM(tmp.zwmc) +  ;
                  "：" +  ;
                  ALLTRIM(STR(tmp.rs)) +  ;
                  "名"
          SKIP IN organ
     ENDSCAN
ENDIF
SQLEXEC(inaccess,  ;
       "delete from rs_organization" ;
       )
SELECT organ
SCAN
     sqlcmd = "insert into rs_organization(rid,rank01,name01,rank02,name02,rank03,name03,rank04,name04," +  ;
              "rank05,name05,rank06,name06,rank07,name07,rank08,name08,rank09,name09,rank10,name10,note," +  ;
              "bmbh,rel_row,rel_col) values(?rid,?rank01,?name01,?rank02,?name02,?rank03,?name03," +  ;
              "?rank04,?name04,?rank05,?name05,?rank06,?name06,?rank07,?name07,?rank08,?name08,?rank09,?name09," +  ;
              "?rank10,?name10,?note,?bmbh,?rel_row,?rel_col)"
     IF SQLEXEC(inaccess, sqlcmd) <  ;
        0
          MESSAGEBOX("把人事组织结构图数据写入数据库时发生错误！")
          EXIT
     ENDIF
ENDSCAN
USE
IF  .NOT. run_mode
     SQLDISCONNECT(inaccess)
ENDIF
RETURN
ENDPROC
**
***
*** getskdupval.fxp
***
*
**
FUNCTION GetSKDupVal
LPARAMETERS cd_sbsk1, cd_xbsk1,  ;
            cd_sbsk2, cd_xbsk2,  ;
            cd_mode
IF cd_sbsk1 = 0 .OR. cd_xbsk1 = 0  ;
   .OR. cd_sbsk2 = 0 .OR.  ;
   cd_xbsk2 = 0
     RETURN 0
ENDIF
mcd_sbsk1 = cd_sbsk1
mcd_xbsk1 = IIF(cd_xbsk1 <  ;
            cd_sbsk1, 1440 +  ;
            cd_xbsk1, cd_xbsk1)
mcd_sbsk2 = cd_sbsk2
mcd_xbsk2 = IIF(cd_xbsk2 <  ;
            cd_sbsk2, 1440 +  ;
            cd_xbsk2, cd_xbsk2)
cd_ret = 9999
IF cd_mode = 0
     DO CASE
          CASE mcd_sbsk1 >=  ;
               mcd_sbsk2 .AND.  ;
               mcd_sbsk1 <=  ;
               mcd_xbsk2 .AND.  ;
               mcd_xbsk1 >=  ;
               mcd_sbsk2 .AND.  ;
               mcd_xbsk1 <=  ;
               mcd_xbsk2
               cd_ret = 0
          CASE mcd_sbsk2 >=  ;
               mcd_sbsk1 .AND.  ;
               mcd_sbsk2 <=  ;
               mcd_xbsk1 .AND.  ;
               mcd_xbsk2 >=  ;
               mcd_sbsk1 .AND.  ;
               mcd_xbsk2 <=  ;
               mcd_xbsk1
               cd_ret = 0
          CASE mcd_sbsk1 >=  ;
               mcd_sbsk2 .AND.  ;
               mcd_sbsk1 <=  ;
               mcd_xbsk2 .AND.  ;
               mcd_xbsk1 >  ;
               mcd_xbsk2
               cd_ret = mcd_xbsk2 -  ;
                        mcd_sbsk1
          CASE mcd_xbsk1 >=  ;
               mcd_sbsk2 .AND.  ;
               mcd_xbsk1 <=  ;
               mcd_xbsk2 .AND.  ;
               mcd_sbsk1 <  ;
               mcd_sbsk2
               cd_ret = mcd_xbsk1 -  ;
                        mcd_sbsk2
          CASE mcd_sbsk1 <  ;
               mcd_sbsk2 .AND.  ;
               mcd_xbsk1 <  ;
               mcd_sbsk2
               cd_ret = mcd_sbsk2 -  ;
                        mcd_xbsk1
          CASE mcd_sbsk1 >  ;
               mcd_sbsk2 .AND.  ;
               mcd_sbsk1 >  ;
               mcd_xbsk2
               cd_ret = mcd_sbsk1 -  ;
                        mcd_xbsk2
     ENDCASE
ELSE
     DO CASE
          CASE mcd_sbsk2 >=  ;
               mcd_sbsk1 .AND.  ;
               mcd_sbsk2 <=  ;
               mcd_xbsk1 .AND.  ;
               mcd_xbsk2 >=  ;
               mcd_sbsk1 .AND.  ;
               mcd_xbsk2 <=  ;
               mcd_xbsk1
               cd_ret = mcd_xbsk2 -  ;
                        mcd_sbsk2
          CASE mcd_sbsk2 >=  ;
               mcd_sbsk1 .AND.  ;
               mcd_sbsk2 <=  ;
               mcd_xbsk1 .AND.  ;
               (mcd_xbsk2 <  ;
               mcd_sbsk1 .OR.  ;
               mcd_xbsk2 >  ;
               mcd_xbsk1)
               cd_ret = mcd_sbsk2 -  ;
                        mcd_sbsk1
          CASE (mcd_sbsk2 <  ;
               mcd_sbsk1 .OR.  ;
               mcd_sbsk2 >  ;
               mcd_xbsk1) .AND.  ;
               mcd_xbsk2 >=  ;
               mcd_sbsk1 .AND.  ;
               mcd_xbsk2 <=  ;
               mcd_xbsk1
               cd_ret = mcd_xbsk1 -  ;
                        mcd_xbsk2
     ENDCASE
ENDIF
RETURN cd_ret
ENDFUNC
**
***
*** chkchstr.fxp
***
*
**
FUNCTION ChkCHStr
LPARAMETERS ccs_string,  ;
            ccs_stoplen
ccs_ret = LEFT(ccs_string,  ;
          ccs_stoplen)
IF ASC(SUBSTR(ccs_string,  ;
   ccs_stoplen, 1)) > 127
     ccs_cnt = 0
     FOR ccs_i = 1 TO ccs_stoplen
          IF ASC(SUBSTR(ccs_string,  ;
             ccs_i, 1)) > 127
               ccs_cnt = ccs_cnt +  ;
                         1
          ELSE
               ccs_cnt = 0
          ENDIF
     ENDFOR
     IF MOD(ccs_cnt, 2) = 1
          ccs_ret = LEFT(ccs_string,  ;
                    ccs_stoplen -  ;
                    1)
     ENDIF
ENDIF
RETURN ccs_ret
ENDFUNC
**
***
*** kqprocess.fxp
***
*
**
FUNCTION GetSelBc
PARAMETER gsb_bc
IF EMPTY(gsb_bc)
     RETURN -1
ENDIF
gsb_ret = -1
FOR x = 1 TO bctabcnt
     IF gsb_bc == bctabbh(x)
          gsb_ret = x
          EXIT
     ENDIF
ENDFOR
RETURN gsb_ret
ENDFUNC
**
FUNCTION ChkShiftDup
LPARAMETERS cd_sbsk1, cd_xbsk1,  ;
            cd_sbsk2, cd_xbsk2
IF cd_sbsk1 = 0 .OR. cd_xbsk1 = 0  ;
   .OR. cd_sbsk2 = 0 .OR.  ;
   cd_xbsk2 = 0
     RETURN .F.
ENDIF
mcd_sbsk1 = cd_sbsk1
mcd_xbsk1 = IIF(cd_xbsk1 <  ;
            cd_sbsk1, 1440 +  ;
            cd_xbsk1, cd_xbsk1)
mcd_sbsk2 = cd_sbsk2
mcd_xbsk2 = IIF(cd_xbsk2 <  ;
            cd_sbsk2, 1440 +  ;
            cd_xbsk2, cd_xbsk2)
IF ABS(mcd_sbsk2 - mcd_sbsk1) <=  ;
   120 .AND. ABS(mcd_xbsk2 -  ;
   mcd_xbsk1) <= 120
     cd_ret = .T.
ELSE
     cd_ret = .F.
ENDIF
RETURN cd_ret
ENDFUNC
**
FUNCTION GetRest
LPARAMETERS gr_sk1, gr_sk2
IF gr_sk1 = 0 .OR. gr_sk2 = 0
     RETURN 0
ENDIF
gr_area = LTRIM(STR(SELECT()))
gr_ret = 0
SELECT time
SCAN
     gr_zj1 = IIF(zjks < sbsj,  ;
              1440 + zjks, zjks)
     gr_zj2 = IIF(zjjs < gr_zj1,  ;
              1440 + zjjs, zjjs)
     IF (gr_zj1 >= gr_sk1 .AND.  ;
        gr_zj1 <= gr_sk2) .OR.  ;
        (gr_zj2 >= gr_sk1 .AND.  ;
        gr_zj2 <= gr_sk2)
          gr_ret = zjxx
          EXIT
     ENDIF
     gr_zj1 = IIF(zjks1 < sbsj,  ;
              1440 + zjks1,  ;
              zjks1)
     gr_zj2 = IIF(zjjs1 < gr_zj1,  ;
              1440 + zjjs1,  ;
              zjjs1)
     IF (gr_zj1 >= gr_sk1 .AND.  ;
        gr_zj1 <= gr_sk2) .OR.  ;
        (gr_zj2 >= gr_sk1 .AND.  ;
        gr_zj2 <= gr_sk2)
          gr_ret = zjxx1
          EXIT
     ENDIF
ENDSCAN
select &gr_area
RETURN gr_ret
ENDFUNC
**
***
*** updateversion.fxp
***
*
RETURN
mfd = "ID integer not null,"
mfd = mfd +  ;
      "CreateTime varchar (25),"
mfd = mfd + "LogLevel integer,"
mfd = mfd +  ;
      "Operator varchar (60),"
mfd = mfd +  ;
      "Location varchar (60),"
mfd = mfd +  ;
      "Description varchar (128),constraint pf_sys_log primary key (ID)"
IF SQLEXEC(odbc_ant2000,  ;
   "select * from sys_log",  ;
   "sys_log") < 0
     sqlexec(ODBC_ANT2000,"CREATE TABLE sys_log (&mfd)")
ELSE
     SELECT sys_log
     IF FCOUNT() < 6
          SQLEXEC(odbc_ant2000,  ;
                 "drop TABLE sys_log" ;
                 )
          sqlexec(ODBC_ANT2000,"CREATE TABLE sys_log (&mfd)")
     ENDIF
ENDIF
IF SQLEXEC(odbc_ant2000,  ;
   "select * from sys_counter where xuhao=7",  ;
   "sys_counter") > 0
     SELECT sys_counter
     IF EOF()
          SQLEXEC(odbc_ant2000,  ;
                 "insert into sys_counter (xuhao,jishuqi,flag,bz) values (7,0,' ','for sys_log')" ;
                 )
     ENDIF
ENDIF
syslog(0,  ;
      '-------- 系统启动 --------',  ;
      '')
mver = getantenv("SYSPARA",  ;
       "VERSION")
IF ISNULL(mver)
     mver = ''
ENDIF
mver = STRTRAN(mver, "2006",  ;
       "2005")
merr = 0
mhd = LEFT(mver, 2)
mtl = SUBSTR(mver, 4, 50)
mrun = ''
mmsg = -1
mserial = '2.00-20031102'
IF EMPTY(mver) .OR. mhd <> 'PW'  ;
   .OR. mtl < mserial
     IF mmsg = -1
          mmsg = MESSAGEBOX('检测到旧的系统版本，需要升级吗？',  ;
                 035, 'ANT2000')
          DO CASE
               CASE mmsg = 7
                    RETURN
               CASE mmsg = 2
                    QUIT
          ENDCASE
     ENDIF
     WAIT WINDOW NOWAIT  ;
          "正在升级数据库系统，请等待...PW-" +  ;
          mserial
     syslog(3,  ;
           'PW-2.00-20030601数据表升级',  ;
           '升级开始')
     IF SQLEXEC(odbc_ant2000,  ;
        "select * from ft_time",  ;
        "ft_time") > 0
          mfd = "CD VARCHAR(3) not null,"
          mfd = mfd +  ;
                "CC VARCHAR(3) not null,"
          mfd = mfd +  ;
                "CM VARCHAR(8) default '',"
          mfd = mfd +  ;
                "KSSJ integer default 0,"
          mfd = mfd +  ;
                "ZZSJ integer default 0,"
          mfd = mfd +  ;
                "DJ DOUBLE PRECISION DEFAULT 0,"
          mfd = mfd +  ;
                "JB VARCHAR(200) default '',"
          mfd = mfd +  ;
                "BC VARCHAR(200) default '',constraint pf_ft_time primary key (CD,CC)"
          SQLEXEC(odbc_ant2000,  ;
                 "drop TABLE ft_time" ;
                 )
          SQLEXEC(odbc_ant2000,  ;
                 "CREATE TABLE ft_time (" +  ;
                 mfd + ")")
          SELECT ft_time
          hasjb = .F.
          FOR i = 1 TO  ;
              FCOUNT("ft_time")
               IF ALLTRIM(UPPER(FIELD(i))) ==  ;
                  "JB"
                    hasjb = .T.
                    EXIT
               ENDIF
          ENDFOR
          SCAN
               IF hasjb
                    tmp_jb = ALLTRIM(ft_time.jb)
               ELSE
                    tmp_jb = ""
               ENDIF
               IF FIELD(1) = 'CD'  ;
                  .AND.  .NOT.  ;
                  EMPTY(cd)
                    tmp_cd = ALLTRIM(ft_time.cd)
               ELSE
                    tmp_cd = ""
               ENDIF
               SQLEXEC(odbc_ant2000,  ;
                      "insert into ft_time (cd,cc,cm,kssj,zzsj,dj,bc,jb) values (?tmp_cd,?cc,?cm,?kssj,?zzsj,?dj,?bc,?tmp_jb)" ;
                      )
          ENDSCAN
     ENDIF
     SQLEXEC(odbc_ant2000,  ;
            "drop TABLE rs_cd_ydyy" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "CREATE TABLE rs_cd_ydyy (yy varchar(50),idx integer)" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "alter table RS_SEARCH_TAIL add seq integer" ;
            )
     IF SQLEXEC(odbc_ant2000,  ;
        "select * from RS_SEARCH_TAIL",  ;
        "RS_SEARCH_TAIL") > -1
          SELECT rs_search_tail
          REPLACE seq WITH  ;
                  RECNO() ALL
          SCAN
               SQLEXEC(odbc_ant2000,  ;
                      "update RS_SEARCH_TAIL set seq=?seq where xuhao=?xuhao and name=?name" ;
                      )
          ENDSCAN
          USE
     ENDIF
     mfd = ""
     mfd = mfd +  ;
           "ZGBH       VARCHAR(10)  not null,"
     mfd = mfd +  ;
           "XW         INTEGER  not null,"
     mfd = mfd +  ;
           "MC         VARCHAR(30)  default '',"
     mfd = mfd +  ;
           "XZ         INTEGER  default 0,"
     mfd = mfd +  ;
           "XKB        VARCHAR(10)  default '',"
     mfd = mfd +  ;
           "ZY         VARCHAR(10)  not null,"
     mfd = mfd +  ;
           "BIYIE      INTEGER  default 0,"
     mfd = mfd +  ;
           "KSRQ       VARCHAR(10)  default '',"
     mfd = mfd +  ;
           "ZZRQ       VARCHAR(10)  default '',"
     mfd = mfd +  ;
           "YX         INTEGER  default 0"
     SQLEXEC(odbc_ant2000,  ;
            "drop TABLE tmp_rs_xl" ;
            )
     IF SQLEXEC(odbc_ant2000,  ;
        "CREATE TABLE tmp_rs_xl (" +  ;
        mfd + ")") > -1
          IF SQLEXEC(odbc_ant2000,  ;
             "insert into tmp_rs_xl select * from rs_xl" ;
             ) > -1
               mfd = ""
               mfd = mfd +  ;
                     "ZGBH       VARCHAR(10)  not null,"
               mfd = mfd +  ;
                     "XW         INTEGER  not null,"
               mfd = mfd +  ;
                     "MC         VARCHAR(30)  default '',"
               mfd = mfd +  ;
                     "XZ         INTEGER  default 0,"
               mfd = mfd +  ;
                     "XKB        VARCHAR(10)  default '',"
               mfd = mfd +  ;
                     "ZY         VARCHAR(20)  not null,"
               mfd = mfd +  ;
                     "BIYIE      INTEGER  default 0,"
               mfd = mfd +  ;
                     "KSRQ       VARCHAR(10)  default '',"
               mfd = mfd +  ;
                     "ZZRQ       VARCHAR(10)  default '',"
               mfd = mfd +  ;
                     "YX         INTEGER  default 0,constraint PF_xl primary key (zgbh,xw,zy)"
               SQLEXEC(odbc_ant2000,  ;
                      "DROP TABLE RS_XL" ;
                      )
               IF SQLEXEC(odbc_ant2000,  ;
                  "CREATE TABLE rs_xl (" +  ;
                  mfd + ")") > - ;
                  1
                    IF SQLEXEC(odbc_ant2000,  ;
                       "insert into rs_xl select * from tmp_rs_xl" ;
                       ) > -1
                         SQLEXEC(odbc_ant2000,  ;
                                "DROP TABLE tmp_rs_xl" ;
                                )
                    ENDIF
               ENDIF
          ENDIF
     ENDIF
     IF SQLEXEC(odbc_ant2000,  ;
        "alter table rs_bm add GW VARCHAR(254) default ''" ;
        ) < 0
          SQLEXEC(odbc_ant2000,  ;
                 "alter table rs_bm drop GW" ;
                 )
          SQLEXEC(odbc_ant2000,  ;
                 "alter table rs_bm add GW VARCHAR(254) default ''" ;
                 )
     ENDIF
     SQLEXEC(odbc_ant2000,  ;
            "update rs_bm set GW='' where gw is null" ;
            )
     mfd = "ZGBH     VARCHAR(10) not null PRIMARY KEY,"
     mfd = mfd +  ;
           "BIRTHDAY VARCHAR(10)  default '',"
     mfd = mfd +  ;
           "AGE      INTEGER  default 0,"
     mfd = mfd +  ;
           "HEIGHT   INTEGER  default 0,"
     mfd = mfd +  ;
           "WEIGHT   INTEGER  default 0,"
     mfd = mfd +  ;
           "EYELEFT  VARCHAR(3)  default '',"
     mfd = mfd +  ;
           "EYERIGHT VARCHAR(3)  default '',"
     mfd = mfd +  ;
           "HY       INTEGER  default 0,"
     mfd = mfd +  ;
           "XX       VARCHAR(2)  default '',"
     mfd = mfd +  ;
           "SFZH     VARCHAR(18)  default '',"
     mfd = mfd +  ;
           "HJ       VARCHAR(40)  default '',"
     mfd = mfd +  ;
           "DAD      VARCHAR(30)  default '',"
     mfd = mfd +  ;
           "YY       VARCHAR(30)  default '',"
     mfd = mfd +  ;
           "BD       INTEGER  default 0,"
     mfd = mfd +  ;
           "HK       INTEGER  default 0,"
     mfd = mfd +  ;
           "JG       VARCHAR(30)  default '',"
     mfd = mfd +  ;
           "ZZMM     INTEGER  default 0,"
     mfd = mfd +  ;
           "ZC       VARCHAR(20)  default '',"
     mfd = mfd +  ;
           "JRSJ     VARCHAR(10)  default '',"
     mfd = mfd +  ;
           "ZHICHENG VARCHAR(20)  default '',"
     mfd = mfd +  ;
           "ZZZBH    VARCHAR(20)  default '',"
     mfd = mfd +  ;
           "ZZZRQ    VARCHAR(10)  default '',"
     mfd = mfd +  ;
           "YWSYZ    INTEGER  default 0,"
     mfd = mfd +  ;
           "SYZBH    VARCHAR(20)  default '',"
     mfd = mfd +  ;
           "SYZKSRQ  VARCHAR(10)  default '',"
     mfd = mfd +  ;
           "SYZZZRQ  VARCHAR(10)  default ''"
     SQLEXEC(odbc_ant2000,  ;
            "DROP TABLE tmp")
     SQLEXEC(odbc_ant2000,  ;
            "create TABLE tmp(" +  ;
            mfd + ")")
     IF SQLEXEC(odbc_ant2000,  ;
        "insert into tmp(ZGBH,BIRTHDAY,AGE,HEIGHT,WEIGHT,EYELEFT,EYERIGHT,HY,XX,SFZH,HJ,DAD,YY,BD,HK,JG,ZZMM,ZC,JRSJ,ZHICHENG,ZZZBH,ZZZRQ,YWSYZ,SYZBH)" +  ;
        " select ZGBH,BIRTHDAY,AGE,HEIGHT,WEIGHT,EYELEFT,EYERIGHT,HY,XX,SFZH,HJ,DAD,YY,BD,HK,JG,ZZMM,ZC,JRSJ,ZHICHENG,ZZZBH,ZZZRQ,YWSYZ,SYZBH from rs_gr" ;
        ) = 1
          SQLEXEC(odbc_ant2000,  ;
                 "DROP TABLE RS_GR" ;
                 )
          SQLEXEC(odbc_ant2000,  ;
                 "CREATE TABLE rs_gr (" +  ;
                 mfd + ")")
          SQLEXEC(odbc_ant2000,  ;
                 "insert into rs_gr(ZGBH,BIRTHDAY,AGE,HEIGHT,WEIGHT,EYELEFT,EYERIGHT,HY,XX,SFZH,HJ,DAD,YY,BD,HK,JG,ZZMM,ZC,JRSJ,ZHICHENG,ZZZBH,ZZZRQ,YWSYZ,SYZBH)" +  ;
                 " select ZGBH,BIRTHDAY,AGE,HEIGHT,WEIGHT,EYELEFT,EYERIGHT,HY,XX,SFZH,HJ,DAD,YY,BD,HK,JG,ZZMM,ZC,JRSJ,ZHICHENG,ZZZBH,ZZZRQ,YWSYZ,SYZBH from tmp" ;
                 )
     ENDIF
     mfd = "CODE INTEGER not null PRIMARY KEY,"
     mfd = mfd +  ;
           "NAME VARCHAR(40)  default ''"
     SQLEXEC(odbc_ant2000,  ;
            "DROP TABLE tmp")
     SQLEXEC(odbc_ant2000,  ;
            "create TABLE tmp(" +  ;
            mfd + ")")
     IF SQLEXEC(odbc_ant2000,  ;
        "insert into tmp(code,name) select code,name from rs_cd_hj" ;
        ) = 1
          SQLEXEC(odbc_ant2000,  ;
                 "DROP TABLE RS_cd_hj" ;
                 )
          SQLEXEC(odbc_ant2000,  ;
                 "CREATE TABLE rs_cd_hj (" +  ;
                 mfd + ")")
          SQLEXEC(odbc_ant2000,  ;
                 "insert into rs_cd_hj(code,name) select code,name from tmp" ;
                 )
     ENDIF
     mfd = "code VARCHAR(3)  not null,"
     mfd = mfd +  ;
           "riqi VARCHAR(10) not null,"
     mfd = mfd +  ;
           "bc   VARCHAR(3)  default '',"
     mfd = mfd +  ;
           "jjr  VARCHAR(10) default '',"
     mfd = mfd +  ;
           "constraint pk_kq_shiftplan primary key (code,riqi)"
     SQLEXEC(odbc_ant2000,  ;
            "drop TABLE kq_ShiftPlan" ;
            )
     sqlexec(ODBC_ANT2000,"CREATE TABLE kq_ShiftPlan (&mfd)")
     SQLEXEC(odbc_ant2000,  ;
            "insert into kq_ShiftPlan (code,riqi,bc,jjr) values ('1','2003/01/01','01','')" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "insert into kq_ShiftPlan (code,riqi,bc,jjr) values ('1','2003/01/02','01','')" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "insert into kq_ShiftPlan (code,riqi,bc,jjr) values ('1','2003/01/03','01','')" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "insert into kq_ShiftPlan (code,riqi,bc,jjr) values ('1','2003/01/04','01','')" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "insert into kq_ShiftPlan (code,riqi,bc,jjr) values ('1','2003/01/05','01','')" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "insert into kq_ShiftPlan (code,riqi,bc,jjr) values ('1','2003/01/06','01','')" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "insert into kq_ShiftPlan (code,riqi,bc,jjr) values ('1','2003/01/07','01','')" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "insert into kq_ShiftPlan (code,riqi,bc,jjr) values ('1','2003/01/08','01','')" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "insert into kq_ShiftPlan (code,riqi,bc,jjr) values ('1','2003/01/09','01','')" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "insert into kq_ShiftPlan (code,riqi,bc,jjr) values ('1','2003/01/10','01','')" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "insert into kq_ShiftPlan (code,riqi,bc,jjr) values ('1','2003/01/11','01','')" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "insert into kq_ShiftPlan (code,riqi,bc,jjr) values ('1','2003/01/12','01','')" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "insert into kq_ShiftPlan (code,riqi,bc,jjr) values ('1','2003/01/13','01','')" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "insert into kq_ShiftPlan (code,riqi,bc,jjr) values ('1','2003/01/14','01','')" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "insert into kq_ShiftPlan (code,riqi,bc,jjr) values ('1','2003/01/15','01','')" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "insert into kq_ShiftPlan (code,riqi,bc,jjr) values ('1','2003/01/16','01','')" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "insert into kq_ShiftPlan (code,riqi,bc,jjr) values ('1','2003/01/17','01','')" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "insert into kq_ShiftPlan (code,riqi,bc,jjr) values ('1','2003/01/18','01','')" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "insert into kq_ShiftPlan (code,riqi,bc,jjr) values ('1','2003/01/19','01','')" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "insert into kq_ShiftPlan (code,riqi,bc,jjr) values ('1','2003/01/20','01','')" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "insert into kq_ShiftPlan (code,riqi,bc,jjr) values ('1','2003/01/21','01','')" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "insert into kq_ShiftPlan (code,riqi,bc,jjr) values ('1','2003/01/22','01','')" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "insert into kq_ShiftPlan (code,riqi,bc,jjr) values ('1','2003/01/23','01','')" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "insert into kq_ShiftPlan (code,riqi,bc,jjr) values ('1','2003/01/24','01','')" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "insert into kq_ShiftPlan (code,riqi,bc,jjr) values ('1','2003/01/25','01','')" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "insert into kq_ShiftPlan (code,riqi,bc,jjr) values ('1','2003/01/26','01','')" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "insert into kq_ShiftPlan (code,riqi,bc,jjr) values ('1','2003/01/27','01','')" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "insert into kq_ShiftPlan (code,riqi,bc,jjr) values ('1','2003/01/28','01','')" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "insert into kq_ShiftPlan (code,riqi,bc,jjr) values ('1','2003/01/29','01','')" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "insert into kq_ShiftPlan (code,riqi,bc,jjr) values ('1','2003/01/30','01','')" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "insert into kq_ShiftPlan (code,riqi,bc,jjr) values ('1','2003/01/31','01','')" ;
            )
     mfd = "classid	varchar(1) not null primary key,"
     mfd = mfd +  ;
           "name		varchar(50),"
     mfd = mfd +  ;
           "cycleyears	integer,"
     mfd = mfd +  ;
           "clearmode	integer,"
     mfd = mfd +  ;
           "takemode	integer,"
     mfd = mfd +  ;
           "fixyear	integer,"
     mfd = mfd +  ;
           "fixmonth	integer,"
     mfd = mfd +  ;
           "CheckDay	integer,"
     mfd = mfd +  ;
           "maxdays	float default 0"
     SQLEXEC(odbc_ant2000,  ;
            "drop TABLE kq_nj_sh" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "CREATE TABLE kq_nj_sh (" +  ;
            mfd + ")")
     mfd = "classid	varchar(1) not null,"
     mfd = mfd +  ;
           "years		integer not null,"
     mfd = mfd +  ;
           "months		integer not null,"
     mfd = mfd +  ;
           "days		float default 0,"
     mfd = mfd +  ;
           "delta		float default 0,"
     mfd = mfd +  ;
           "notes		varchar(50),"
     mfd = mfd +  ;
           "Primary Key (classid,years,months)"
     SQLEXEC(odbc_ant2000,  ;
            "drop TABLE kq_nj_st" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "CREATE TABLE kq_nj_st (" +  ;
            mfd + ")")
     mfd = "ZGBH VARCHAR(10) not null,"
     mfd = mfd +  ;
           "ND INTEGER not null,"
     mfd = mfd +  ;
           "YF INTEGER not null,"
     mfd = mfd + "NY varchar(6),"
     mfd = mfd +  ;
           "LJTS float default 0,"
     mfd = mfd +  ;
           "XSTS float default 0,"
     mfd = mfd +  ;
           "SYTS float default 0,"
     mfd = mfd +  ;
           "MARKDATE varchar(4),"
     mfd = mfd +  ;
           "MARKAGE varchar(4),"
     mfd = mfd +  ;
           "MARKINIT varchar(6) default '',"
     mfd = mfd +  ;
           "primary key (zgbh,nd,yf)"
     SQLEXEC(odbc_ant2000,  ;
            "drop TABLE kq_nj_0" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "CREATE TABLE kq_nj_0 (" +  ;
            mfd + ")")
     mfd = ""
     mfd = mfd +  ;
           "ZGBH    VARCHAR(10) not null,"
     mfd = mfd +  ;
           "ND      INTEGER not null,"
     mfd = mfd +  ;
           "YF      INTEGER not null,"
     mfd = mfd + "NY varchar(6),"
     mfd = mfd +  ;
           "LJTS    FLOAT default 0,"
     mfd = mfd +  ;
           "WXHTS   FLOAT default 0,"
     mfd = mfd +  ;
           "constraint pf_nj_1 primary key (zgbh,nd,yf)"
     SQLEXEC(odbc_ant2000,  ;
            "drop TABLE kq_nj_1" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "CREATE TABLE kq_nj_1 (" +  ;
            mfd + ")")
     mfd = "alter table kq_zg add NJLB VARCHAR(1) default ' ' "
     SQLEXEC(odbc_ant2000, mfd)
     SQLEXEC(odbc_ant2000,  ;
            "update kq_zg set njlb=' '" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "alter table kq_zg add qf varchar(1) default ''" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "update kq_zg set qf=''" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AKQ36','年假规定')" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AKQ361','年假类别定义')" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "insert into SYS_INI(SEC,VAR,TYP,VAL) values('KQNJ','NJ_AUTO','N','0')" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "insert into SYS_INI(SEC,VAR,TYP,VAL) values('KQNJ','NJ_MARKINIT','C','')" ;
            )
     mfd = ""
     mfd = mfd +  ;
           "CODE        varchar(3) not null PRIMARY KEY,"
     mfd = mfd +  ;
           "DESCRIPTION VARCHAR(50)  default '',"
     mfd = mfd +  ;
           "MACHINES    VARCHAR(100) default ''"
     SQLEXEC(odbc_ant2000,  ;
            "drop TABLE ft_place" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "CREATE TABLE ft_place (" +  ;
            mfd + ")")
     mfd = "HMBH VARCHAR(20) NOT NULL,"
     mfd = mfd +  ;
           "XMID VARCHAR(20) NOT NULL,"
     mfd = mfd +  ;
           "XMMC VARCHAR(20),"
     mfd = mfd +  ;
           "FLAG INTEGER NOT NULL,"
     mfd = mfd +  ;
           "STRVAL VARCHAR(255),"
     mfd = mfd +  ;
           "constraint pf_sys_cd_item primary key (hmbh,xmid,flag)"
     SQLEXEC(odbc_ant2000,  ;
            "drop TABLE sys_cd_item " ;
            )
     sqlexec(ODBC_ANT2000,"CREATE TABLE  sys_cd_item (&mfd)")
     SQLEXEC(odbc_ant2000,  ;
            "insert into sys_cd_item (hmbh,xmid,xmmc,flag,strval) values ('3ars11','dh','搭伙',1,'3')" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "insert into sys_cd_item (hmbh,xmid,xmmc,flag,strval) values ('3ars11','gw','岗位',1,'120')" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "insert into sys_cd_item (hmbh,xmid,xmmc,flag,strval) values ('3ars11','zw','职务',1,'37')" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "alter table kq_lskh add yxks varchar(10) default ''" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "alter table kq_lskh add yxjs varchar(10) default ''" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "update kq_lskh set yxks='',yxjs=''" ;
            )
     mfd = "code VARCHAR(3) not null,"
     mfd = mfd +  ;
           "sdate VARCHAR(10) not null,"
     mfd = mfd +  ;
           "edate VARCHAR(10) default ' ',"
     mfd = mfd +  ;
           "bc VARCHAR(3) default ' ',"
     mfd = mfd +  ;
           "constraint pk_kq_shiftModify primary key (code,sdate)"
     SQLEXEC(odbc_ant2000,  ;
            "drop TABLE kq_ShiftModify" ;
            )
     sqlexec(ODBC_ANT2000,"CREATE TABLE kq_ShiftModify (&mfd)")
     mfd = "code  VARCHAR(3) not null constraint pk_kq_shifttype PRIMARY KEY,"
     mfd = mfd +  ;
           "class VARCHAR(50) default '',"
     mfd = mfd +  ;
           "cycle integer default 0"
     SQLEXEC(odbc_ant2000,  ;
            "drop TABLE kq_ShiftType" ;
            )
     sqlexec(ODBC_ANT2000,"CREATE TABLE kq_ShiftType (&mfd)")
     SQLEXEC(odbc_ant2000,  ;
            "alter table kq_time add zjks1 integer" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "alter table kq_time add zjjs1 integer" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "alter table kq_time add zjxx1 integer" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "update kq_time set zjks1=0,zjjs1=0,zjxx1=0" ;
            )
     mrun = 'PW-' + mserial
ENDIF
IF EMPTY(mver) .OR. mhd <> 'PW'  ;
   .OR. mtl < '2.00-20030615'
     IF mmsg = -1
          mmsg = MESSAGEBOX('检测到旧的系统版本，需要升级吗？',  ;
                 035, 'ANT2000')
          DO CASE
               CASE mmsg = 7
                    RETURN
               CASE mmsg = 2
                    QUIT
          ENDCASE
     ENDIF
     WAIT WINDOW NOWAIT  ;
          "正在升级数据库系统，请等待...PW-2.00-20030615"
     syslog(3,  ;
           'PW-2.00-20030615数据表升级',  ;
           '升级开始')
     SQLEXEC(odbc_ant2000,  ;
            "alter table kq_clfx add planbc varchar(3) default ''" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "insert into SYS_INI(SEC,VAR,TYP,VAL) values('FXPARA','XRSKERR','N','0')" ;
            )
     mrun = 'PW-2.00-20030615'
ENDIF
IF EMPTY(mver) .OR. mhd <> 'PW'  ;
   .OR. mtl < '2.00-20030623'
     IF mmsg = -1
          mmsg = MESSAGEBOX('检测到旧的系统版本，需要升级吗？',  ;
                 035, 'ANT2000')
          DO CASE
               CASE mmsg = 7
                    RETURN
               CASE mmsg = 2
                    QUIT
          ENDCASE
     ENDIF
     WAIT WINDOW NOWAIT  ;
          "正在升级数据库系统，请等待...PW-2.00-20030623"
     syslog(3,  ;
           'PW-2.00-20030623数据表升级',  ;
           '升级开始')
     SQLEXEC(odbc_ant2000,  ;
            "insert into SYS_INI(SEC,VAR,TYP,VAL) values('KQGD','SJDAYS','N','10')" ;
            )
     IF SQLEXEC(odbc_ant2000,  ;
        "alter table kq_zg add qf varchar(1) default ''" ;
        ) > 0
          SQLEXEC(odbc_ant2000,  ;
                 "update kq_zg set qf=''" ;
                 )
     ENDIF
     mrun = 'PW-2.00-20030623'
ENDIF
IF EMPTY(mver) .OR. mhd <> 'PW'  ;
   .OR. mtl < '2.00-20030716'
     IF mmsg = -1
          mmsg = MESSAGEBOX('检测到旧的系统版本，需要升级吗？',  ;
                 035, 'ANT2000')
          DO CASE
               CASE mmsg = 7
                    RETURN
               CASE mmsg = 2
                    QUIT
          ENDCASE
     ENDIF
     WAIT WINDOW NOWAIT  ;
          "正在升级数据库系统，请等待...PW-2.00-20030716"
     syslog(3,  ;
           'PW-2.00-20030716数据表升级',  ;
           '升级开始')
     mfd = "ZGBH   VARCHAR(10)  NOT NULL,"
     mfd = mfd +  ;
           "RIQI   VARCHAR(10)  NOT NULL,"
     mfd = mfd +  ;
           "BC     VARCHAR(3)  default '',"
     mfd = mfd +  ;
           "KSSK   integer NOT NULL,"
     mfd = mfd +  ;
           "JSSK   integer default 0,"
     mfd = mfd +  ;
           "JCSJ   integer default 0,"
     mfd = mfd +  ;
           "CC     VARCHAR(3)  default '',"
     mfd = mfd +  ;
           "PlACE  VARCHAR(3)  default '',"
     mfd = mfd +  ;
           "ST     integer default 0"
     mflag = .T.
     IF SQLEXEC(odbc_ant2000,  ;
        "select * from ft_jcfx",  ;
        "ft_jcfx") > 0
          hasplace = .F.
          FOR i = 1 TO  ;
              FCOUNT("ft_jcfx")
               IF UPPER(ALLTRIM(FIELD(i,  ;
                  "ft_jcfx"))) ==  ;
                  "PLACE"
                    hasplace = .T.
                    EXIT
               ENDIF
          ENDFOR
          IF hasplace
               tmp_place = "place"
          ELSE
               tmp_place = "''"
          ENDIF
          SQLEXEC(odbc_ant2000,  ;
                 "drop TABLE tmp" ;
                 )
          IF SQLEXEC(odbc_ant2000,  ;
             "CREATE TABLE tmp (" +  ;
             mfd + ")") > 0
               IF SQLEXEC(odbc_ant2000,  ;
                  "insert into tmp(zgbh,riqi,bc,kssk,jssk,jcsj,cc,place,st) select zgbh,riqi,bc,kssk,jssk,jcsj,cc," +  ;
                  tmp_place +  ;
                  ",st from ft_jcfx " ;
                  ) > 0
                    SQLEXEC(odbc_ant2000,  ;
                           "drop table ft_jcfx" ;
                           )
                    IF SQLEXEC(odbc_ant2000,  ;
                       "CREATE TABLE ft_jcfx (" +  ;
                       mfd + ")") >  ;
                       0
                         IF SQLEXEC(odbc_ant2000,  ;
                            "insert into ft_jcfx (zgbh,riqi,bc,kssk,jssk,jcsj,cc,place,st) select zgbh,riqi,bc,kssk,jssk,jcsj,cc,place,st from tmp" ;
                            ) <  ;
                            0
                              syslog(3,  ;
                               'ft_jcfx数据表升级',  ;
                               '插入备份记录错误')
                              mflag =  ;
                               .F.
                         ENDIF
                         SQLEXEC(odbc_ant2000,  ;
                                "drop table tmp" ;
                                )
                    ELSE
                         syslog(3,  ;
                               'ft_jcfx数据表升级',  ;
                               '新表创建错误')
                         mflag = .F.
                    ENDIF
               ELSE
                    syslog(3,  ;
                          'ft_jcfx数据表升级',  ;
                          '备份记录保存错误')
                    mflag = .F.
               ENDIF
          ELSE
               syslog(3,  ;
                     'ft_jcfx数据表升级',  ;
                     '备份表创建错误')
               mflag = .F.
          ENDIF
     ELSE
          SQLEXEC(odbc_ant2000,  ;
                 "CREATE TABLE ft_jcfx (" +  ;
                 mfd + ")")
     ENDIF
     IF  .NOT. mflag
          WAIT WINDOW  ;
               "升级数据库失败，请与供应商联系。"
          QUIT
     ENDIF
     mrun = 'PW-2.00-20030716'
ENDIF
IF EMPTY(mver) .OR. mhd <> 'PW'  ;
   .OR. mtl < '2.00-20030814'
     IF mmsg = -1
          mmsg = MESSAGEBOX('检测到旧的系统版本，需要升级吗？',  ;
                 035, 'ANT2000')
          DO CASE
               CASE mmsg = 7
                    RETURN
               CASE mmsg = 2
                    QUIT
          ENDCASE
     ENDIF
     WAIT WINDOW NOWAIT  ;
          "正在升级数据库系统，请等待...PW-2.00-20030814"
     syslog(3,  ;
           'PW-2.00-20030814数据表升级',  ;
           '升级开始')
     SQLEXEC(odbc_ant2000,  ;
            "alter table rs_bm add NODEID VARCHAR(20) default ''" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "alter table kq_bm add NODEID VARCHAR(20) default ''" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "alter table gz_bm add NODEID VARCHAR(20) default ''" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "alter table ft_bm add NODEID VARCHAR(20) default ''" ;
            )
     mfd = "name varchar(50) default ' ',"
     mfd = mfd +  ;
           "name_e varchar(50) default ' ',"
     mfd = mfd +  ;
           "name_j varchar(6) default ' '	,"
     mfd = mfd +  ;
           "dep_level varchar(6) default ' ',"
     mfd = mfd +  ;
           "unused smallint default 0,"
     mfd = mfd +  ;
           "showman smallint default 0,"
     mfd = mfd +  ;
           "showrs smallint default 0,"
     mfd = mfd +  ;
           "PaperType varchar(10) default 'A4',"
     mfd = mfd +  ;
           "Orientation smallint default 0,"
     mfd = mfd +  ;
           "TopMargin DOUBLE PRECISION default 10.0,"
     mfd = mfd +  ;
           "BottomMargin DOUBLE PRECISION default 10.0,"
     mfd = mfd +  ;
           "LeftMargin DOUBLE PRECISION default 10.0,"
     mfd = mfd +  ;
           "RightMargin DOUBLE PRECISION default 10.0,"
     mfd = mfd +  ;
           "TitleFont varchar(16) default '黑体,16,N',"
     mfd = mfd +  ;
           "TextFont varchar(16) default '宋体,8,N',"
     mfd = mfd +  ;
           "PrintIOData smallint default 0,"
     mfd = mfd +  ;
           "PrintRankData smallint default 0"
     mfd1 = "code varchar(2)," +  ;
            mfd
     mfd = "code varchar(2) not null constraint pk_sys_company primary key," +  ;
           mfd
     SQLEXEC(odbc_ant2000,  ;
            "drop TABLE tmp")
     SQLEXEC(odbc_ant2000,  ;
            "CREATE TABLE tmp (" +  ;
            mfd1 + ")")
     SQLEXEC(odbc_ant2000,  ;
            "insert into tmp(code,name,name_e,name_j,dep_level,unused) select code,name,name_e,name_j,dep_level,unused from sys_company" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "drop TABLE sys_company" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "CREATE TABLE sys_company (" +  ;
            mfd + ")")
     SQLEXEC(odbc_ant2000,  ;
            "insert into sys_company(code,name,name_e,name_j,dep_level,unused) select code,name,name_e,name_j,dep_level,unused from tmp" ;
            )
     mfd = "code varchar(2) not null,"
     mfd = mfd +  ;
           "nodeid varchar(20) not null,"
     mfd = mfd +  ;
           "bmmc varchar(40),"
     mfd = mfd +  ;
           "xm1 varchar(10),"
     mfd = mfd +  ;
           "rank1 varchar(20),"
     mfd = mfd +  ;
           "jz1 smallint default 0,"
     mfd = mfd +  ;
           "xm2 varchar(10),"
     mfd = mfd +  ;
           "rank2 varchar(20),"
     mfd = mfd +  ;
           "jz2 smallint default 0,"
     mfd = mfd +  ;
           "constraint PK_sys_organization primary key(code,nodeid)"
     SQLEXEC(odbc_ant2000,  ;
            "drop TABLE sys_organization" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "CREATE TABLE sys_organization (" +  ;
            mfd + ")")
     mrun = 'PW-2.00-20030814'
ENDIF
IF EMPTY(mver) .OR. mhd <> 'PW'  ;
   .OR. mtl < '2.00-20030825'
     IF mmsg = -1
          mmsg = MESSAGEBOX('检测到旧的系统版本，需要升级吗？',  ;
                 035, 'ANT2000')
          DO CASE
               CASE mmsg = 7
                    RETURN
               CASE mmsg = 2
                    QUIT
          ENDCASE
     ENDIF
     WAIT WINDOW NOWAIT  ;
          "正在升级数据库系统，请等待...PW-2.00-20030814"
     syslog(3,  ;
           'PW-2.00-20030825数据表升级',  ;
           '升级开始')
     SQLEXEC(odbc_ant2000,  ;
            "alter table ft_ardata add Invalid varchar(1) default ''" ;
            )
     mrun = 'PW-2.00-20030825'
ENDIF
IF EMPTY(mver) .OR. mhd <> 'PW'  ;
   .OR. mtl < '2.00-20030901'
     IF mmsg = -1
          mmsg = MESSAGEBOX('检测到旧的系统版本，需要升级吗？',  ;
                 035, 'ANT2000')
          DO CASE
               CASE mmsg = 7
                    RETURN
               CASE mmsg = 2
                    QUIT
          ENDCASE
     ENDIF
     WAIT WINDOW NOWAIT  ;
          "正在升级数据库系统，请等待...PW-2.00-20030901"
     syslog(3,  ;
           'PW-2.00-20030901数据表升级',  ;
           '升级开始')
     SQLEXEC(odbc_ant2000,  ;
            "insert into SYS_INI(SEC,VAR,TYP,VAL) values('FXPARA','DELTA4ERR','N','0')" ;
            )
     mrun = 'PW-2.00-20030901'
ENDIF
IF EMPTY(mver) .OR. mhd <> 'PW'  ;
   .OR. mtl < '2.00-20030904'
     IF mmsg = -1
          mmsg = MESSAGEBOX('检测到旧的系统版本，需要升级吗？',  ;
                 035, 'ANT2000')
          DO CASE
               CASE mmsg = 7
                    RETURN
               CASE mmsg = 2
                    QUIT
          ENDCASE
     ENDIF
     WAIT WINDOW NOWAIT  ;
          "正在升级数据库系统，请等待...PW-2.00-20030904"
     syslog(3,  ;
           'PW-2.00-20030904数据表升级',  ;
           '升级开始')
     SQLEXEC(odbc_ant2000,  ;
            "insert into SYS_INI(SEC,VAR,TYP,VAL) values('FXPARA','SHIFTPLAN','N','0')" ;
            )
     mrun = 'PW-2.00-20030904'
ENDIF
IF EMPTY(mver) .OR. mhd <> 'PW'  ;
   .OR. mtl < '2.00-20030909'
     IF mmsg = -1
          mmsg = MESSAGEBOX('检测到旧的系统版本，需要升级吗？',  ;
                 035, 'ANT2000')
          DO CASE
               CASE mmsg = 7
                    RETURN
               CASE mmsg = 2
                    QUIT
          ENDCASE
     ENDIF
     WAIT WINDOW NOWAIT  ;
          "正在升级数据库系统，请等待...PW-2.00-20030909"
     syslog(3,  ;
           'PW-2.00-20030909数据表升级',  ;
           '升级开始')
     SQLEXEC(odbc_ant2000,  ;
            "insert into SYS_INI(SEC,VAR,TYP,VAL) values('FXPARA','NOXRSK','N','0')" ;
            )
     mrun = 'PW-2.00-20030909'
ENDIF
mserial = '2.00-20031008'
IF EMPTY(mver) .OR. mhd <> 'PW'  ;
   .OR. mtl < mserial
     IF mmsg = -1
          mmsg = MESSAGEBOX('检测到旧的系统版本，需要升级吗？',  ;
                 035, 'ANT2000')
          DO CASE
               CASE mmsg = 7
                    RETURN
               CASE mmsg = 2
                    QUIT
          ENDCASE
     ENDIF
     WAIT WINDOW NOWAIT  ;
          "正在升级数据库系统，请等待...PW-" +  ;
          mserial
     syslog(3, 'PW-' + mserial +  ;
           '数据表升级',  ;
           '升级开始')
     SQLEXEC(odbc_ant2000,  ;
            "Alter table rs_yd add sxrq varchar(10) default ''" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "Alter table rs_yd add flag varchar(1) default ''" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "update rs_yd set sxrq=riqi where sxrq is null" ;
            )
     mrun = 'PW-' + mserial
ENDIF
IF EMPTY(mver) .OR. mhd <> 'PW'  ;
   .OR. mtl < '2.00-20031019'
     IF mmsg = -1
          mmsg = MESSAGEBOX('检测到旧的系统版本，需要升级吗？',  ;
                 035, 'ANT2000')
          DO CASE
               CASE mmsg = 7
                    RETURN
               CASE mmsg = 2
                    QUIT
          ENDCASE
     ENDIF
     WAIT WINDOW NOWAIT  ;
          "正在升级数据库系统，请等待...PW-2.00-20031019"
     syslog(3,  ;
           'PW-2.00-20031019数据表升级',  ;
           '升级开始')
     SQLEXEC(odbc_ant2000,  ;
            "alter table kq_xjjl_d add attr integer default 0" ;
            )
     mrun = 'PW-2.00-20031019'
ENDIF
IF EMPTY(mver) .OR. mhd <> 'PW'  ;
   .OR. mtl < '2.00-20031028'
     IF mmsg = -1
          mmsg = MESSAGEBOX('检测到旧的系统版本，需要升级吗？',  ;
                 035, 'ANT2000')
          DO CASE
               CASE mmsg = 7
                    RETURN
               CASE mmsg = 2
                    QUIT
          ENDCASE
     ENDIF
     WAIT WINDOW NOWAIT  ;
          "正在升级数据库系统，请等待...PW-2.00-20031028"
     syslog(3,  ;
           'PW-2.00-20031028数据表升级',  ;
           '升级开始')
     SQLEXEC(odbc_ant2000,  ;
            "insert into SYS_INI(SEC,VAR,TYP,VAL) values('GZGD','SJDAYS','N','10')" ;
            )
     mrun = 'PW-2.00-20031028'
ENDIF
mserial = '2.00-20031101'
IF EMPTY(mver) .OR. mhd <> 'PW'  ;
   .OR. mtl < mserial
     IF mmsg = -1
          mmsg = MESSAGEBOX('检测到旧的系统版本，需要升级吗？',  ;
                 035, 'ANT2000')
          DO CASE
               CASE mmsg = 7
                    RETURN
               CASE mmsg = 2
                    QUIT
          ENDCASE
     ENDIF
     WAIT WINDOW NOWAIT  ;
          "正在升级数据库系统，请等待...PW-" +  ;
          mserial
     IF merr = 0 .AND.  ;
        SQLEXEC(odbc_ant2000,  ;
        "alter table kq_zg alter column QF VARCHAR(2)" ;
        ) < 0
          IF merr = 0 .AND.  ;
             SQLEXEC(odbc_ant2000,  ;
             "alter table kq_zg add QF_BAK VARCHAR(2)" ;
             ) < 0
               merr = 1
          ENDIF
          IF merr = 0 .AND.  ;
             SQLEXEC(odbc_ant2000,  ;
             "update kq_zg set QF_BAK=QF" ;
             ) < 0
               merr = 2
          ENDIF
          IF merr = 0 .AND.  ;
             SQLEXEC(odbc_ant2000,  ;
             "alter table kq_zg drop QF" ;
             ) < 0
               merr = 3
          ENDIF
          IF merr = 0 .AND.  ;
             SQLEXEC(odbc_ant2000,  ;
             "alter table kq_zg add QF VARCHAR(2) default ''" ;
             ) < 0
               merr = 4
          ENDIF
          IF merr = 0 .AND.  ;
             SQLEXEC(odbc_ant2000,  ;
             "update kq_zg set QF=QF_BAK" ;
             ) < 0
               merr = 5
          ENDIF
          IF merr = 0 .AND.  ;
             SQLEXEC(odbc_ant2000,  ;
             "alter table kq_zg drop QF_BAK" ;
             ) < 0
               merr = 6
          ENDIF
     ENDIF
     IF merr > 0
          syslog(3, 'PW-' +  ;
                mserial +  ;
                ' 数据表升级 Fail! ErrNo=' +  ;
                LTRIM(STR(merr)),  ;
                '升级开始')
          WAIT WINDOW 'PW-' +  ;
               mserial +  ;
               " 数据表升级失败! ErrNo=" +  ;
               LTRIM(STR(merr))
          QUIT
     ELSE
          SQLEXEC(odbc_ant2000,  ;
                 "update kq_zg set QF='' where QF is null" ;
                 )
          syslog(3, 'PW-' +  ;
                mserial +  ;
                ' 数据表升级 Ok!',  ;
                '升级开始')
     ENDIF
     mrun = 'PW-' + mserial
ENDIF
IF EMPTY(mver) .OR. mhd <> 'PW'  ;
   .OR. mtl < '2.00-20031126'
     IF mmsg = -1
          mmsg = MESSAGEBOX('检测到旧的系统版本，需要升级吗？',  ;
                 035, 'ANT2000')
          DO CASE
               CASE mmsg = 7
                    RETURN
               CASE mmsg = 2
                    QUIT
          ENDCASE
     ENDIF
     WAIT WINDOW NOWAIT  ;
          "正在升级数据库系统，请等待...PW-2.00-20031126"
     syslog(3,  ;
           'PW-2.00-20031126数据表升级',  ;
           '升级开始')
     SQLEXEC(odbc_ant2000,  ;
            "insert into SYS_INI(SEC,VAR,TYP,VAL) values('3AKQ','DEFAULT-DISPBCTIME','N','1')" ;
            )
     mrun = 'PW-2.00-20031126'
ENDIF
mserial = '2.00-20040724'
IF EMPTY(mver) .OR. mhd <> 'PW'  ;
   .OR. mtl < mserial
     IF mmsg = -1
          mmsg = MESSAGEBOX('检测到旧的系统版本，需要升级吗？',  ;
                 035, 'ANT2000')
          DO CASE
               CASE mmsg = 7
                    RETURN
               CASE mmsg = 2
                    QUIT
          ENDCASE
     ENDIF
     WAIT WINDOW NOWAIT  ;
          "正在升级数据库系统，请等待...PW-" +  ;
          mserial
     syslog(3, 'PW-' + mserial +  ;
           ' 数据表升级', '')
     IF SQLEXEC(odbc_ant2000,  ;
        "alter table kq_nj_sh add maxrate float" ;
        ) < 0
          syslog(3, mver +  ;
                ' 数据表升级 Fail!',  ;
                'alter table kq_nj_sh add maxrate float' ;
                )
          merr = 1
     ENDIF
     IF SQLEXEC(odbc_ant2000,  ;
        "alter table kq_nj_sh add kqrepno integer" ;
        ) < 0
          syslog(3, mver +  ;
                ' 数据表升级 Fail!',  ;
                'alter table kq_nj_sh add kqrepno integer' ;
                )
          merr = 1
     ENDIF
     IF SQLEXEC(odbc_ant2000,  ;
        "alter table kq_nj_sh add kqrepfd integer" ;
        ) < 0
          syslog(3, mver +  ;
                ' 数据表升级 Fail!',  ;
                'alter table kq_nj_sh add kqrepfd integer' ;
                )
          merr = 1
     ENDIF
     IF SQLEXEC(odbc_ant2000,  ;
        "alter table kq_nj_sh add cpuyear integer" ;
        ) < 0
          syslog(3, mver +  ;
                ' 数据表升级 Fail!',  ;
                'alter table kq_nj_sh add cpuyear integer' ;
                )
          merr = 1
     ENDIF
     IF merr = 0
          syslog(3, 'PW-' +  ;
                mserial +  ;
                ' 数据表升级 Ok!',  ;
                '')
     ENDIF
     mrun = 'PW-' + mserial
ENDIF
mserial = '2.00-20040109'
IF EMPTY(mver) .OR. mhd <> 'PW'  ;
   .OR. mtl < mserial
     IF mmsg = -1
          mmsg = MESSAGEBOX('检测到旧的系统版本，需要升级吗？',  ;
                 035, 'ANT2000')
          DO CASE
               CASE mmsg = 7
                    RETURN
               CASE mmsg = 2
                    QUIT
          ENDCASE
     ENDIF
     WAIT WINDOW NOWAIT  ;
          "正在升级数据库系统，请等待...PW-" +  ;
          mserial
     syslog(3, 'PW-' + mserial +  ;
           ' 数据表升级', '')
     IF SQLEXEC(odbc_ant2000,  ;
        "alter table sys_cd_gyxz add bx varchar(1)" ;
        ) < 0
          syslog(3, mver +  ;
                ' 数据表升级 Fail!',  ;
                'alter table sys_cd_gyxz add bx varchar(1)' ;
                )
          merr = 1
     ELSE
          = SQLEXEC(odbc_ant2000,  ;
            "update sys_cd_gyxz set bx=' '" ;
            )
     ENDIF
     IF merr = 0
          syslog(3, 'PW-' +  ;
                mserial +  ;
                ' 数据表升级 Ok!',  ;
                '')
     ENDIF
     mrun = 'PW-' + mserial
ENDIF
mserial = '2.00-20040220'
IF EMPTY(mver) .OR. mhd <> 'PW'  ;
   .OR. mtl < mserial
     IF mmsg = -1
          mmsg = MESSAGEBOX('检测到旧的系统版本，需要升级吗？',  ;
                 035, 'ANT2000')
          DO CASE
               CASE mmsg = 7
                    RETURN
               CASE mmsg = 2
                    QUIT
          ENDCASE
     ENDIF
     WAIT WINDOW NOWAIT  ;
          "正在升级数据库系统，请等待...PW-" +  ;
          mserial
     syslog(3, 'PW-' + mserial +  ;
           ' 数据表升级', '')
     mfd = "create table rs_inout (yyyymm varchar(6) not null,"
     mfd = mfd +  ;
           "bmbh varchar(6) not null,"
     mfd = mfd + "base integer,"
     mfd = mfd + "plus integer,"
     mfd = mfd + "minus integer,"
     mfd = mfd + "last integer,"
     mfd = mfd + "curr integer,"
     mfd = mfd + "entry integer,"
     mfd = mfd +  ;
           "callin integer,"
     mfd = mfd + "leave integer,"
     mfd = mfd +  ;
           "callout integer,"
     mfd = mfd +  ;
           "constraint pk_rs_inout primary key (yyyymm,bmbh))"
     IF SQLEXEC(odbc_ant2000,  ;
        mfd) < 0
          syslog(3, 'PW-' +  ;
                mserial +  ;
                ' 数据表升级 Fail!',  ;
                mfd)
          merr = 1
     ENDIF
     IF SQLEXEC(odbc_ant2000,  ;
        "alter table rs_bm add base integer default 0" ;
        ) < 0
          syslog(3, 'PW-' +  ;
                mserial +  ;
                ' 数据表升级 Fail!',  ;
                'alter table rs_bm add base integer default 0' ;
                )
          merr = 1
     ENDIF
     IF SQLEXEC(odbc_ant2000,  ;
        "alter table rs_bm add plus integer default 0" ;
        ) < 0
          syslog(3, 'PW-' +  ;
                mserial +  ;
                ' 数据表升级 Fail!',  ;
                'alter table rs_bm add plus integer default 0' ;
                )
          merr = 1
     ENDIF
     IF SQLEXEC(odbc_ant2000,  ;
        "alter table rs_bm add minus integer default 0" ;
        ) < 0
          syslog(3, 'PW-' +  ;
                mserial +  ;
                ' 数据表升级 Fail!',  ;
                'alter table rs_bm add minus default 0' ;
                )
          merr = 1
     ENDIF
     IF SQLEXEC(odbc_ant2000,  ;
        "Alter table rs_yd add oldcode varchar(10) default ''" ;
        ) < 0
          syslog(3, 'PW-' +  ;
                mserial +  ;
                ' 数据表升级 Fail!',  ;
                "Alter table rs_yd add oldcode varchar(10) default ''" ;
                )
          merr = 1
     ENDIF
     IF SQLEXEC(odbc_ant2000,  ;
        "Alter table rs_yd add chgtype varchar(1) default ''" ;
        ) < 0
          syslog(3, 'PW-' +  ;
                mserial +  ;
                ' 数据表升级 Fail!',  ;
                "Alter table rs_yd add chgtype varchar(1) default ''" ;
                )
          merr = 1
     ENDIF
     IF SQLEXEC(odbc_ant2000,  ;
        "alter table sys_kzgs add DAT_ZGBH0 integer default 0" ;
        ) < 0
          syslog(3, 'PW-' +  ;
                mserial +  ;
                ' 数据表升级 Fail!',  ;
                'alter table sys_kzgs add DAT_ZGBH0 integer default 0' ;
                )
          merr = 1
     ENDIF
     IF SQLEXEC(odbc_ant2000,  ;
        "alter table sys_kzgs add DAT_MONTH0 integer default 0" ;
        ) < 0
          syslog(3, 'PW-' +  ;
                mserial +  ;
                ' 数据表升级 Fail!',  ;
                'alter table sys_kzgs add DAT_MONTH0 integer default 0' ;
                )
          merr = 1
     ENDIF
     IF SQLEXEC(odbc_ant2000,  ;
        "alter table sys_kzgs add DAT_DAY0 integer default 0" ;
        ) < 0
          syslog(3, 'PW-' +  ;
                mserial +  ;
                ' 数据表升级 Fail!',  ;
                'alter table sys_kzgs add DAT_DAY0 integer default 0' ;
                )
          merr = 1
     ENDIF
     IF SQLEXEC(odbc_ant2000,  ;
        "alter table sys_kzgs add DAT_HOUR0 integer default 0" ;
        ) < 0
          syslog(3, 'PW-' +  ;
                mserial +  ;
                ' 数据表升级 Fail!',  ;
                'alter table sys_kzgs add DAT_HOUR0 integer default 0' ;
                )
          merr = 1
     ENDIF
     IF SQLEXEC(odbc_ant2000,  ;
        "alter table sys_kzgs add DAT_MINUTE0 integer default 0" ;
        ) < 0
          syslog(3, 'PW-' +  ;
                mserial +  ;
                ' 数据表升级 Fail!',  ;
                'alter table sys_kzgs add DAT_MINUTE0 integer default 0' ;
                )
          merr = 1
     ENDIF
     IF SQLEXEC(odbc_ant2000,  ;
        "alter table sys_kzgs add DAT_WEEK0 integer default 0" ;
        ) < 0
          syslog(3, 'PW-' +  ;
                mserial +  ;
                ' 数据表升级 Fail!',  ;
                'alter table sys_kzgs add DAT_WEEK0 integer default 0' ;
                )
          merr = 1
     ENDIF
     IF SQLEXEC(odbc_ant2000,  ;
        "alter table sys_kzgs add DAT_INOUT0 integer default 0" ;
        ) < 0
          syslog(3, 'PW-' +  ;
                mserial +  ;
                ' 数据表升级 Fail!',  ;
                'alter table sys_kzgs add DAT_INOUT0 integer default 0' ;
                )
          merr = 1
     ENDIF
     IF SQLEXEC(odbc_ant2000,  ;
        "alter table sys_kzgs add DAT_ID0 integer default 0" ;
        ) < 0
          syslog(3, 'PW-' +  ;
                mserial +  ;
                ' 数据表升级 Fail!',  ;
                'alter table sys_kzgs add DAT_MINUTE0 integer default 0' ;
                )
          merr = 1
     ENDIF
     IF SQLEXEC(odbc_ant2000,  ;
        "alter table sys_kzgs add DAT_FLAG integer default 0" ;
        ) < 0
          syslog(3, 'PW-' +  ;
                mserial +  ;
                ' 数据表升级 Fail!',  ;
                'alter table sys_kzgs add DAT_FLAG integer default 0' ;
                )
          merr = 1
     ENDIF
     IF SQLEXEC(odbc_ant2000,  ;
        "alter table sys_kzgs add DAT_SEPERATOR varchar(1) default ' '" ;
        ) < 0
          syslog(3, 'PW-' +  ;
                mserial +  ;
                ' 数据表升级 Fail!',  ;
                'alter table sys_kzgs add DAT_SEPERATOR varchar(1) default " "' ;
                )
          merr = 1
     ENDIF
     IF SQLEXEC(odbc_ant2000,  ;
        "alter table sys_kzgs add DAT_SKIPLINES integer default 0" ;
        ) < 0
          syslog(3, 'PW-' +  ;
                mserial +  ;
                ' 数据表升级 Fail!',  ;
                'alter table sys_kzgs add DAT_SKIPLINES integer default 0' ;
                )
          merr = 1
     ENDIF
     IF merr = 0
          = SQLEXEC(odbc_ant2000,  ;
            "update rs_bm set base=0,plus=0,minus=0" ;
            )
          = SQLEXEC(odbc_ant2000,  ;
            "update rs_yd set oldcode='',chgtype=''" ;
            )
          = SQLEXEC(odbc_ant2000,  ;
            "update sys_kzgs set DAT_ZGBH0=0,DAT_MONTH0=0,DAT_DAY0=0,DAT_HOUR0=0,DAT_MINUTE0=0,DAT_WEEK0=0,DAT_INOUT0=0,DAT_ID0=0,DAT_FLAG=0,DAT_SEPERATOR=' ',DAT_SKIPLINES=0" ;
            )
          syslog(3, 'PW-' +  ;
                mserial +  ;
                ' 数据表升级 Ok!',  ;
                '')
     ENDIF
     mrun = 'PW-' + mserial
ENDIF
mserial = '2.00-20040329'
IF EMPTY(mver) .OR. mhd <> 'PW'  ;
   .OR. mtl < mserial
     IF mmsg = -1
          mmsg = MESSAGEBOX('检测到旧的系统版本，需要升级吗？',  ;
                 035, 'ANT2000')
          DO CASE
               CASE mmsg = 7
                    RETURN
               CASE mmsg = 2
                    QUIT
          ENDCASE
     ENDIF
     mrun = 'PW-' + mserial
     WAIT WINDOW NOWAIT  ;
          "正在升级数据库系统，请等待...PW-" +  ;
          mserial
     syslog(3, mrun +  ;
           ' 数据表升级', '')
     IF SQLEXEC(odbc_ant2000,  ;
        'alter table rs_zg add flag integer default 1' ;
        ) < 0
          syslog(3, mrun +  ;
                ' 数据表升级 Fail!',  ;
                'alter table rs_zg add flag integer default 1' ;
                )
          merr = 1
     ELSE
          = SQLEXEC(odbc_ant2000,  ;
            'update rs_zg set flag=1' ;
            )
     ENDIF
     IF merr = 0
          syslog(3, mrun +  ;
                ' 数据表升级 Ok!',  ;
                '')
     ENDIF
ENDIF
mserial = '2.00-20040332'
IF EMPTY(mver) .OR. mhd <> 'PW'  ;
   .OR. mtl < mserial
     IF mmsg = -1
          mmsg = MESSAGEBOX('检测到旧的系统版本，需要升级吗？',  ;
                 035, 'ANT2000')
          DO CASE
               CASE mmsg = 7
                    RETURN
               CASE mmsg = 2
                    QUIT
          ENDCASE
     ENDIF
     mrun = 'PW-' + mserial
     WAIT WINDOW NOWAIT  ;
          "正在升级数据库系统，请等待...PW-" +  ;
          mserial
     syslog(3, mrun +  ;
           ' 数据表升级', '')
     mfd = "code varchar(2),rid integer,"
     mfd = mfd +  ;
           "rank01 varchar(50),name01 varchar(50),"
     mfd = mfd +  ;
           "rank02 varchar(50),name02 varchar(50),"
     mfd = mfd +  ;
           "rank03 varchar(50),name03 varchar(50),"
     mfd = mfd +  ;
           "rank04 varchar(50),name04 varchar(50),"
     mfd = mfd +  ;
           "rank05 varchar(50),name05 varchar(50),"
     mfd = mfd +  ;
           "rank06 varchar(50),name06 varchar(50),"
     mfd = mfd +  ;
           "rank07 varchar(50),name07 varchar(50),"
     mfd = mfd +  ;
           "rank08 varchar(50),name08 varchar(50),"
     mfd = mfd +  ;
           "rank09 varchar(50),name09 varchar(50),"
     mfd = mfd +  ;
           "rank10 varchar(50),name10 varchar(50),"
     mfd = mfd +  ;
           "note varchar(100),nodeid varchar(20),"
     mfd = mfd +  ;
           "rel_row integer,rel_col integer"
     IF SQLEXEC(odbc_ant2000,  ;
        "drop TABLE tmp_org") >  ;
        0
          IF SQLEXEC(odbc_ant2000,  ;
             "CREATE TABLE tmp_org (" +  ;
             mfd + ")") < 0
               syslog(3, mrun +  ;
                     ' 数据表升级 Fail!',  ;
                     'CREATE TABLE tmp_org (' +  ;
                     mfd + ')')
               merr = 1
          ENDIF
     ELSE
          syslog(3, mrun +  ;
                ' 数据表升级 Fail!',  ;
                'drop TABLE tmp_org' ;
                )
          merr = 1
     ENDIF
     IF merr = 0
          syslog(3, mrun +  ;
                ' 数据表升级 Ok!',  ;
                '')
     ENDIF
ENDIF
mserial = '2.00-20040405'
IF EMPTY(mver) .OR. mhd <> 'PW'  ;
   .OR. mtl < mserial
     IF mmsg = -1
          mmsg = MESSAGEBOX('检测到旧的系统版本，需要升级吗？',  ;
                 035, 'ANT2000')
          DO CASE
               CASE mmsg = 7
                    RETURN
               CASE mmsg = 2
                    QUIT
          ENDCASE
     ENDIF
     mrun = 'PW-' + mserial
     WAIT WINDOW NOWAIT  ;
          "正在升级数据库系统，请等待...PW-" +  ;
          mserial
     syslog(3, mrun +  ;
           ' sys_company数据表升级',  ;
           '')
     IF SQLEXEC(odbc_ant2000,  ;
        "alter table sys_company add totalflag integer default 0" ;
        ) > 0
          IF SQLEXEC(odbc_ant2000,  ;
             "update sys_company set totalflag=0" ;
             ) < 0
               syslog(3, mrun +  ;
                     ' sys_company数据表升级 Fail!',  ;
                     'update sys_company set totalflag=0' ;
                     )
               merr = 1
          ENDIF
     ELSE
          syslog(3, mrun +  ;
                ' sys_company数据表升级 Fail!',  ;
                'alter table sys_company add totalflag integer default 0' ;
                )
          merr = 1
     ENDIF
     IF SQLEXEC(odbc_ant2000,  ;
        "alter table sys_company add totalpos integer default 0" ;
        ) > 0
          IF SQLEXEC(odbc_ant2000,  ;
             "update sys_company set totalpos=0" ;
             ) < 0
               syslog(3, mrun +  ;
                     ' sys_company数据表升级 Fail!',  ;
                     'update sys_company set totalpos=0' ;
                     )
               merr = 1
          ENDIF
     ELSE
          syslog(3, mrun +  ;
                ' sys_company数据表升级 Fail!',  ;
                'alter table sys_company add totalpos integer default 0' ;
                )
          merr = 1
     ENDIF
     IF merr = 0
          syslog(3, mrun +  ;
                ' 数据表升级 Ok!',  ;
                '')
     ENDIF
ENDIF
mserial = '2.00-20040525'
IF EMPTY(mver) .OR. mhd <> 'PW'  ;
   .OR. mtl < mserial
     IF mmsg = -1
          mmsg = MESSAGEBOX('检测到旧的系统版本，需要升级吗？',  ;
                 035, 'ANT2000')
          DO CASE
               CASE mmsg = 7
                    RETURN
               CASE mmsg = 2
                    QUIT
          ENDCASE
     ENDIF
     mrun = 'PW-' + mserial
     WAIT WINDOW NOWAIT  ;
          "正在升级数据库系统，请等待...PW-" +  ;
          mserial
     syslog(3, mrun +  ;
           ' rs_bxbl数据表升级',  ;
           '')
     IF SQLEXEC(odbc_ant2000,  ;
        "alter table rs_bxbl add minbase float default 0" ;
        ) > 0
          IF SQLEXEC(odbc_ant2000,  ;
             "update rs_bxbl set minbase=0" ;
             ) < 0
               syslog(3, mrun +  ;
                     ' rs_bxbl数据表升级 Fail!',  ;
                     'update rs_bxbl set minbase=0' ;
                     )
               merr = 1
          ENDIF
     ELSE
          syslog(3, mrun +  ;
                ' rs_bxbl数据表升级 Fail!',  ;
                'alter table rs_bxbl add minbase float default 0' ;
                )
          merr = 1
     ENDIF
     IF merr = 0
          syslog(3, mrun +  ;
                ' 数据表升级 Ok!',  ;
                '')
     ENDIF
ENDIF
mserial = '2.00-20040527'
IF EMPTY(mver) .OR. mhd <> 'PW'  ;
   .OR. mtl < mserial
     IF mmsg = -1
          mmsg = MESSAGEBOX('检测到旧的系统版本，需要升级吗？',  ;
                 035, 'ANT2000')
          DO CASE
               CASE mmsg = 7
                    RETURN
               CASE mmsg = 2
                    QUIT
          ENDCASE
     ENDIF
     mrun = 'PW-' + mserial
     WAIT WINDOW NOWAIT  ;
          "正在升级数据库系统，请等待...PW-" +  ;
          mserial
     syslog(3, mrun +  ;
           ' kq_kqlb数据表升级',  ;
           '')
     IF SQLEXEC(odbc_ant2000,  ;
        "update kq_kqlb set disp=0 where lbbh>=70 and lbbh<=72" ;
        ) < 0
          syslog(3, mrun +  ;
                ' kq_kqlb数据表升级 Fail!',  ;
                'update kq_kqlb set disp=0 where lbbh>=70 and lbbh<=72' ;
                )
          merr = 1
     ENDIF
     IF merr = 0
          syslog(3, mrun +  ;
                ' 数据表升级 Ok!',  ;
                '')
     ENDIF
ENDIF
mserial = '2.00-20040530'
IF EMPTY(mver) .OR. mhd <> 'PW'  ;
   .OR. mtl < mserial
     IF mmsg = -1
          mmsg = MESSAGEBOX('检测到旧的系统版本，需要升级吗？',  ;
                 035, 'ANT2000')
          DO CASE
               CASE mmsg = 7
                    RETURN
               CASE mmsg = 2
                    QUIT
          ENDCASE
     ENDIF
     mrun = 'PW-' + mserial
     WAIT WINDOW NOWAIT  ;
          "正在升级数据库系统，请等待...PW-" +  ;
          mserial
     syslog(3, mrun +  ;
           ' 数据表升级', '')
     IF SQLEXEC(odbc_ant2000,  ;
        "alter table kq_time add bcmark varchar(4) default ' '" ;
        ) < 0
          syslog(3, mrun +  ;
                ' 数据表升级 Fail!',  ;
                'alter table kq_time add bcmark varchar(4) default " "' ;
                )
          merr = 1
     ELSE
          = SQLEXEC(odbc_ant2000,  ;
            "update kq_time set bcmark=' '" ;
            )
     ENDIF
     IF SQLEXEC(odbc_ant2000,  ;
        "alter table kq_kqlb add kqmark varchar(4) default ' '" ;
        ) < 0
          syslog(3, mrun +  ;
                ' 数据表升级 Fail!',  ;
                'alter table kq_kqlb add kqmark varchar(4) default " "' ;
                )
          merr = 1
     ELSE
          = SQLEXEC(odbc_ant2000,  ;
            "update kq_kqlb set kqmark=' '" ;
            )
     ENDIF
     IF merr = 0
          syslog(3, mrun +  ;
                ' 数据表升级 Ok!',  ;
                '')
     ENDIF
ENDIF
mserial = '2.00-20040628'
IF EMPTY(mver) .OR. mhd <> 'PW'  ;
   .OR. mtl < mserial
     IF mmsg = -1
          mmsg = MESSAGEBOX('检测到旧的系统版本，需要升级吗？',  ;
                 035, 'ANT2000')
          DO CASE
               CASE mmsg = 7
                    RETURN
               CASE mmsg = 2
                    QUIT
          ENDCASE
     ENDIF
     mrun = 'PW-' + mserial
     WAIT WINDOW NOWAIT  ;
          "正在升级数据库系统，请等待...PW-" +  ;
          mserial
     syslog(3, mrun +  ;
           ' 数据表升级', '')
     mfd = "CODE INTEGER NOT NULL PRIMARY KEY,"
     mfd = mfd +  ;
           "NAME VARCHAR(20)"
     SQLEXEC(odbc_ant2000,  ;
            "DROP TABLE SYS_CD_ZJ" ;
            )
     if sqlexec(ODBC_ANT2000,"CREATE TABLE sys_cd_zj (&mfd)")>0;

          SQLEXEC(odbc_ant2000,  ;
                 "INSERT INTO SYS_CD_zj (CODE,NAME) VALUES (0,' ')" ;
                 )
          SQLEXEC(odbc_ant2000,  ;
                 "INSERT INTO SYS_CD_zj (CODE,NAME) VALUES (1,'直接')" ;
                 )
          SQLEXEC(odbc_ant2000,  ;
                 "INSERT INTO SYS_CD_zj (CODE,NAME) VALUES (2,'间接')" ;
                 )
     ENDIF
ENDIF
mserial = '2.00-20040902'
IF EMPTY(mver) .OR. mhd <> 'PW'  ;
   .OR. mtl < mserial
     IF mmsg = -1
          mmsg = MESSAGEBOX('检测到旧的系统版本，需要升级吗？',  ;
                 035, 'ANT2000')
          DO CASE
               CASE mmsg = 7
                    RETURN
               CASE mmsg = 2
                    QUIT
          ENDCASE
     ENDIF
     mrun = 'PW-' + mserial
     WAIT WINDOW NOWAIT  ;
          "正在升级数据库系统，请等待...PW-" +  ;
          mserial
     syslog(3, mrun +  ;
           ' 数据表升级', '')
ENDIF
mserial = '2.00-20040915'
IF EMPTY(mver) .OR. mhd <> 'PW'  ;
   .OR. mtl < mserial
     IF mmsg = -1
          mmsg = MESSAGEBOX('检测到旧的系统版本，需要升级吗？',  ;
                 035, 'ANT2000')
          DO CASE
               CASE mmsg = 7
                    RETURN
               CASE mmsg = 2
                    QUIT
          ENDCASE
     ENDIF
     mrun = 'PW-' + mserial
     WAIT WINDOW NOWAIT  ;
          "正在升级数据库系统，请等待...PW-" +  ;
          mserial
     syslog(3, mrun +  ;
           ' 数据表升级', '')
     IF SQLEXEC(odbc_ant2000,  ;
        "alter table ft_time add jbmin integer default 0" ;
        ) > 0
          SQLEXEC(odbc_ant2000,  ;
                 "update ft_time set jbmin=0" ;
                 )
     ELSE
          syslog(3, mrun +  ;
                ' 数据表升级 Fail!',  ;
                'alter table ft_time add jbmin integer default 0' ;
                )
          merr = 1
     ENDIF
     IF merr = 0
          syslog(3, mrun +  ;
                ' 数据表升级 Ok!',  ;
                'alter table ft_time add jbmin integer default 0' ;
                )
     ENDIF
ENDIF
mserial = '2.00-20040926'
IF EMPTY(mver) .OR. mhd <> 'PW'  ;
   .OR. mtl < mserial
     IF mmsg = -1
          mmsg = MESSAGEBOX('检测到旧的系统版本，需要升级吗？',  ;
                 035, 'ANT2000')
          DO CASE
               CASE mmsg = 7
                    RETURN
               CASE mmsg = 2
                    QUIT
          ENDCASE
     ENDIF
     mrun = 'PW-' + mserial
     WAIT WINDOW NOWAIT  ;
          "正在升级数据库系统，请等待...PW-" +  ;
          mserial
     syslog(3, mrun +  ;
           ' 数据表升级', '')
     IF SQLEXEC(odbc_ant2000,  ;
        "alter table kq_replist add toplines integer default 0" ;
        ) > 0
          SQLEXEC(odbc_ant2000,  ;
                 "update kq_replist set toplines=0" ;
                 )
          syslog(3, mrun +  ;
                ' 数据表升级 Ok!',  ;
                'alter table kq_replist add toplines integer default 0' ;
                )
     ELSE
          syslog(3, mrun +  ;
                ' 数据表升级 Fail!',  ;
                'alter table kq_replist add toplines integer default 0' ;
                )
          merr = 1
     ENDIF
     IF SQLEXEC(odbc_ant2000,  ;
        "alter table kq_replist add optsort integer default 1" ;
        ) > 0
          SQLEXEC(odbc_ant2000,  ;
                 "update kq_replist set optsort=1" ;
                 )
          syslog(3, mrun +  ;
                ' 数据表升级 Ok!',  ;
                'alter table kq_replist add optsort integer default 1' ;
                )
     ELSE
          syslog(3, mrun +  ;
                ' 数据表升级 Fail!',  ;
                'alter table kq_replist add optsort integer default 1' ;
                )
          merr = 1
     ENDIF
ENDIF
mserial = '2.00-20041115'
IF EMPTY(mver) .OR. mhd <> 'PW'  ;
   .OR. mtl < mserial
     IF mmsg = -1
          mmsg = MESSAGEBOX('检测到旧的系统版本，需要升级吗？',  ;
                 035, 'ANT2000')
          DO CASE
               CASE mmsg = 7
                    RETURN
               CASE mmsg = 2
                    QUIT
          ENDCASE
     ENDIF
     mrun = 'PW-' + mserial
     WAIT WINDOW NOWAIT  ;
          "正在升级数据库系统，请等待...PW-" +  ;
          mserial
     syslog(3, mrun +  ;
           ' 数据表升级', '')
     IF SQLEXEC(odbc_ant2000,  ;
        "alter table kq_dtime add flag varchar(4) default '一般'" ;
        ) > 0
          SQLEXEC(odbc_ant2000,  ;
                 "update kq_dtime set flag='一般'" ;
                 )
          syslog(3, mrun +  ;
                ' 数据表升级 Ok!',  ;
                'alter table kq_dtime add flag varchar(4) default "一般"' ;
                )
     ELSE
          syslog(3, mrun +  ;
                ' 数据表升级 Fail!',  ;
                'alter table kq_dtime add flag varchar(4) default "一般"' ;
                )
          merr = 1
     ENDIF
ENDIF
mserial = '2.00-20050223'
IF EMPTY(mver) .OR. mhd <> 'PW'  ;
   .OR. mtl < mserial
     IF mmsg = -1
          mmsg = MESSAGEBOX('检测到旧的系统版本，需要升级吗？',  ;
                 035, 'ANT2000')
          DO CASE
               CASE mmsg = 7
                    RETURN
               CASE mmsg = 2
                    QUIT
          ENDCASE
     ENDIF
     mrun = 'PW-' + mserial
     WAIT WINDOW NOWAIT  ;
          "正在升级数据库系统，请等待...PW-" +  ;
          mserial
     syslog(3, mrun +  ;
           ' 数据表升级', '')
     IF SQLEXEC(odbc_ant2000,  ;
        "alter table kq_nj_sh add optround integer default 1" ;
        ) > 0
          SQLEXEC(odbc_ant2000,  ;
                 "update kq_nj_sh set optround=1" ;
                 )
          syslog(3, mrun +  ;
                ' 数据表升级 Ok!',  ;
                'alter table kq_nj_sh add optround integer default 1' ;
                )
     ELSE
          syslog(3, mrun +  ;
                ' 数据表升级 Fail!',  ;
                'alter table kq_nj_sh add optround integer default 1' ;
                )
          merr = 1
     ENDIF
ENDIF
mserial = '2.00-20050303'
IF EMPTY(mver) .OR. mhd <> 'PW'  ;
   .OR. mtl < mserial
     IF mmsg = -1
          mmsg = MESSAGEBOX('检测到旧的系统版本，需要升级吗？',  ;
                 035, 'ANT2000')
          DO CASE
               CASE mmsg = 7
                    RETURN
               CASE mmsg = 2
                    QUIT
          ENDCASE
     ENDIF
     mrun = 'PW-' + mserial
     WAIT WINDOW NOWAIT  ;
          "正在升级数据库系统，请等待...PW-" +  ;
          mserial
     syslog(3, mrun +  ;
           ' 数据表升级', '')
     IF SQLEXEC(odbc_ant2000,  ;
        "alter table ft_lskh add yxks varchar(10) default '',add yxjs varchar(10) default ''" ;
        ) > 0
          SQLEXEC(odbc_ant2000,  ;
                 "update ft_lskh set yxks=' ',yxjs=' '" ;
                 )
          syslog(3, mrun +  ;
                ' 数据表升级 Ok!',  ;
                "alter table ft_lskh add yxks varchar(10) default '',add yxjs varchar(10) default ''" ;
                )
     ELSE
          syslog(3, mrun +  ;
                ' 数据表升级 Fail!',  ;
                "alter table ft_lskh add yxks varchar(10) default '',add yxjs varchar(10) default ''" ;
                )
          merr = 1
     ENDIF
ENDIF
mserial = '2.00-20050309'
IF EMPTY(mver) .OR. mhd <> 'PW'  ;
   .OR. mtl < mserial
     IF mmsg = -1
          mmsg = MESSAGEBOX('检测到旧的系统版本，需要升级吗？',  ;
                 035, 'ANT2000')
          DO CASE
               CASE mmsg = 7
                    RETURN
               CASE mmsg = 2
                    QUIT
          ENDCASE
     ENDIF
     mrun = 'PW-' + mserial
     WAIT WINDOW NOWAIT  ;
          "正在升级数据库系统，请等待...PW-" +  ;
          mserial
     syslog(3, mrun +  ;
           ' 数据表升级', '')
     IF SQLEXEC(odbc_ant2000,  ;
        "alter table ft_zg add zglb varchar(3) default ''" ;
        ) > 0
          SQLEXEC(odbc_ant2000,  ;
                 "update ft_zg set zglb=' '" ;
                 )
          IF pub_extension = 1
               SQLEXEC(odbc_ant2000,  ;
                      "update ft_zg set zglb='1'" ;
                      )
               SQLEXEC(odbc_ant2000,  ;
                      "update ft_zg set zglb='2' where zgbh like '5%'" ;
                      )
               SQLEXEC(odbc_ant2000,  ;
                      "update ft_zg set zglb='3' where zgbh like 'LS-%'" ;
                      )
               SQLEXEC(odbc_ant2000,  ;
                      "update ft_zg set zglb='4' where zgbh like 'LS-9%'" ;
                      )
          ENDIF
          syslog(3, mrun +  ;
                ' 数据表升级 Ok!',  ;
                "alter table ft_zg add zglb varchar(3) default ''" ;
                )
     ELSE
          syslog(3, mrun +  ;
                ' 数据表升级 Fail!',  ;
                "alter table ft_zg add zglb varchar(3) default ''" ;
                )
          merr = 1
     ENDIF
     SQLEXEC(odbc_ant2000,  ;
            "DROP TABLE ft_yglb" ;
            )
     IF SQLEXEC(odbc_ant2000,  ;
        "create table ft_yglb(lbbh varchar(3) not null,yglb varchar(10),bz varchar(30),constraint PK_ft_yglb Primary Key(lbbh))" ;
        ) > 0
          IF pub_extension = 1
               SQLEXEC(odbc_ant2000,  ;
                      "insert into ft_yglb(lbbh,yglb) values('1','正式工')" ;
                      )
               SQLEXEC(odbc_ant2000,  ;
                      "insert into ft_yglb(lbbh,yglb) values('2','临时工')" ;
                      )
               SQLEXEC(odbc_ant2000,  ;
                      "insert into ft_yglb(lbbh,yglb) values('3','外包工')" ;
                      )
               SQLEXEC(odbc_ant2000,  ;
                      "insert into ft_yglb(lbbh,yglb) values('4','来宾')" ;
                      )
          ENDIF
          syslog(3, mrun +  ;
                ' 数据表升级 Ok!',  ;
                "create table ft_yglb(lbbh varchar(3) not null,yglb varchar(10),bz varchar(30)" ;
                )
     ELSE
          syslog(3, mrun +  ;
                ' 数据表升级 Fail!',  ;
                "create table ft_yglb(lbbh varchar(3) not null,yglb varchar(10),bz varchar(30)" ;
                )
          merr = 1
     ENDIF
ENDIF
mserial = '2.00-20050327'
IF EMPTY(mver) .OR. mhd <> 'PW'  ;
   .OR. mtl < mserial
     IF mmsg = -1
          mmsg = MESSAGEBOX('检测到旧的系统版本，需要升级吗？',  ;
                 035, 'ANT2000')
          DO CASE
               CASE mmsg = 7
                    RETURN
               CASE mmsg = 2
                    QUIT
          ENDCASE
     ENDIF
     mrun = 'PW-' + mserial
     WAIT WINDOW NOWAIT  ;
          "正在升级数据库系统，请等待...PW-" +  ;
          mserial
     syslog(3, mrun +  ;
           ' 数据表升级', '')
     msql = "alter table kq_nj_sh add firstyear integer default 0"
     IF SQLEXEC(odbc_ant2000,  ;
        msql) > 0
          SQLEXEC(odbc_ant2000,  ;
                 "update kq_nj_sh set firstyear=0" ;
                 )
          syslog(3, mrun +  ;
                ' 数据表升级 Ok!',  ;
                msql)
     ELSE
          syslog(3, mrun +  ;
                ' 数据表升级 Fail!',  ;
                msql)
          merr = 1
     ENDIF
ENDIF
mserial = '2.00-20050522'
IF EMPTY(mver) .OR. mhd <> 'PW'  ;
   .OR. mtl < mserial
     IF mmsg = -1
          mmsg = MESSAGEBOX('检测到旧的系统版本，需要升级吗？',  ;
                 035, 'ANT2000')
          DO CASE
               CASE mmsg = 7
                    RETURN
               CASE mmsg = 2
                    QUIT
          ENDCASE
     ENDIF
     mrun = 'PW-' + mserial
     WAIT WINDOW NOWAIT  ;
          "正在升级数据库系统，请等待...PW-" +  ;
          mserial
     syslog(3, mrun +  ;
           ' 数据表升级', '')
     msql = "insert into SYS_INI (SEC,VAR,TYP,VAL) values ('KQGD','SJXX0','N','0')"
     SQLEXEC(odbc_ant2000, msql)
     msql = "insert into SYS_INI (SEC,VAR,TYP,VAL) values ('KQGD','SJXX1','N','0')"
     SQLEXEC(odbc_ant2000, msql)
     SQLEXEC(odbc_ant2000,  ;
            "insert into SYS_INI(SEC,VAR,TYP,VAL) values('FORMAT_KQ','VAL_INOUT','N','1')" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "insert into SYS_INI(SEC,VAR,TYP,VAL) values('FORMAT_KQ','VAL_IN','C',' ')" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "insert into SYS_INI(SEC,VAR,TYP,VAL) values('FORMAT_KQ','VAL_OUT','C',' ')" ;
            )
     DO update_allfield
ENDIF
mserial = '2.00-20050609'
IF EMPTY(mver) .OR. mhd <> 'PW'  ;
   .OR. mtl < mserial
     IF mmsg = -1
          mmsg = MESSAGEBOX('检测到旧的系统版本，需要升级吗？',  ;
                 035, 'ANT2000')
          DO CASE
               CASE mmsg = 7
                    RETURN
               CASE mmsg = 2
                    QUIT
          ENDCASE
     ENDIF
     mrun = 'PW-' + mserial
     WAIT WINDOW NOWAIT  ;
          "正在升级数据库系统，请等待...PW-" +  ;
          mserial
     syslog(3, mrun +  ;
           ' 数据表升级', '')
     IF SQLEXEC(odbc_ant2000,  ;
        "alter table gz_replist add toplines integer default 0" ;
        ) > 0
          SQLEXEC(odbc_ant2000,  ;
                 "update gz_replist set toplines=0" ;
                 )
          syslog(3, mrun +  ;
                ' 数据表升级 Ok!',  ;
                'alter table gz_replist add toplines integer default 0' ;
                )
     ELSE
          syslog(3, mrun +  ;
                ' 数据表升级 Fail!',  ;
                'alter table gz_replist add toplines integer default 0' ;
                )
          merr = 1
     ENDIF
     IF SQLEXEC(odbc_ant2000,  ;
        "alter table gz_replist add optsort integer default 1" ;
        ) > 0
          SQLEXEC(odbc_ant2000,  ;
                 "update gz_replist set optsort=1" ;
                 )
          syslog(3, mrun +  ;
                ' 数据表升级 Ok!',  ;
                'alter table gz_replist add optsort integer default 1' ;
                )
     ELSE
          syslog(3, mrun +  ;
                ' 数据表升级 Fail!',  ;
                'alter table gz_replist add optsort integer default 1' ;
                )
          merr = 1
     ENDIF
     msql = "alter table gz_replist add psort varchar(50) default ' '"
     IF SQLEXEC(odbc_ant2000,  ;
        msql) > 0
          SQLEXEC(odbc_ant2000,  ;
                 "update gz_replist set psort=' '" ;
                 )
          syslog(3, mrun +  ;
                ' 数据表升级 Ok!',  ;
                msql)
     ELSE
          syslog(3, mrun +  ;
                ' 数据表升级 Fail!',  ;
                msql)
          merr = 1
     ENDIF
     msql = "alter table kq_replist add psort varchar(50) default ' '"
     IF SQLEXEC(odbc_ant2000,  ;
        msql) > 0
          SQLEXEC(odbc_ant2000,  ;
                 "update kq_replist set psort=' '" ;
                 )
          syslog(3, mrun +  ;
                ' 数据表升级 Ok!',  ;
                msql)
     ELSE
          syslog(3, mrun +  ;
                ' 数据表升级 Fail!',  ;
                msql)
          merr = 1
     ENDIF
ENDIF
mserial = '2.00-20050617'
IF EMPTY(mver) .OR. mhd <> 'PW'  ;
   .OR. mtl < mserial
     IF mmsg = -1
          mmsg = MESSAGEBOX('检测到旧的系统版本，需要升级吗？',  ;
                 035, 'ANT2000')
          DO CASE
               CASE mmsg = 7
                    RETURN
               CASE mmsg = 2
                    QUIT
          ENDCASE
     ENDIF
     mrun = 'PW-' + mserial
     WAIT WINDOW NOWAIT  ;
          "正在升级数据库系统，请等待...PW-" +  ;
          mserial
     syslog(3, mrun +  ;
           ' 数据表升级', '')
     msql = "alter table kq_zg alter qf type varchar(2)"
     IF SQLEXEC(odbc_ant2000,  ;
        msql) > 0
          syslog(3, mrun +  ;
                ' 数据表升级 Ok!',  ;
                msql)
     ELSE
          msql = "alter table kq_zg alter column qf varchar(4)"
          IF SQLEXEC(odbc_ant2000,  ;
             msql) > 0
               syslog(3, mrun +  ;
                     ' 数据表升级 Ok!',  ;
                     msql)
          ELSE
               syslog(3, mrun +  ;
                     ' 数据表升级 Fail!',  ;
                     msql)
               merr = 1
          ENDIF
     ENDIF
ENDIF
mserial = '2.00-20050619'
IF EMPTY(mver) .OR. mhd <> 'PW'  ;
   .OR. mtl < mserial
     IF mmsg = -1
          mmsg = MESSAGEBOX('检测到旧的系统版本，需要升级吗？',  ;
                 035, 'ANT2000')
          DO CASE
               CASE mmsg = 7
                    RETURN
               CASE mmsg = 2
                    QUIT
          ENDCASE
     ENDIF
     mrun = 'PW-' + mserial
     WAIT WINDOW NOWAIT  ;
          "正在升级数据库系统，请等待...PW-" +  ;
          mserial
     syslog(3, mrun +  ;
           ' 数据表升级', '')
     msql = "alter table kq_ShiftType add bcs varchar(150) default ' '"
     IF SQLEXEC(odbc_ant2000,  ;
        msql) > 0
          SQLEXEC(odbc_ant2000,  ;
                 "update kq_ShiftType set bcs=' '" ;
                 )
          syslog(3, mrun +  ;
                ' 数据表升级 Ok!',  ;
                msql)
     ELSE
          syslog(3, mrun +  ;
                ' 数据表升级 Fail!',  ;
                msql)
          merr = 1
     ENDIF
ENDIF
mserial = '2.00-20050627'
IF EMPTY(mver) .OR. mhd <> 'PW'  ;
   .OR. mtl < mserial
     IF mmsg = -1
          mmsg = MESSAGEBOX('检测到旧的系统版本，需要升级吗？',  ;
                 035, 'ANT2000')
          DO CASE
               CASE mmsg = 7
                    RETURN
               CASE mmsg = 2
                    QUIT
          ENDCASE
     ENDIF
     mrun = 'PW-' + mserial
     WAIT WINDOW NOWAIT  ;
          "正在升级数据库系统，请等待...PW-" +  ;
          mserial
     syslog(3, mrun +  ;
           ' 数据表升级', '')
     haserror = .F.
     hasupdated = .F.
     mysql = "select * from sys_Counter where xuhao=8"
     IF SQLEXEC(odbc_ant2000,  ;
        mysql, "SysCounter") <=  ;
        0
          haserror = .T.
     ENDIF
     IF  .NOT. haserror
          IF RECCOUNT("SysCounter") >  ;
             0
               hasupdated = .T.
          ENDIF
          SELECT syscounter
          USE
     ENDIF
     IF  .NOT. haserror .AND.   ;
         .NOT. hasupdated
          mysql = "select * from rs_jlwp"
          IF SQLEXEC(odbc_ant2000,  ;
             mysql, "rs_jlwp") <=  ;
             0
               haserror = .T.
          ENDIF
     ENDIF
     IF  .NOT. haserror .AND.   ;
         .NOT. hasupdated
          rowcount = RECCOUNT("rs_jlwp")
          mysql = "insert into Sys_Counter(xuhao,jishuqi,flag,bz) values(8,?RowCount,'1','for rs_jlwp')"
          IF SQLEXEC(odbc_ant2000,  ;
             mysql) <= 0
               haserror = .T.
          ENDIF
     ENDIF
     IF  .NOT. haserror .AND.   ;
         .NOT. hasupdated
          mfd = "ID   Integer Not Null Primary Key,"
          mfd = mfd +  ;
                "ZGBH VARCHAR(10) not null,"
          mfd = mfd +  ;
                "WPMC VARCHAR(60) not null,"
          mfd = mfd +  ;
                "XHGG VARCHAR(20) default '',"
          mfd = mfd +  ;
                "SL   INTEGER default 0,"
          mfd = mfd +  ;
                "DJ   DOUBLE PRECISION default 0,"
          mfd = mfd +  ;
                "XJ   DOUBLE PRECISION default 0,"
          mfd = mfd +  ;
                "LQSJ VARCHAR(10) NOT NULL,"
          mfd = mfd +  ;
                "LYXZ VARCHAR(10) default '',"
          mfd = mfd +  ;
                "SYNX DOUBLE PRECISION default 0,"
          mfd = mfd +  ;
                "IFGH INTEGER default 0,"
          mfd = mfd +  ;
                "GHRQ VARCHAR(10) default '',"
          mfd = mfd +  ;
                "BZ   VARCHAR(40) default ''"
          SQLEXEC(odbc_ant2000,  ;
                 "DROP TABLE RS_JLWP" ;
                 )
          msql = "CREATE TABLE RS_JLWP (" +  ;
                 mfd + ")"
          IF SQLEXEC(odbc_ant2000,  ;
             msql) < 0
               haserror = .T.
          ENDIF
     ENDIF
     IF  .NOT. haserror .AND.   ;
         .NOT. hasupdated
          SELECT rs_jlwp
          rowid = 1
          SCAN
               mysql = "insert into rs_jlwp(id,zgbh,wpmc,xhgg,sl,dj,xj,lqsj,lyxz,synx,ifgh,ghrq,bz) values(?RowID,?zgbh," +  ;
                       "'" +  ;
                       IIF(EMPTY(xhgg),  ;
                       ALLTRIM(wpmc),  ;
                       ALLTRIM(wpmc) +  ;
                       " " +  ;
                       ALLTRIM(xhgg)) +  ;
                       "',''," +  ;
                       "?sl,?dj,?xj,?lqsj,?lyxz,?synx,?ifgh,?ghrq,?bz)"
               IF SQLEXEC(odbc_ant2000,  ;
                  mysql) < 0
                    haserror = .T.
                    EXIT
               ENDIF
               rowid = rowid + 1
          ENDSCAN
          USE
     ENDIF
     IF  .NOT. haserror .AND.   ;
         .NOT. hasupdated
          mysql = "Update Sys_Counter set flag=' ' where xuhao=8"
          IF SQLEXEC(odbc_ant2000,  ;
             mysql) < 0
               haserror = .T.
          ENDIF
     ENDIF
     IF  .NOT. hasupdated
          IF haserror
               syslog(3, mrun +  ;
                     ' 数据表升级 Fail!',  ;
                     msql)
               merr = 1
          ELSE
               syslog(3, mrun +  ;
                     ' 数据表升级 Ok!',  ;
                     msql)
          ENDIF
     ENDIF
     hasupdated = tableisexist("RS_CD_WP")
     IF  .NOT. hasupdated
          mfd = "Code integer not null primary key,"
          mfd = mfd +  ;
                "Idx integer default 0,"
          mfd = mfd +  ;
                "Name varchar(60) default ''"
          SQLEXEC(odbc_ant2000,  ;
                 "drop TABLE rs_cd_wp" ;
                 )
          msql = "CREATE TABLE rs_cd_wp (" +  ;
                 mfd + ")"
          IF SQLEXEC(odbc_ant2000,  ;
             msql) > 0
               syslog(3, mrun +  ;
                     ' 数据表升级 Ok!',  ;
                     msql)
          ELSE
               syslog(3, mrun +  ;
                     ' 数据表升级 Fail!',  ;
                     msql)
               merr = 1
          ENDIF
     ENDIF
ENDIF
mserial = '2.00-20050801'
IF EMPTY(mver) .OR. mhd <> 'PW'  ;
   .OR. mtl < mserial
     IF mmsg = -1
          mmsg = MESSAGEBOX('检测到旧的系统版本，需要升级吗？',  ;
                 035, 'ANT2000')
          DO CASE
               CASE mmsg = 7
                    RETURN
               CASE mmsg = 2
                    QUIT
          ENDCASE
     ENDIF
     mrun = 'PW-' + mserial
     WAIT WINDOW NOWAIT  ;
          "正在升级数据库系统，请等待...PW-" +  ;
          mserial
     syslog(3, mrun +  ;
           ' 数据表升级', '')
     mfd = "FormID varchar(20) not null,"
     mfd = mfd +  ;
           "UserName varchar(30) not null,"
     mfd = mfd +  ;
           "ControlName varchar(50) not null,"
     mfd = mfd +  ;
           "ControlValue varchar(50),"
     mfd = mfd +  ;
           "Visible varchar(3),"
     mfd = mfd +  ;
           "Enabled varchar(3),"
     mfd = mfd +  ;
           "Constraint PK_Sys_FormDefault Primary Key (FormID,UserName,ControlName)"
     SQLEXEC(odbc_ant2000,  ;
            "Drop Table sys_FormDefault" ;
            )
     IF SQLEXEC(odbc_ant2000,  ;
        "Create Table sys_FormDefault (" +  ;
        mfd + ")") < 0
          syslog(3, mrun +  ;
                ' 数据表升级 Fail!',  ;
                'CREATE TABLE sys_FormDefault (' +  ;
                mfd + ')')
          merr = 1
     ENDIF
     IF merr = 0
          syslog(3, mrun +  ;
                ' 数据表升级 Ok!',  ;
                '')
     ENDIF
ENDIF
mserial = '2.00-20050815'
IF EMPTY(mver) .OR. mhd <> 'PW'  ;
   .OR. mtl < mserial
     IF mmsg = -1
          mmsg = MESSAGEBOX('检测到旧的系统版本，需要升级吗？',  ;
                 035, 'ANT2000')
          DO CASE
               CASE mmsg = 7
                    RETURN
               CASE mmsg = 2
                    QUIT
          ENDCASE
     ENDIF
     mrun = 'PW-' + mserial
     WAIT WINDOW NOWAIT  ;
          "正在升级数据库系统，请等待...PW-" +  ;
          mserial
     syslog(3, mrun +  ;
           ' 数据表升级', '')
     DO update_table_list
     DO update_screen
ENDIF
mserial = '2.00-20050819'
IF EMPTY(mver) .OR. mhd <> 'PW'  ;
   .OR. mtl < mserial
     IF mmsg = -1
          mmsg = MESSAGEBOX('检测到旧的系统版本，需要升级吗？',  ;
                 035, 'ANT2000')
          DO CASE
               CASE mmsg = 7
                    RETURN
               CASE mmsg = 2
                    QUIT
          ENDCASE
     ENDIF
     mrun = 'PW-' + mserial
     WAIT WINDOW NOWAIT  ;
          "正在升级数据库系统，请等待...PW-" +  ;
          mserial
     syslog(3, mrun +  ;
           ' 数据表升级', '')
     SQLEXEC(odbc_ant2000,  ;
            "update sys_chgtype set name='工类变动' where code=3" ;
            )
ENDIF
mserial = '2.00-20050823'
IF EMPTY(mver) .OR. mhd <> 'PW'  ;
   .OR. mtl < mserial
     IF mmsg = -1
          mmsg = MESSAGEBOX('检测到旧的系统版本，需要升级吗？',  ;
                 035, 'ANT2000')
          DO CASE
               CASE mmsg = 7
                    RETURN
               CASE mmsg = 2
                    QUIT
          ENDCASE
     ENDIF
     mrun = 'PW-' + mserial
     WAIT WINDOW NOWAIT  ;
          "正在升级数据库系统，请等待...PW-" +  ;
          mserial
     syslog(3, mrun +  ;
           ' 数据表升级', '')
     SQLEXEC(odbc_ant2000,  ;
            "insert into SYS_INI(SEC,VAR,TYP,VAL) values('FXPARA','NOSKKG','N','0')" ;
            )
ENDIF
mserial = '2.00-20050907'
IF EMPTY(mver) .OR. mhd <> 'PW'  ;
   .OR. mtl < mserial
     IF mmsg = -1
          mmsg = MESSAGEBOX('检测到旧的系统版本，需要升级吗？',  ;
                 035, 'ANT2000')
          DO CASE
               CASE mmsg = 7
                    RETURN
               CASE mmsg = 2
                    QUIT
          ENDCASE
     ENDIF
     mrun = 'PW-' + mserial
     WAIT WINDOW NOWAIT  ;
          "正在升级数据库的索引，请等待...PW-" +  ;
          mserial
     syslog(3, mrun + ' 索引升级',  ;
           '')
     SQLEXEC(odbc_ant2000,  ;
            "create index idx_kq_ardata on kq_ardata(riqi)" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "create index idx_kq_clfx on kq_clfx(riqi)" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "create index idx_kq_xjjl_d on kq_xjjl_d(riqi)" ;
            )
     SQLEXEC(odbc_ant2000,  ;
            "create index idx_ft_ardata on ft_ardata(riqi)" ;
            )
ENDIF
IF FILE("loc_repout.dbf")
     USE EXCLUSIVE loc_repout  ;
         ALIAS loc_repout IN 0
     SELECT loc_repout
     flag = .F.
     FOR i = 1 TO FCOUNT()
          IF FIELD(i) = "DW"
               flag = .T.
          ENDIF
     ENDFOR
     IF  .NOT. flag
          ALTER TABLE loc_repout  ;
                ADD COLUMN dw 'N'  ;
                (4)
     ENDIF
     USE
ENDIF
IF  .NOT. EMPTY(mrun)
     IF merr = 0
          WAIT WINDOW NOWAIT  ;
               "欢迎使用ANT2000人事考勤系统。"
     ELSE
          WAIT WINDOW NOWAIT  ;
               "升级中有错误发生，请查看系统日志。"
     ENDIF
     SQLEXEC(odbc_ant2000,  ;
            "select * from sys_ini where sec='SYSPARA' and var='VERSION'",  ;
            "temp")
     SELECT temp
     IF EOF()
          SQLEXEC(odbc_ant2000,  ;
                 "insert into SYS_INI(SEC,VAR,TYP,VAL) values('SYSPARA','VERSION','C',?mrun)" ;
                 )
     ELSE
          SQLEXEC(odbc_ant2000,  ;
                 "update SYS_INI set VAL=?mrun where SEC='SYSPARA' and VAR='VERSION'" ;
                 )
     ENDIF
     USE
     syslog(3, '数据表升级结束',  ;
           '')
ENDIF
ENDPROC
**
***
*** readgp20.fxp
***
*
ardata_filename = getantenv("MACHINE",  ;
                  "KQ_SRCFILE")
ardatafile = FCREATE(ardata_filename)
IF ardatafile < 0
     MESSAGEBOX('无法创建考勤数据文件！')
     = FCLOSE(ardatafile)
     RETURN
ENDIF
strsql = "SELECT * from sb_ardata WHERE ReadFlag=0"
sqlexe_run(00000000012, SYS(16),  ;
          strsql, "SB_ARDATA")
SELECT sb_ardata
SCAN
     IF EMPTY(CTOT(riqi))
          LOOP
     ENDIF
     tmp_datatime = CTOT(riqi)
     tmp_month = PADL(ALLTRIM(STR(MONTH(tmp_datatime))),  ;
                 2, "0")
     tmp_day = PADL(ALLTRIM(STR(DAY(tmp_datatime))),  ;
               2, "0")
     tmp_hour = PADL(ALLTRIM(STR(HOUR(tmp_datatime))),  ;
                2, "0")
     tmp_minute = PADL(ALLTRIM(STR(MINUTE(tmp_datatime))),  ;
                  2, "0")
     strinfo = SPACE(1) +  ;
               PADL(ALLTRIM(arrid),  ;
               2, "0") + SPACE(5) +  ;
               ALLTRIM(cardno) +  ;
               SPACE(1) +  ;
               ALLTRIM(io) +  ;
               SPACE(6) +  ;
               tmp_month +  ;
               SPACE(1) + tmp_day +  ;
               SPACE(1) +  ;
               tmp_hour +  ;
               SPACE(1) +  ;
               tmp_minute
     = FPUTS(ardatafile, strinfo)
     strsql = "update sb_ardata set readflag=1 WHERE ReadFlag=0 and cardno=?cardno and riqi=?riqi"
     sqlexe_run(00000000027,  ;
               SYS(16), strsql,  ;
               "")
ENDSCAN
= FCLOSE(ardatafile)
USE
RETURN
ENDPROC
**
***
*** p_esc.fxp
***
*
**
PROCEDURE P_ESC
IF pub_language
     IF MESSAGEBOX( ;
        "It is really to abort the processing?",  ;
        036, pub_subsys_language) =  ;
        6
          pub_escape = .T.
     ENDIF
ELSE
     IF MESSAGEBOX("真的要中断当前处理吗？",  ;
        036,  ;
        "ANT2000人事考勤系统") =  ;
        6
          pub_escape = .T.
     ENDIF
ENDIF
RETURN
ENDPROC
**
***
*** update_screen.fxp
***
*
mfd = "HMBH   VARCHAR(20) NOT NULL PRIMARY KEY,"
mfd = mfd + "HMMC   VARCHAR(20)"
SQLEXEC(odbc_ant2000,  ;
       "drop TABLE sys_cd_screen " ;
       )
sqlexec(ODBC_ANT2000,"CREATE TABLE  sys_cd_screen (&mfd)")
SQLEXEC(odbc_ant2000,  ;
       "insert into sys_cd_Screen (HMBH,HMMC) values ('3AGZ11',  '部门设置')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into sys_cd_Screen (HMBH,HMMC) values ('3AGZ12',  '薪资项目设置')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into sys_cd_Screen (HMBH,HMMC) values ('3AGZ121',  '考勤/就餐关联设定')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into sys_cd_Screen (HMBH,HMMC) values ('3AGZ13',  '员工基本资料')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into sys_cd_Screen (HMBH,HMMC) values ('3AGZ132', '调薪处理')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into sys_cd_Screen (HMBH,HMMC) values ('3AGZ135', '员工资料刷新')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into sys_cd_Screen (HMBH,HMMC) values ('3AGZ14',  '员工类别')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into sys_cd_Screen (HMBH,HMMC) values ('3AGZ15',  '薪资等级设置')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into sys_cd_Screen (HMBH,HMMC) values ('3AGZ151', '等级项目定义')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into sys_cd_Screen (HMBH,HMMC) values ('3AGZ16',  '所得税税率')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into sys_cd_Screen (HMBH,HMMC) values ('3AGZ17',  '转帐银行定义')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into sys_cd_Screen (HMBH,HMMC) values ('3AGZ171',  '格式定义')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into sys_cd_Screen (HMBH,HMMC) values ('3AGZ18',  '汇率录入')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into sys_cd_Screen (HMBH,HMMC) values ('3AGZ2',   '薪资处理')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into sys_cd_Screen (HMBH,HMMC) values ('3AGZ22',  '月薪资锁定处理')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into sys_cd_Screen (HMBH,HMMC) values ('3AGZ31',  '数据汇总')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into sys_cd_Screen (HMBH,HMMC) values ('3AGZ32',  '报表印刷')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into sys_cd_Screen (HMBH,HMMC) values ('3AGZ33',  '报表格式定义')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into sys_cd_Screen (HMBH,HMMC) values ('3AGZ34',  'EXCEL输出')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into sys_cd_Screen (HMBH,HMMC) values ('3AGZ41',  '操作权限管理')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AGZ_YD','资料异动处理')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AFT11','部门设置')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AFT12','员工资料')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AFT13','餐次价格')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AFT14','临时卡登记')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AFT142','一致性处理')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AFT15','场地登记')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AFT21','读刷卡钟数据')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AFT22','数据处理')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AFT23','刷卡记录查询')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AFT24','未刷卡人名单')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AFT25','就餐综合查询')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AFT26','签到就餐登记')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AFT31','月统计报表')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AFT32','日统计报表')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AFT33','个人明细表')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AFT34','异常就餐汇总')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AFT41','删除重复刷卡')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AFT42','刷卡记录格式')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AFT43','操作权限管理')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AFT71','就餐人数预报')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AKQ11','部门设置')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AKQ12','班次设定')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AKQ121','班类定义')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AKQ13','员工录入')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AKQ135','员工资料刷新')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AKQ14','员工类别')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AKQ15','考勤规定设置')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AKQ16','考勤类别定义')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AKQ17','标准休日定义')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AKQ18','节假日定义')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AKQ19','员工临时卡登记')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AKQ192','临时卡一致性处理')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AKQ21','读刷卡钟数据')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AKQ22','刷卡记录查询')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AKQ222','文本导出')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AKQ31','考勤情况登记')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AKQ311','删除全部考勤纪录')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AKQ32','周期休日登记')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AKQ33','排班表登记')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AKQ34','年假管理')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AKQ341','期初值录入')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AKQ343','年假计算')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AKQ35','考勤补登记')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AKQ36','年假规定')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AKQ361','年假类别定义')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AKQ41','考勤数据自动处理')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AKQ42','考勤补充处理')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AKQ43','分析结果浏览修改')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AKQ44','中途外出浏览查询')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AKQ45','缺刷卡一览表')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AKQ51','数据汇总')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AKQ52','报表印刷')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AKQ53','定义报表格式')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AKQ54','EXCEL输出')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AKQ61','操作权限管理')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AKQ63','删除重复刷卡记录')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AKQ64','刷卡钟数据格式定义')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3AKQ_YD','资料异动处理')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3ARS11','基本资料')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3ARS12','集体登记')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3ARS13','物品借领')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3ARS14','保险缴纳')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3ARS17','保险比例')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3ARS16','杂费台帐')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3ARS21','教育训练管理')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3ARS22','绩效评核')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3ARS31','组合查询')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3ARS41','报表管理')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3ARS51','部门设置')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3ARS52','岗位设置')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3ARS53','职务编码')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3ARS54','技术职称编码')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3ARS55','资料类别')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3ARS61','操作权限管理')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3ARS63','资料刷新')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3ARS71','底薪设定')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3ARS72','环境津贴')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3ARS73','职务津贴')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3ARS74','年资奖')" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO SYS_CD_SCREEN (HMBH,HMMC) VALUES ('3ARS75','生产奖金')" ;
       )
ENDPROC
**
***
*** update_allfield.fxp
***
*
mfd = "XUHAO INTEGER NOT NULL PRIMARY KEY,"
mfd = mfd +  ;
      "NAME VARCHAR(30)  default '',"
mfd = mfd +  ;
      "FD   VARCHAR(10)  default '',"
mfd = mfd +  ;
      "DB   VARCHAR(15)  default '',"
mfd = mfd +  ;
      "SDB  VARCHAR(15)  default '',"
mfd = mfd +  ;
      "COND VARCHAR(56)  default '',"
mfd = mfd +  ;
      "IDX  INTEGER default 0,"
mfd = mfd +  ;
      "DISP INTEGER default 0,"
mfd = mfd +  ;
      "TYP  VARCHAR(1) default ''"
SQLEXEC(odbc_ant2000,  ;
       "DROP TABLE rs_allfield")
SQLEXEC(odbc_ant2000,  ;
       "CREATE TABLE rs_allfield (" +  ;
       mfd + ")")
cnt = 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,' 《基本资料》',      '',           '',             '',       '',0,0,'')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        职工编号',   'ZGBH',       'RS_ZG',        'RS_ZG',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        职工姓名',   'ZGXM',       'RS_ZG',        'RS_ZG',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        雇佣性质',   'NAME',       'SYS_CD_GYXZ',  'RS_ZG',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        英文姓名',   'NAME',       'RS_ZG',        'RS_ZG',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        性别',       'NAME',       'SYS_CD_XB',    'RS_ZG',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        部门编号',   'BMBH',       'RS_ZG',        'RS_ZG',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        部门名称',   'BMMC',       'RS_BM',        'RS_ZG',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        部门简称',   'JC',         'RS_BM',        'RS_ZG',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        岗位编码',   'GW',         'RS_ZG',	    'RS_ZG',  '',0,0,'N')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        岗位名称',   'NAME',       'RS_CD_GW',     'RS_ZG',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        职务编码',   'ZW',         'RS_ZG',        'RS_ZG',  '',0,0,'N')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        职务名称',   'NAME',       'RS_CD_ZW',     'RS_ZG',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        职务等级',   'DJ',         'RS_ZG',        'RS_ZG',  '',0,0,'N')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        录入日期',   'LRRQ',       'RS_ZG',        'RS_ZG',  '',0,0,'R')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        就职时间',   'JZSJ',       'RS_ZG',        'RS_ZG',  '',0,0,'R')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        入职方式',   'JZJSR',      'RS_ZG',        'RS_ZG',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        离职时间',   'LZSJ',       'RS_ZG',        'RS_ZG',  '',0,0,'R')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        年资',       'NZ',         'RS_ZG',        'RS_ZG',  '',0,0,'N')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        搭伙',       'NAME',       'RS_CD_DH',     'RS_ZG',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        直接间接区分', 'NAME',     'SYS_CD_ZJ',    'RS_ZG',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,' 《个人资料》',      '',           '',             '',       '',0,0,'')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        出生年月',   'BIRTHDAY',   'RS_GR',        'RS_GR',  '',0,0,'R')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        年龄',       'AGE',        'RS_GR',        'RS_GR',  '',0,0,'N')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        婚姻',       'NAME',       'SYS_CD_HY',    'RS_GR',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        身高',       'HEIGHT',     'RS_GR',        'RS_GR',  '',0,0,'N')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        体重',       'WEIGHT',     'RS_GR',        'RS_GR',  '',0,0,'N')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        左眼视力',   'EYELEFT',    'RS_GR',        'RS_GR',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        右眼视力',   'EYERIGHT',   'RS_GR',        'RS_GR',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        血型',       'XX',         'RS_GR',        'RS_GR',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        政治面貌',   'NAME',       'SYS_CD_ZZMM',  'RS_GR',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        加入时间',   'JRSJ',       'RS_GR',        'RS_GR',  '',0,0,'R')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        身份证号码', 'SFZH',       'RS_GR',        'RS_GR',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        籍贯或出生地','JG',        'RS_GR',        'RS_GR',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        档案所在地', 'DAD',        'RS_GR',        'RS_GR',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        是否本地',   'BD',         'RS_GR',        'RS_GR',  '',0,0,'N')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        户籍',       'HJ',         'RS_GR',        'RS_GR',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        是否农村',   'HK',         'RS_GR',        'RS_GR',  '',0,0,'N')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        擅长语言',   'YY',         'RS_GR',        'RS_GR',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        专长',       'ZC',         'RS_GR',        'RS_GR',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        职称',       'ZHICHENG',   'RS_GR',        'RS_GR',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        暂住证编号', 'ZZZBH',      'RS_GR',        'RS_GR',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        有效期',     'ZZZRQ',      'RS_GR',        'RS_GR',  '',0,0,'R')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        有无婚育证明','YWSYZ',     'RS_GR',        'RS_GR',  '',0,0,'N')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        婚育证明编号','SYZBH',     'RS_GR',        'RS_GR',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,' 《福利资料》',         '',        '',             '',       '',0,0,'')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        合约性质',      'NAME',    'RS_CD_HYXZ',   'RS_FL',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        合约期限开始',  'PYHTKS',  'RS_FL',        'RS_FL',  '',0,0,'R')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        合约期限结束',  'PYHTZZ',  'RS_FL',        'RS_FL',  '',0,0,'R')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        档管费交至年月','GLFNY',   'RS_FL',        'RS_FL',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        工作居住证',    'GZJZZ',   'RS_FL',        'RS_FL',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        劳动手册号',    'LDSC',    'RS_FL',        'RS_FL',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        办理日期_劳',      'BZRQ1',   'RS_FL',        'RS_FL',  '',0,0,'R')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        养老保险手册号','YLBX',    'RS_FL',        'RS_FL',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        办理日期_养',  'BZRQ2',   'RS_FL',        'RS_FL',  '',0,0,'R')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        公积金手册号',  'GJJ',     'RS_FL',        'RS_FL',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        办理日期_公',  'BZRQ3',   'RS_FL',        'RS_FL',  '',0,0,'R')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        是否办理就业证','JYZ',     'RS_FL',        'RS_FL',  '',0,0,'N')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        就业证手册号',  'JYZH',    'RS_FL',        'RS_FL',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        办理日期_就',  'BZRQ4',   'RS_FL',        'RS_FL',  '',0,0,'R')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        医疗保险手册号','YILIAO',  'RS_FL',        'RS_FL',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        办理日期_医',  'BZRQ5',   'RS_FL',        'RS_FL',  '',0,0,'R')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        应享受医疗期',  'XSYLQ',   'RS_FL',        'RS_FL',  '',0,0,'N')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,' 《合约历史记录》',     '',        '',             '',       '',0,0,'')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        合约开始日期',  'KSSJ',    'RS_HYJL',      'RS_HYJL','',0,0,'R')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        合约结束日期',  'JSSJ',    'RS_HYJL',      'RS_HYJL','',0,0,'R')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        合约性质',      'NAME',    'RS_CD_HYXZ',   'RS_HYJL','',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,' 《联络资料》',         '',        '',             '',       '',0,0,'')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        家庭住址',      'ADDR1',   'RS_LL',        'RS_LL',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        邮政编码',      'POST1',   'RS_LL',        'RS_LL',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        联络电话',      'TEL1',    'RS_LL',        'RS_LL',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        手机或传呼',    'BP1',     'RS_LL',        'RS_LL',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        现联络地址',    'ADDR2',   'RS_LL',        'RS_LL',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        现邮政编码',    'POST2',   'RS_LL',        'RS_LL',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        现联络电话',    'TEL2',    'RS_LL',        'RS_LL',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        现手机或传呼',  'BP2',     'RS_LL',        'RS_LL',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        紧急联络人',    'LXR',     'RS_LL',        'RS_LL',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        紧急联络地址',  'ADDR3',   'RS_LL',        'RS_LL',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        联络邮政编码',  'GX',      'RS_LL',        'RS_LL',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        紧急联络电话',  'TEL',     'RS_LL',        'RS_LL',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        居住状态',      'NAME',    'RS_CD_ZS',     'RS_LL',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,' 《工作经历》',         '',        '',             '',       '',0,0,'')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        机构名称',      'MC',      'RS_GZJL',      'RS_GZJL','',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        地址',          'DZ',      'RS_GZJL',      'RS_GZJL','',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        职务或岗位',    'ZW',      'RS_GZJL',      'RS_GZJL','',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        工作开始日期',  'FWKS',    'RS_GZJL',      'RS_GZJL','',0,0,'R')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        工作结束日期',  'FWJS',    'RS_GZJL',      'RS_GZJL','',0,0,'R')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        年薪',          'NX',      'RS_GZJL',      'RS_GZJL','',0,0,'N')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        离职原因',      'LZYY',    'RS_GZJL',      'RS_GZJL','',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,' 《家庭背景》',         '',        '',             '',       '',0,0,'')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        称谓',          'NAME',    'SYS_CD_CW',    'RS_JTBJ',     '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        姓名',          'XM',      'RS_JTBJ',      'RS_JTBJ',     '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        出生年月',      'BIRTHDAY','RS_JTBJ',      'RS_JTBJ',     '',0,0,'R')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        年龄',          'AGE',     'RS_JTBJ',      'RS_JTBJ',     '',0,0,'N')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        是否亡殪',      'CY',      'RS_JTBJ',      'RS_JTBJ',     '',0,0,'N')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        学历或学位',    'NAME',    'SYS_CD_XL',    'RS_JTBJ',     '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        职业',          'ZY',      'RS_JTBJ',      'RS_JTBJ',     '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        就职机构或就读学校','DW',  'RS_JTBJ',      'RS_JTBJ',     '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,' 《教育训练》',         '',        '',             '',       '',0,0,'')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        培训单位',	  'DW',      'RS_JYXL_PLAN_H','RS_JYXL_PLAN_D',     '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        讲师',          'JS',      'RS_JYXL_PLAN_H','RS_JYXL_PLAN_D',     '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        训练内容',      'XLLB',    'RS_JYXL_PLAN_H','RS_JYXL_PLAN_D',     '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        开始日期',      'KSRQ',    'RS_JYXL_PLAN_H','RS_JYXL_PLAN_D',     '',0,0,'R')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        结束日期',	  'ZZRQ',    'RS_JYXL_PLAN_H','RS_JYXL_PLAN_D',     '',0,0,'R')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        每天培训时间段','SJD',     'RS_JYXL_PLAN_H','RS_JYXL_PLAN_D',     '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        培训总时数',    'SS',      'RS_JYXL_PLAN_H','RS_JYXL_PLAN_D',     '',0,0,'N')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        考试成绩',      'CJ',      'RS_JYXL_PLAN_D','RS_JYXL_PLAN_D',     '',0,0,'N')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        评核成绩',      'PHCJ',    'RS_JYXL_PLAN_D','RS_JYXL_PLAN_D',     '',0,0,'N')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        备注',          'BZ',      'RS_JYXL_PLAN_D','RS_JYXL_PLAN_D',     '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,' 《学历背景》',         '',        '',           '',       '',0,0,'')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        学历或学位',    'NAME',    'SYS_CD_XL',  'RS_XL',     '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        学校名称',      'MC',      'RS_XL',      'RS_XL',     '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        是否全日制',    'XZ',      'RS_XL',      'RS_XL',     '',0,0,'N')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        系科别',        'XKB',     'RS_XL',      'RS_XL',     '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        专业',          'ZY',      'RS_XL',      'RS_XL',     '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        是否毕业',      'BIYIE',   'RS_XL',      'RS_XL',     '',0,0,'N')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        开始日期',      'KSRQ',    'RS_XL',      'RS_XL',     '',0,0,'R')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        结束日期',      'ZZRQ',    'RS_XL',      'RS_XL',     '',0,0,'R')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        是否有效学历',  'YX',      'RS_XL',      'RS_XL',     '',0,0,'N')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,' 《奖惩记录》',         '',        '',           '',          '',0,0,'')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        发布日期',      'RIQI',    'RS_JCJL',    'RS_JCJL',   '',0,0,'R')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        奖惩原因',      'YY',      'RS_JCJL',    'RS_JCJL',   '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        奖惩状态',      'STS',     'RS_JCJL',    'RS_JCJL',   '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        索引',          'IDX',     'RS_JCJL',    'RS_JCJL',   '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,' 《异动历史》',         '',        '',           '',       '',0,0,'')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        异动日期',      'RIQI',    'RS_YD',      'RS_YD',  '',0,0,'R')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        异动前状态',    'YZT',     'RS_YD',      'RS_YD',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        异动原因',      'YY',      'RS_YD',      'RS_YD',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,' 《工作业绩》',         '',        '',           '',       '',0,0,'')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        开始日期',      'GZKSRQ',  'RS_GZYJ',    'RS_GZYJ',  '',0,0,'R')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        终止日期',      'GZJSRQ',  'RS_GZYJ',    'RS_GZYJ',  '',0,0,'R')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        主要业绩',      'ZYYJ',    'RS_GZYJ',    'RS_GZYJ',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,' 《特种证件》',         '',        '',           '',       '',0,0,'')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        证件名称',      'MC',      'RS_TZZJ',    'RS_TZZJ',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        证件编号',      'ZJH',     'RS_TZZJ',    'RS_TZZJ',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        发证单位',      'FZDW',    'RS_TZZJ',    'RS_TZZJ',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        发证日期',      'FZRQ',    'RS_TZZJ',    'RS_TZZJ',  '',0,0,'R')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        有效期限',      'YXRQ',    'RS_TZZJ',    'RS_TZZJ',  '',0,0,'R')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,' 《医疗记录》',         '',        '',           '',       '',0,0,'')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        开始日期',      'YLKSRQ',  'RS_YLJL',    'RS_YLJL',  '',0,0,'R')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        结束日期',      'YLJSRQ',  'RS_YLJL',    'RS_YLJL',  '',0,0,'R')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        医疗补助费',    'YLBZF',   'RS_YLJL',    'RS_YLJL',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        病情摘要',      'BQZY',    'RS_YLJL',    'RS_YLJL',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        医疗期满后趋向','YLHQX',   'RS_YLJL',    'RS_YLJL',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        记录人',        'JLR',     'RS_YLJL',    'RS_YLJL',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,' 《兵役情况》',      '',           '',             '',       '',0,0,'')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        役别',       'BYJB',       'RS_ZG',        'RS_ZG',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        军种',       'BYJZ',       'RS_ZG',        'RS_ZG',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        阶级',       'BYJJ',       'RS_ZG',        'RS_ZG',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        专长',       'BYZC',       'RS_ZG',        'RS_ZG',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        入伍时间',   'BYRW',       'RS_ZG',        'RS_ZG',  '',0,0,'R')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        退伍时间',   'BYTW',       'RS_ZG',        'RS_ZG',  '',0,0,'R')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        备注',       'BYBZ',       'RS_ZG',        'RS_ZG',  '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,' 《物品借领》',      '',           '',             '',       '',0,0,'')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        借领日期',   'LQSJ',      'RS_JLWP',       'RS_JLWP', '',0,0,'R')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        物品名称',   'WPMC',      'RS_JLWP',       'RS_JLWP', '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        型号规格',   'XHGG',      'RS_JLWP',       'RS_JLWP', '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        数量',       'SL',        'RS_JLWP',       'RS_JLWP', '',0,0,'N')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        借领性质',   'LYXZ',      'RS_JLWP',       'RS_JLWP', '',0,0,'C')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        归还日期',   'GHRQ',      'RS_JLWP',       'RS_JLWP', '',0,0,'R')" ;
       )
cnt = cnt + 1
SQLEXEC(odbc_ant2000,  ;
       "INSERT INTO RS_ALLFIELD (XUHAO,NAME,FD,DB,SDB,COND,IDX,DISP,TYP) VALUES (?cnt,'        备注',       'BZ',        'RS_JLWP',       'RS_JLWP', '',0,0,'C')" ;
       )
ENDPROC
**
***
*** update_table_list.fxp
***
*
mfd = "XUHAO INTEGER NOT NULL PRIMARY KEY,"
mfd = mfd +  ;
      "TABLE_NAME VARCHAR(20) DEFAULT '',"
mfd = mfd +  ;
      "COND_KEY VARCHAR(100) DEFAULT '',"
mfd = mfd +  ;
      "DATE_FIELD VARCHAR(20) DEFAULT '',"
mfd = mfd +  ;
      "DEP VARCHAR(4) DEFAULT '',"
mfd = mfd +  ;
      "NOTE VARCHAR(50) DEFAULT '',"
mfd = mfd +  ;
      "SELECTFLAG	INTEGER DEFAULT 1"
SQLEXEC(odbc_ant2000,  ;
       "drop TABLE TABLE_LIST ")
sqlexec(ODBC_ANT2000,"CREATE TABLE  TABLE_LIST (&mfd)")
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (100,'FT_ARDATA',		'ZGBH=?ZGBH AND RIQI=?RIQI AND SHIJIAN=?SHIJIAN',	'RIQI',	'FT','就餐刷卡纪录表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (101,'FT_LSKH',			'LSKH=?LSKH',										' ',	'FT','卡号登记表',0)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (102,'FT_BM',			'BMBH=?BMBH',										' ',	'FT','部门代码表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (103,'FT_ZG',			'ZGBH=?ZGBH',										' ',	'FT','员工资料表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (104,'FT_JCFX',			' ',												' ',	'FT','就餐分析明细表',0)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (105,'FT_JCJL',			' ',												' ',	'FT','就餐纪录明细表',0)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (106,'FT_QX_HM',			'HMBH=?HMBH AND NAME=?NAME',						' ',	'FT','操作权限表',0)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (107,'FT_TIME',			'CC=?CC',											' ',	'FT','餐次设定表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (108,'FT_PLACE',			'CODE=?CODE',										' ',	'FT','场地编码表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (200,'RS_BM',			'BMBH=?BMBH',										' ',	'RS','部门代码表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (201,'RS_CD_GW',			'CODE=?CODE',										' ',	'RS','岗位代码表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (202,'RS_CD_HJ',			'CODE=?CODE',										' ',	'RS','户籍代码表',0)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (203,'RS_CD_JYXL',		'CODE=?CODE',										' ',	'RS','教育训练代码表',0)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (204,'RS_CD_RZFS',		'CODE=?CODE',										' ',	'RS','入职方式代码表',0)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (205,'RS_CD_ZC',			'CODE=?CODE',										' ',	'RS','职称代码表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (206,'RS_CD_ZW',			'CODE=?CODE',										' ',	'RS','职务代码表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (207,'RS_FL',			'ZGBH=?ZGBH',										' ',	'RS','福利资料表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (208,'RS_GR',			'ZGBH=?ZGBH',										' ',	'RS','个人资料表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (209,'RS_GZJL',			'ZGBH=?ZGBH AND FWKS=?FWKS',						' ',	'RS','工作履历表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (210,'RS_HYJL',			'ZGBH=?ZGBH AND KSSJ=?KSSJ',						'KSSJ',	'RS','合约纪录表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (211,'RS_JCJL',			'ZGBH=?ZGBH AND RIQI=?RIQI',						'RIQI',	'RS','奖惩纪录表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (212,'RS_JTBJ',			'ZGBH=?ZGBH AND XM=?XM',							' ',	'RS','家庭背景表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (215,'RS_LL',			'ZGBH=?ZGBH',										' ',	'RS','联络资料表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (216,'RS_QX_BM',			'BMBH=?BMBH AND NAME=?NAME',						' ',	'RS','部门权限表',0)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (217,'RS_QX_GYXZ',		'CODE=?CODE AND NAME=?NAME',						' ',	'RS','雇佣性质权限表',0)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (218,'RS_QX_HM',			'HMBH=?HMBH AND NAME=?NAME',						' ',	'RS','操作权限表',0)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (219,'RS_REPLIST',		'XUHAO=?XUHAO',										' ',	'RS','报表定义清单',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (220,'RS_SEARCH_HEAD',	'XUHAO=?XUHAO',										' ',	'RS','综合查询定义主表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (221,'RS_SEARCH_TAIL',	'XUHAO=?XUHAO AND NAME=?NAME AND SDB=?SDB',			' ',	'RS','综合查询定义明细表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (222,'RS_XL',			'ZGBH=?ZGBH AND XW=?XW AND ZY=?ZY',					' ',	'RS','学历数据表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (223,'RS_YD',			'ZGBH=?ZGBH AND RIQI=?RIQI',						'RIQI',	'RS','异动情况表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (224,'RS_YLBXJL',		'ZGBH=?ZGBH AND JNRQ=?JNRQ',						'JNRQ',	'RS','养老保险缴纳纪录表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (225,'RS_ZG',			'ZGBH=?ZGBH',										' ',	'RS','员工资料表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into table_list (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (226,'RS_NZJ',          	' ',												' ',	'RS','年资奖代码表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into table_list (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (227,'RS_SCJJ',         	'BMBH=?BMBH AND GW=?GW AND DJ=?DJ',					' ',	'RS','生产奖金代码表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into table_list (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (228,'RS_ZWJT',			'ZW=?ZW AND DJ=?DJ',								' ',	'RS','职务津贴代码表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into table_list (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (229,'RS_HJJT',			'BMBH=?BMBH AND GW=?GW',							' ',	'RS','环境津贴代码表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into table_list (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (230,'RS_GZYJ',			'ZGBH=?ZGBH AND GZKSRQ=?GZKSRQ',					' ',	'RS','工作业绩表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into table_list (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (231,'RS_YLJL',			'ZGBH=?ZGBH AND YLKSRQ=?YLKSRQ',					' ',	'RS','医疗纪录表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into table_list (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (232,'RS_JLWP',			'ZGBH=?ZGBH AND WPMC=?WPMC AND XHGG=?XHGG AND LQSJ=?LQSJ','LQSJ','RS','物品借领表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (233,'RS_JYXL_PLAN_H',	'ID=?ID',											' ',	'RS','教育训练计划表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (234,'RS_JYXL_PLAN_D',	'ID=?ID AND ZGBH=?ZGBH',							' ',	'RS','教育训练明细表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (235,'RS_ZF',			'ZGBH=?ZGBH AND RQ=?RQ AND LB=?LB',					'RQ',	'RS','杂费台帐表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (236,'RS_YLBX_1',		'ZGBH=?ZGBH AND BXLB=?BXLB AND JND=?JND AND GYXZ=?GYXZ AND NX=?NX',' ','RS','养老保险缴纳记录表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (237,'RS_TZZJ',			'ZGBH=?ZGBH AND XYHAO=?XUHAO',						' ',	'RS','特种证件管理表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (300,'KQ_NJ_1',			'ZGBH=?ZGBH AND ND=?ND AND YF=?YF',					' ',	'KQ','年假管理表1',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (301,'KQ_XJJL_J',		'MM=?MM AND DD=?DD',								' ',	'KQ','节假日定义表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (302,'KQ_ZTWC',			'ZGBH=?ZGBH AND RIQI=?RIQI AND SK1=?SK1',			'RIQI',	'KQ','中途外出纪录表',0)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (303,'KQ_REPDEF',		'XUHAO=?XUHAO AND SEQ=?SEQ',						' ',	'KQ','报表项目定义表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (304,'KQ_ARDATA',		'ZGBH=?ZGBH AND RIQI=?RIQI AND SHIJIAN=?SHIJIAN',	'RIQI',	'KQ','考勤刷卡纪录表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (305,'KQ_LSKH',			'LSKH=?LSKH',										' ',	'KQ','卡号登记表',0)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (306,'KQ_XJJL_D',		' ',												' ',	'KQ','考勤登记表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (307,'KQ_CLFX',			' ',												' ',	'KQ','考勤处理结果表',0)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (308,'KQ_BCTYPE',		'LB=?LB',											' ',	'KQ','班类定义表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (309,'KQ_BM',			'BMBH=?BMBH',										' ',	'KQ','部门代码表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (310,'KQ_CD_ZTWC',		'CODE=?CODE',										' ',	'KQ','中途外出事由代码表',0)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (311,'KQ_KQLB',			'LBBH=?LBBH',										' ',	'KQ','考勤类别定义表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (312,'KQ_NJ_0',			'ZGBH=?ZGBH AND ND=?ND AND YF=?YF',					' ',	'KQ','年假管理表0',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (313,'KQ_NJ_2',			'ZGBH=?ZGBH AND RIQI=?RIQI',						'RIQI',	'KQ','年假管理表2',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (314,'KQ_PBB',			'ZGBH=?ZGBH AND RIQI=?RIQI',						'RIQI',	'KQ','排班登记表',0)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (315,'KQ_QX_HM',			'HMBH=?HMBH AND NAME=?NAME',						' ',	'KQ','操作权限表',0)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (316,'KQ_QX_BM',			'BMBH=?BMBH AND NAME=?NAME',						' ',	'KQ','部门权限表',0)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (317,'KQ_REPLIST',		'XUHAO=?XUHAO',										' ',	'KQ','报表定义清单',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (318,'KQ_TIME',			'BC=?BC',											' ',	'KQ','班次定义表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (319,'KQ_XJJL_S',		'1=1',												' ',	'KQ','标准休日定义表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (320,'KQ_XJJL_W',		'ZGBH=?ZGBH',										' ',	'KQ','周期休日登记表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (321,'KQ_XJJL_D1',		' ',												' ',	'KQ','考勤补登记表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (322,'KQ_YGLB',			'LBBH=?LBBH',										' ',	'KQ','员工类别表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (323,'KQ_ZG',			'ZGBH=?ZGBH',										' ',	'KQ','员工资料表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (324,'KQ_NJ_SH',	    	'CLASSID=?CLASSID',									' ',	'KQ','年假类别主表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (325,'KQ_NJ_ST',	    	'CLASSID=?CLASSID AND YEARS=?YEARS AND MONTHS=?MONTHS',	' ','KQ','年假类别明细表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (326,'KQ_SHIFTTYPE',    	'CODE=?CODE',										' ',	'KQ','排班计划类别表',0)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (327,'KQ_SHIFTPLAN',    	'CODE=?CODE AND WEEK=?WEEK',						' ',	'KQ','排班计划明细表',0)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (329,'KQ_DTIME',	   		'SEQ=?SEQ',											' ',	'KQ','就餐休息扣除表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (400,'GZ_ZG',			'ZGBH=?ZGBH',										' ',	'GZ','员工资料表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (401,'GZ_SL',			'JS=?JS',											' ',	'GZ','税率定义表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (402,'GZ_GZDBF',			'YGLB=?YGLB AND XUHAO=?XUHAO',						' ',	'GZ','薪资项目分类表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (403,'GZ_REPLIST',		'XUHAO=?XUHAO',										' ',	'GZ','报表定义清单',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (404,'GZ_BM',			'BMBH=?BMBH',										' ',	'GZ','部门代码表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (405,'GZ_YGLB',			'LBBH=?LBBH',										' ',	'GZ','员工类别表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (406,'GZ_YH',			'BH=?BH',											' ',	'GZ','银行代码表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (407,'GZ_JBDEF',			'XUHAO=?XUHAO',										' ',	'GZ','薪资级别项目表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (408,'GZ_GZJB',			'DJ=?DJ',											' ',	'GZ','薪资级别定义表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (409,'GZ_GZBASE',		'XUHAO=?XUHAO',										' ',	'GZ','薪资项目总表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (410,'GZ_GZ',			'ZGBH=?ZGBH AND NY=?NY',							' ',	'GZ','薪资表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (411,'GZ_TX',			'ZGBH=?ZGBH AND TXRQ=?TXRQ',						'TXRQ',	'GZ','调薪记录表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (412,'GZ_REPDEF',		'XUHAO=?XUHAO AND SEQ=?SEQ',						' ',	'GZ','报表项目定义表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (413,'GZ_QX_YGLB',		'LBBH=?LBBH AND NAME=?NAME',						' ',	'GZ','员工类别权限表',0)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (414,'GZ_QX_XZXM',		'XUHAO=?XUHAO AND NAME=?NAME',						' ',	'GZ','薪资项目权限表',0)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (415,'GZ_QX_BM',			'BMBH=?BMBH AND NAME=?NAME',						' ',	'GZ','部门权限表',0)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (416,'GZ_QX_HM',			'HMBH=?HMBH AND NAME=?NAME',						' ',	'GZ','操作权限表',0)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (417,'GZ_HL',			'RIQI=?RIQI',										'RIQI',	'GZ','汇率登记表',0)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (500,'SYS_CD_CW',		'CODE=?CODE',										' ',	'SYS','称谓代码表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (501,'SYS_CD_EXPOTYPE',	'TYP=?TYP',											' ',	'SYS','输出文件类型代码表',0)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (502,'SYS_CD_GYXZ',		'CODE=?CODE',										' ',	'SYS','雇佣性质代码表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (503,'SYS_CD_HY',		'CODE=?CODE',										' ',	'SYS','婚姻代码表',0)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (504,'SYS_CD_READWRITE',	'QXBH=?QXBH',										' ',	'SYS','读写权限代码表',0)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (505,'SYS_CD_SCREEN',	'HMBH=?HMBH',										' ',	'SYS','操作权限代码表',0)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (506,'SYS_CD_XL',		'CODE=?CODE',										' ',	'SYS','学历代码表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (507,'SYS_CD_ZZMM',		'CODE=?CODE',										' ',	'SYS','政治面貌代码表',0)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (508,'SYS_CHGMSG',		'ID=?ID',											' ',	'SYS','人事异动信息表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (509,'SYS_CHGTYPE',		'CODE=?CODE',										' ',	'SYS','异动类型代码表',0)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (510,'SYS_CD_XB',		'CODE=?CODE',										' ',	'SYS','性别代码表',0)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (511,'SYS_CD_YESNO',		'CODE=?CODE',										' ',	'SYS','YES/NO标记代码表',0)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (512,'SYS_USER',			'NAME=?NAME',										' ',	'SYS','用户管理表',0)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (513,'SYS_LOG',			'ID=?ID',											' ',	'SYS','操作日志表',0)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (514,'SYS_KZGS',			'KZLX=?KZLX',										' ',	'SYS','卡钟类型信息表',0)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (515,'SYS_COUNTER',		' ',												' ',	'SYS','计数器管理表',0)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (516,'SYS_INI',			'SEC=?SEC AND VAR=?VAR',							' ',	'SYS','系统参数配置表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (517,'SYS_COMPANY',		'CODE=?CODE',										' ',	'SYS','公司信息表',1)" ;
       )
SQLEXEC(odbc_ant2000,  ;
       "insert into TABLE_LIST (XUHAO,TABLE_NAME,COND_KEY,DATE_FIELD,DEP,NOTE,SELECTFLAG) values (518,'SYS_CD_ITEM',		'HMBH=?HMBH AND XMID=?XMID AND FLAG=?FLAG',			' ',	'SYS','项目缺省值或范围定义表',0)" ;
       )
ENDPROC
**
***
*** nodemenu.mpx
***
*
DEFINE POPUP ???????? FROM MROW(),  ;
       MCOL() RELATIVE SHORTCUT
DEFINE BAR 1 OF ???????? PROMPT  ;
       "插入(\<I)" KEY CTRL+I,  ;
       "Ctrl+I"
DEFINE BAR 2 OF ???????? PROMPT  ;
       "编辑(\<E)" SKIP FOR  ;
       isroot KEY CTRL+E, "Ctrl+E"
DEFINE BAR 3 OF ???????? PROMPT  ;
       "删除(\<D)" SKIP FOR  ;
       isroot KEY CTRL+D, "Ctrl+D"
ON SELECTION BAR 1 OF ???????? DO FORM;
TOOLS51
ON SELECTION BAR 2 OF ???????? DO FORM;
TOOLS52
ON SELECTION BAR 3 OF ???????? DO DELETENODE
ACTIVATE POPUP ????????
ENDPROC
**
***
*** deletenode.fxp
***
*
IF MESSAGEBOX("确认删除当前节点以及所有下级节点吗？",  ;
   049, "考勤分析系统") <> 1
     RETURN
ENDIF
curnode = obj_form4.tree.selecteditem
curnodeid = RIGHT(curnode.key,  ;
            LEN(curnode.key) -  ;
            1)
pub_modifyflag = .T.
UPDATE bm SET nodeid = "",  ;
       modifyflag = rgb_modify  ;
       WHERE LEFT(ALLTRIM(nodeid),  ;
       LEN(curnodeid)) ==  ;
       curnodeid
UPDATE org SET modifyflag =  ;
       rgb_delete WHERE  ;
       LEFT(ALLTRIM(nodeid),  ;
       LEN(curnodeid)) ==  ;
       curnodeid
DELETE FROM org WHERE  ;
       LEFT(ALLTRIM(nodeid),  ;
       LEN(curnodeid)) ==  ;
       curnodeid
obj_form4.tree.nodes.remove(curnode.key)
ENDPROC
**
***
*** getnewnodeid.fxp
***
*
**
FUNCTION GetNewNodeID
PARAMETER parentnodekey
SELECT org
GOTO TOP
IF parentnodekey = "Root"
     SELECT MAX(nodeid) AS maxnum  ;
            FROM org WHERE  ;
            LEN(ALLTRIM(nodeid)) =  ;
            2 INTO CURSOR tmp
     IF RECCOUNT() = 0
          newid = "01"
     ELSE
          num = ALLTRIM(STR(VAL(maxnum) +  ;
                1))
          newid = SUBSTR("00", 1,  ;
                  2 - LEN(num)) +  ;
                  num
     ENDIF
ELSE
     sjbh = RIGHT(parentnodekey,  ;
            LEN(parentnodekey) -  ;
            1)
     SELECT MAX(RIGHT(ALLTRIM(nodeid),  ;
            2)) AS maxnum FROM  ;
            org WHERE  ;
            LEFT(ALLTRIM(nodeid),  ;
            LEN(sjbh)) == sjbh  ;
            AND  ;
            LEN(ALLTRIM(nodeid)) =  ;
            LEN(sjbh) + 2 INTO  ;
            CURSOR tmp
     IF RECCOUNT() = 0
          newid = sjbh + "01"
     ELSE
          num = ALLTRIM(STR(VAL(maxnum) +  ;
                1))
          newid = sjbh +  ;
                  SUBSTR("00", 1,  ;
                  2 - LEN(num)) +  ;
                  num
     ENDIF
ENDIF
RETURN newid
ENDFUNC
**
***
*** tableisexist.fxp
***
*
**
FUNCTION TableIsExist
PARAMETER tablename
SQLTABLES(odbc_ant2000, "'TABLE'",  ;
         "TableList")
SELECT COUNT(*) AS tablecount  ;
       FROM TableList WHERE  ;
       UPPER(ALLTRIM(table_name)) ==  ;
       UPPER(tablename) INTO  ;
       CURSOR tmp_count
mtablecount = tablecount
SELECT tablelist
USE
SELECT tmp_count
USE
IF mtablecount = 0
     RETURN .F.
ELSE
     RETURN .T.
ENDIF
ENDFUNC
**
***
*** chkdupforreg.fxp
***
*
**
FUNCTION ChkDupForReg
LPARAMETERS cd_st1, cd_et1,  ;
            cd_st2, cd_et2
IF (cd_st1 = 0 .OR. cd_et1 = 0)  ;
   .AND. (cd_st2 = 0 .OR. cd_et2 =  ;
   0)
     RETURN 0
ENDIF
IF cd_st1 > 0 .AND. cd_et1 > 0  ;
   .AND. cd_st2 > 0
     IF cd_st1 < pub_delta0
          cd_st1 = cd_st1 + 1440
     ENDIF
     IF cd_et1 < cd_st1
          cd_et1 = cd_et1 + 1440
     ENDIF
     IF cd_st2 < pub_delta0
          cd_st2 = cd_st2 + 1440
     ENDIF
     IF cd_st2 > cd_st1 .AND.  ;
        cd_st2 < cd_et1
          RETURN 1
     ENDIF
ENDIF
IF cd_st1 > 0 .AND. cd_et1 > 0  ;
   .AND. cd_et2 > 0
     IF cd_st1 < pub_delta0
          cd_st1 = cd_st1 + 1440
     ENDIF
     IF cd_et1 < cd_st1
          cd_et1 = cd_et1 + 1440
     ENDIF
     IF cd_et2 < pub_delta0
          cd_et2 = cd_et2 + 1440
     ENDIF
     IF cd_et2 > cd_st1 .AND.  ;
        cd_et2 < cd_et1
          RETURN 1
     ENDIF
ENDIF
IF cd_st2 > 0 .AND. cd_et2 > 0  ;
   .AND. cd_st1 > 0
     IF cd_st2 < pub_delta0
          cd_st2 = cd_st2 + 1440
     ENDIF
     IF cd_et2 < cd_st2
          cd_et2 = cd_et2 + 1440
     ENDIF
     IF cd_st1 < pub_delta0
          cd_st1 = cd_st1 + 1440
     ENDIF
     IF cd_st1 > cd_st2 .AND.  ;
        cd_st1 < cd_et2
          RETURN 1
     ENDIF
ENDIF
IF cd_st2 > 0 .AND. cd_et2 > 0  ;
   .AND. cd_et1 > 0
     IF cd_st2 < pub_delta0
          cd_st2 = cd_st2 + 1440
     ENDIF
     IF cd_et2 < cd_st2
          cd_et2 = cd_et2 + 1440
     ENDIF
     IF cd_et1 < pub_delta0
          cd_et1 = cd_et1 + 1440
     ENDIF
     IF cd_et1 > cd_st2 .AND.  ;
        cd_et1 < cd_et2
          RETURN 1
     ENDIF
ENDIF
RETURN 0
ENDFUNC
**
***
*** getsection.fxp
***
*
PARAMETER strrec, secno,  ;
          seperator
IF EMPTY(strrec) .OR. secno = 0
     RETURN ""
ENDIF
strrec = strrec + seperator
len1 = LEN(strrec)
s1 = STRTRAN(strrec, seperator +  ;
     seperator, seperator)
DO WHILE len1<>LEN(s1)
     len1 = LEN(s1)
     s1 = STRTRAN(strrec,  ;
          seperator + seperator,  ;
          seperator)
ENDDO
IF secno = 1
     pos1 = 0
ELSE
     pos1 = AT(seperator, s1,  ;
            secno - 1)
ENDIF
pos2 = AT(seperator, s1, secno)
RETURN SUBSTR(s1, pos1 + 1, pos2 -  ;
       pos1 - 1)
ENDFUNC
**
***
*** getsubbysep.fxp
***
*
**
FUNCTION GetSubBySep
LPARAMETERS gsb_str, gsb_sep,  ;
            gsb_idx
IF gsb_idx < 1
     RETURN ""
ENDIF
gsb_ret = ""
gsb_str = gsb_str + gsb_sep
gsb_pos = AT(gsb_sep, gsb_str,  ;
          gsb_idx)
IF gsb_pos > 0
     IF gsb_idx > 1
          gsb_pos0 = AT(gsb_sep,  ;
                     gsb_str,  ;
                     gsb_idx -  ;
                     1)
          gsb_ret = SUBSTR(gsb_str,  ;
                    gsb_pos0 + 1,  ;
                    gsb_pos -  ;
                    gsb_pos0 -  ;
                    1)
     ELSE
          gsb_ret = SUBSTR(gsb_str,  ;
                    1, gsb_pos -  ;
                    1)
     ENDIF
ENDIF
RETURN gsb_ret
ENDFUNC
**
***
*** checklocrepout.fxp
***
*
**
PROCEDURE CheckLocRepOut
PARAMETER tbl_mode
SELECT "  " AS sub, repdef.* FROM  ;
       repdef WHERE xuhao =  ;
       replist.xuhao INTO TABLE  ;
       tbl_repdef
SELECT tbl_repdef
REPLACE sub WITH tbl_mode,  ;
        title_e WITH "FD" +  ;
        LTRIM(STR(seq)), seq WITH  ;
        seq + 10, condition WITH  ;
        "  " ALL
SELECT loc_repout
GOTO TOP
IF EOF()
     SELECT loc_repout
     APPEND BLANK
     REPLACE sub WITH tbl_mode,  ;
             title_c WITH "工号",  ;
             title_e WITH "ZGBH",  ;
             typ WITH "C", kuandu  ;
             WITH 10, xiaoshu  ;
             WITH 0, seq WITH 1,  ;
             xuhao WITH  ;
             replist.xuhao, kqid  ;
             WITH "@"
     APPEND BLANK
     REPLACE sub WITH tbl_mode,  ;
             title_c WITH "姓名",  ;
             title_e WITH "ZGXM",  ;
             typ WITH "C", kuandu  ;
             WITH 8, xiaoshu WITH  ;
             0, seq WITH 2, xuhao  ;
             WITH replist.xuhao,  ;
             kqid WITH "@"
     APPEND BLANK
     REPLACE sub WITH tbl_mode,  ;
             title_c WITH  ;
             "部门编号", title_e  ;
             WITH "BMBH", typ  ;
             WITH "C", kuandu  ;
             WITH 6, xiaoshu WITH  ;
             0, seq WITH 3, xuhao  ;
             WITH replist.xuhao,  ;
             kqid WITH "@"
     APPEND BLANK
     REPLACE sub WITH tbl_mode,  ;
             title_c WITH  ;
             "部门名称", title_e  ;
             WITH "BMMC", typ  ;
             WITH "C", kuandu  ;
             WITH 20, xiaoshu  ;
             WITH 0, seq WITH 4,  ;
             xuhao WITH  ;
             replist.xuhao, kqid  ;
             WITH "@"
     APPEND BLANK
     REPLACE sub WITH tbl_mode,  ;
             title_c WITH  ;
             "员工类别", title_e  ;
             WITH "ZGLB", typ  ;
             WITH "C", kuandu  ;
             WITH 1, xiaoshu WITH  ;
             0, seq WITH 5, xuhao  ;
             WITH replist.xuhao,  ;
             kqid WITH "@"
     APPEND BLANK
     REPLACE sub WITH tbl_mode,  ;
             title_c WITH  ;
             "类别名称", title_e  ;
             WITH "LBMC", typ  ;
             WITH "C", kuandu  ;
             WITH 10, xiaoshu  ;
             WITH 0, seq WITH 6,  ;
             xuhao WITH  ;
             replist.xuhao, kqid  ;
             WITH "@"
     APPEND BLANK
     REPLACE sub WITH tbl_mode,  ;
             title_c WITH "日期",  ;
             title_e WITH "RIQI",  ;
             typ WITH "C", kuandu  ;
             WITH 10, xiaoshu  ;
             WITH 0, seq WITH 7,  ;
             xuhao WITH  ;
             replist.xuhao, kqid  ;
             WITH "@"
     APPEND BLANK
     REPLACE sub WITH tbl_mode,  ;
             title_c WITH  ;
             "报表年月", title_e  ;
             WITH "RQ", typ WITH  ;
             "C", kuandu WITH 14,  ;
             xiaoshu WITH 0, seq  ;
             WITH 8, xuhao WITH  ;
             replist.xuhao, kqid  ;
             WITH "@"
     SELECT tbl_repdef
     GOTO TOP
     IF  .NOT. EOF()
          SELECT loc_repout
          APPEND FROM tbl_repdef
     ELSE
          _mrep = tbl_mode +  ;
                  "_rep" +  ;
                  ALLTRIM(STR(replist.xuhao))
          sqlexe_run(00000000039,  ;
                    SYS(16),  ;
                    "SELECT * FROM " +  ;
                    _mrep +  ;
                    " WHERE 1=2",  ;
                    "_mRep")
          SELECT _mrep
          _midx = 0
          FOR _mcnt = 1 TO  ;
              FCOUNT()
               _mname = FIELD(_mcnt)
               _msize = FSIZE(_mname)
               IF _mname <>  ;
                  "ZGBH" .AND.  ;
                  _mname <>  ;
                  "ZGXM" .AND.  ;
                  _mname <>  ;
                  "BMBH" .AND.  ;
                  _mname <>  ;
                  "BMMC" .AND.  ;
                  _mname <>  ;
                  "ZGLB" .AND.  ;
                  _mname <>  ;
                  "LBMC" .AND.  ;
                  _mname <> "QF"  ;
                  .AND. _mname <>  ;
                  "DATE" .AND.  ;
                  _mname <> "RQ"  ;
                  .AND. _mname <>  ;
                  "BMMC_E" .AND.  ;
                  _mname <>  ;
                  "RIQI"
                    SELECT loc_repout
                    APPEND BLANK
                    _midx = _midx +  ;
                            1
                    REPLACE sub  ;
                            WITH  ;
                            tbl_mode,  ;
                            title_c  ;
                            WITH  ;
                            _mname,  ;
                            title_e  ;
                            WITH  ;
                            _mname
                    REPLACE kuandu  ;
                            WITH  ;
                            _msize,  ;
                            xiaoshu  ;
                            WITH  ;
                            0,  ;
                            seq  ;
                            WITH  ;
                            8 +  ;
                            _midx
                    REPLACE xuhao  ;
                            WITH  ;
                            replist.xuhao,  ;
                            kqid  ;
                            WITH  ;
                            "@",  ;
                            typ  ;
                            WITH  ;
                            TYPE("_mName")
                    SELECT _mrep
               ENDIF
          ENDFOR
          SELECT _mrep
          USE
     ENDIF
ELSE
     SELECT tbl_repdef
     GOTO TOP
     IF  .NOT. EOF()
          SELECT loc_repout
          SCAN
               IF seq < 10
                    LOOP
               ENDIF
               SELECT tbl_repdef
               LOCATE FOR seq =  ;
                      loc_repout.seq
               IF EOF()
                    SELECT loc_repout
                    DELETE
               ELSE
                    SELECT loc_repout
                    IF typ <>  ;
                       tbl_repdef.typ  ;
                       .OR.  ;
                       kuandu <>  ;
                       tbl_repdef.kuandu  ;
                       .OR.  ;
                       xiaoshu <>  ;
                       tbl_repdef.xiaoshu
                         REPLACE typ  ;
                                 WITH  ;
                                 tbl_repdef.typ,  ;
                                 kuandu  ;
                                 WITH  ;
                                 tbl_repdef.kuandu,  ;
                                 xiaoshu  ;
                                 WITH  ;
                                 tbl_repdef.xiaoshu
                    ENDIF
               ENDIF
          ENDSCAN
          SELECT tbl_repdef
          SCAN
               SELECT loc_repout
               LOCATE FOR seq =  ;
                      tbl_repdef.seq
               IF EOF()
                    APPEND BLANK
                    REPLACE sub  ;
                            WITH  ;
                            tbl_mode
                    REPLACE xuhao  ;
                            WITH  ;
                            tbl_repdef.xuhao
                    REPLACE seq  ;
                            WITH  ;
                            tbl_repdef.seq
                    REPLACE title_c  ;
                            WITH  ;
                            tbl_repdef.title_c
                    REPLACE title_e  ;
                            WITH  ;
                            tbl_repdef.title_e
                    REPLACE kqid  ;
                            WITH  ;
                            tbl_repdef.kqid
                    REPLACE condition  ;
                            WITH  ;
                            tbl_repdef.condition
                    REPLACE typ  ;
                            WITH  ;
                            tbl_repdef.typ
                    REPLACE kuandu  ;
                            WITH  ;
                            tbl_repdef.kuandu
                    REPLACE xiaoshu  ;
                            WITH  ;
                            tbl_repdef.xiaoshu
                    IF tbl_mode =  ;
                       'KQ'
                         REPLACE dw  ;
                                 WITH  ;
                                 tbl_repdef.dw
                    ENDIF
                    REPLACE ifshow  ;
                            WITH  ;
                            tbl_repdef.ifshow
                    REPLACE modifyflag  ;
                            WITH  ;
                            tbl_repdef.modifyflag
               ENDIF
               SELECT tbl_repdef
          ENDSCAN
     ENDIF
ENDIF
SELECT tbl_repdef
USE
RETURN
ENDPROC
**
***
*** getkqqj_nj.fxp
***
*
yy = pub_nd
mm = pub_yf
IF mm > 1
     mm = mm - 1
ELSE
     mm = 12
     yy = yy - 1
ENDIF
dd = sjdate2
mdate = CTOD(STR(yy, 4) + '.' +  ;
        STR(mm, 2) + '.' + STR(dd,  ;
        2))
i = 1
DO WHILE CTOD("")=mdate .AND. i<5
     dd = dd - 1
     mdate = CTOD(STR(yy, 4) +  ;
             '.' + STR(mm, 2) +  ;
             '.' + STR(dd, 2))
     i = i + 1
ENDDO
IF i >= 5
     mdate = CTOD("")
ENDIF
pub_kqjieshu = mdate
IF pub_kqjieshu < CTOD(STR(pub_nd,  ;
   4) + '/' + STR(pub_yf, 1) +  ;
   '/01')
     yy = pub_nd
     mm = pub_yf
     dd = sjdate2
     mdate = CTOD(STR(yy, 4) +  ;
             '.' + STR(mm, 2) +  ;
             '.' + STR(dd, 2))
     i = 1
     DO WHILE CTOD("")=mdate  ;
        .AND. i<5
          dd = dd - 1
          mdate = CTOD(STR(yy, 4) +  ;
                  '.' + STR(mm,  ;
                  2) + '.' +  ;
                  STR(dd, 2))
          i = i + 1
     ENDDO
     IF i >= 5
          mdate = CTOD("")
     ENDIF
     pub_kqjieshu = mdate
ENDIF
dd = sjdate1
IF ABS(sjdate2 - sjdate1) >= 30
     mdate = CTOD(STR(yy, 4) +  ;
             '.' + STR(mm, 2) +  ;
             '.' + STR(dd, 2))
ELSE
     IF mm = 1
          mdate = CTOD(STR(yy - 1,  ;
                  4) + '.' +  ;
                  STR(12, 2) +  ;
                  '.' + STR(dd,  ;
                  2))
     ELSE
          mdate = CTOD(STR(yy, 4) +  ;
                  '.' + STR(mm -  ;
                  1, 2) + '.' +  ;
                  STR(dd, 2))
     ENDIF
ENDIF
i = 1
DO WHILE CTOD("")=mdate .AND. i<5
     dd = dd - 1
     mdate = CTOD(STR(yy, 4) +  ;
             '.' + STR(mm, 2) +  ;
             '.' + STR(dd, 2))
     i = i + 1
ENDDO
IF i >= 5
     mdate = CTOD("")
ENDIF
pub_kqkaishi = mdate
ENDPROC
**
***
*** getstrval.fxp
***
*
**
FUNCTION GetStrVal
LPARAMETERS gsv_pfd, gsv_psgn
gsv_str = &gsv_pfd     
gsv_sgn = gsv_psgn
IF TYPE("gsv_str") = 'N'
     RETURN gsv_str
ELSE
     IF EMPTY(gsv_str)
          RETURN 0
     ELSE
          gsv_start = AT(gsv_sgn,  ;
                      gsv_str)
          gsv_len = LEN(ALLTRIM(gsv_str))
          IF gsv_start = 0
               gsv_ret = 0
          ELSE
               gsv_str1 = SUBSTR(gsv_str,  ;
                          gsv_start,  ;
                          255)
               gsv_end = AT(',',  ;
                         gsv_str1)
               IF gsv_end > 0
                    gsv_ret = VAL(SUBSTR(gsv_str1,  ;
                              2,  ;
                              gsv_end -  ;
                              1))
               ELSE
                    gsv_ret = VAL(SUBSTR(gsv_str1,  ;
                              2,  ;
                              255))
               ENDIF
          ENDIF
     ENDIF
ENDIF
RETURN gsv_ret
ENDFUNC
**
***
*** tran2b_1b.fxp
***
*
PARAMETER t21_str
t21_ret = STRTRAN(t21_str, "，",  ;
          ",")
t21_ret = STRTRAN(t21_ret, "（",  ;
          "(")
t21_ret = STRTRAN(t21_ret, "）",  ;
          ")")
t21_ret = STRTRAN(t21_ret, " ",  ;
          "")
RETURN t21_ret
ENDFUNC
**
***
*** getcount.fxp
***
*
**
FUNCTION GetCount
PARAMETER gc_type, gc_delta
IF gc_delta < 1
     RETURN -2
ENDIF
gc_area = STR(SELECT())
gc_repart = 0
DO WHILE .T.
     IF sqlexe_run(00000000018,  ;
        SYS(16),  ;
        "select * from sys_counter where xuhao=?gc_Type",  ;
        "counter") < 0
          gc_ret = -1
          EXIT
     ENDIF
     SELECT counter
     IF EOF()
          gc_ret = -1
          EXIT
     ENDIF
     gc_cnt0 = jishuqi
     IF  .NOT. EMPTY(flag)
          IF gc_repart < 3
               gc_repart = gc_repart +  ;
                           1
               LOOP
          ENDIF
          gc_repart = 0
          gc_j = MESSAGEBOX("其他用户正在保存该数据表。",  ;
                 0322,  ;
                 "考勤分析系统")
          DO CASE
               CASE gc_j = 4
                    LOOP
               CASE gc_j = 5
               OTHERWISE
                    gc_ret = -1
                    EXIT
          ENDCASE
     ENDIF
     IF sqlexe_run(00000000050,  ;
        SYS(16),  ;
        "update sys_counter set flag='1' where xuhao=?gc_Type",  ;
        "") < 0
          gc_ret = -1
          EXIT
     ENDIF
     IF sqlexe_run(00000000056,  ;
        SYS(16),  ;
        "select * from sys_counter where xuhao=?gc_Type",  ;
        "counter") < 0
          gc_ret = -1
          EXIT
     ENDIF
     SELECT counter
     gc_cnt1 = jishuqi
     IF gc_cnt0 <> gc_cnt1
          LOOP
     ENDIF
     gc_cnt1 = gc_cnt1 + gc_delta
     IF sqlexe_run(00000000069,  ;
        SYS(16),  ;
        "update sys_counter set jishuqi=?gc_Cnt1,flag=' ' where xuhao=?gc_Type",  ;
        "") < 0
          gc_ret = -1
          EXIT
     ENDIF
     gc_ret = gc_cnt0
     EXIT
ENDDO
select &gc_Area
RETURN gc_ret
ENDFUNC
**
***
*** checkjbba.fxp
***
*
**
FUNCTION CheckJbBA
LPARAMETERS cjb_sbsk, cjb_xbsk,  ;
            cjb_sbsj, cjb_xbsj,  ;
            cjb_jbss
msbsj = IIF(cjb_sbsj < delta0,  ;
        1440 + cjb_sbsj,  ;
        cjb_sbsj)
mxbsj = IIF(cjb_sbsj > clfx.xbsj,  ;
        1440 + cjb_xbsj,  ;
        cjb_xbsj)
msbsk = IIF(cjb_sbsk < delta0,  ;
        1440 + cjb_sbsk,  ;
        cjb_sbsk)
mxbsk = IIF(cjb_sbsk > cjb_xbsk,  ;
        1440 + cjb_xbsk,  ;
        cjb_xbsk)
msjjb2 = IIF(sjjb2 > 0, sjjb2, 1)
mbefore = msjjb2 * INT((msbsj -  ;
          msbsk) / msjjb2)
mafter = msjjb2 * INT((mxbsk -  ;
         mxbsj) / msjjb2)
DO CASE
     CASE mbefore <= 0
          cjb_ret = mafter
     CASE mbefore >= 0 .AND.  ;
          mafter <= 0
          cjb_ret = mbefore
     OTHERWISE
          mrateb = (mbefore /  ;
                   cjb_jbss - 1)
          mratea = (mafter /  ;
                   cjb_jbss - 1)
          IF mrateb < mratea
               IF mbefore >=  ;
                  cjb_jbss
                    cjb_ret = mbefore
               ELSE
                    cjb_ret = mbefore +  ;
                              mbefore
               ENDIF
          ELSE
               IF mafter >=  ;
                  cjb_jbss
                    cjb_ret = mafter
               ELSE
                    cjb_ret = mbefore +  ;
                              mbefore
               ENDIF
          ENDIF
ENDCASE
RETURN cjb_ret
ENDFUNC
**
***
*** ftrefreshfromio.fxp
***
*
ffs_mp = obj_form4.mousepointer
obj_form4.mousepointer = 11
SQLSETPROP(0, "DispLogin", 3)
IF EMPTY(mdb)
     odbc_ant2000io = SQLCONNECT("ant2000IO",  ;
                      "ant",  ;
                      "tct1810")
ELSE
     odbc_ant2000io = SQLCONNECT(mdb,  ;
                      "ant",  ;
                      "tct1810")
ENDIF
IF odbc_ant2000io < 0
     SQLSETPROP(0, "DispLogin",  ;
               1)
     IF EMPTY(mdb)
          odbc_ant2000io = SQLCONNECT("ant2000IO",  ;
                           "ant",  ;
                           "tct1810")
     ELSE
          odbc_ant2000io = SQLCONNECT(mdb,  ;
                           "ant",  ;
                           "tct1810")
     ENDIF
ENDIF
IF odbc_ant2000io < 0
     IF pub_language
          = MESSAGEBOX( ;
            "Database Connecting Error!",  ;
            64,  ;
            "Ant2000 System")
     ELSE
          = MESSAGEBOX("接后台识别系统数据库连接错误！",  ;
            64, "就餐管理系统")
     ENDIF
     obj_form4.mousepointer = ffs_mp
     RETURN
ENDIF
sjdate1 = getantenv('KQGD',  ;
          'SJDATE1')
sjdate2 = getantenv('KQGD',  ;
          'SJDATE2')
sjdays = getantenv('KQGD',  ;
         'SJDAYS')
DO getkqqj
strsql = "select rybh,lyxm,cardno,company,djrq,yxks,yxjs from sb_card_ls where hsbz=0 and yxjs>'" +  ;
         DTOC(pub_kqkaishi) +  ;
         "'"
IF SQLEXEC(odbc_ant2000io, strsql,  ;
   "card_ls") <> 1
     = MESSAGEBOX("打开识别系统临时卡号表错误！",  ;
       64,  ;
       "ANT2000人事考勤系统")
     = SQLDISCONNECT(odbc_ant2000io)
     obj_form4.mousepointer = ffs_mp
     RETURN
ENDIF
= SQLDISCONNECT(odbc_ant2000io)
UPDATE card_ls SET yxjs =  ;
       "9999/12/31" WHERE  ;
       CTOD(yxjs) = CTOD('')
SELECT COUNT(*) AS lscount FROM  ;
       bm WHERE bmbh LIKE "LS-%"   ;
       INTO CURSOR lsbm
IF lscount = 0
     SELECT DISTINCT LEFT(company,  ;
            20) AS company FROM  ;
            card_ls INTO CURSOR  ;
            tmpbm
     bmcount = 0
     SCAN
          bmcount = bmcount + 1
          INSERT INTO bm (bmbh,  ;
                 bmmc) VALUES  ;
                 ("LS-" +  ;
                 ALLTRIM(STR(bmcount)),  ;
                 tmpbm.company)
     ENDSCAN
ENDIF
strsql = "select a.zgbh,a.zgxm,a.bmbh,a.lzsj,a.dh,a.zglb,b.lskh,b.djsj,b.yxks,b.yxjs,16777215 as ModifyFlag" +  ;
         " from kq_zg a right join kq_lskh b on a.zgbh=b.zgbh where a.zgbh is not null order by a.zgbh"
sqlexe_run(00000000065, SYS(16),  ;
          strsql, "ZGLINK")
UPDATE zglink SET yxjs =  ;
       DTOC(CTOD(lzsj) - 1) WHERE  ;
       CTOD(lzsj) <> CTOD('')
UPDATE zglink SET yxjs =  ;
       "9999/12/31" WHERE  ;
       CTOD(yxjs) = CTOD('')
UPDATE zglink SET yxks =  ;
       DTOC(DATE()) WHERE  ;
       CTOD(yxks) = CTOD('')
UPDATE zglink SET zglb = '1'  ;
       WHERE  .NOT. !_err=0xCF_! ;
       (zgbh, '5%')
UPDATE zglink SET zglb = '2'  ;
       WHERE !_err=0xCF_!(zgbh,  ;
       '5%')
SELECT zgbh, COUNT(lskh) FROM  ;
       zglink GROUP BY zgbh  ;
       HAVING COUNT(lskh) > 1  ;
       INTO CURSOR multicard
SELECT multicard
SCAN
     SELECT lskh FROM zglink  ;
            WHERE zgbh ==  ;
            multicard.zgbh ORDER  ;
            BY yxjs DESC INTO  ;
            CURSOR tmpcard
     isfirst = .T.
     SELECT tmpcard
     SCAN
          IF isfirst
               isfirst = .F.
               LOOP
          ENDIF
          DELETE FROM zglink  ;
                 WHERE lskh ==  ;
                 tmpcard.lskh
     ENDSCAN
ENDSCAN
SELECT bm
INDEX ON bmmc TAG bm
SELECT card_ls
SCAN
     IF LEFT(card_ls.rybh, 1) =  ;
        '2'
          LOOP
     ENDIF
     SELECT bm
     IF SEEK(LEFT(card_ls.company,  ;
        20))
          INSERT INTO zglink  ;
                 (zgbh, zgxm,  ;
                 bmbh, lzsj, dh,  ;
                 zglb, lskh, djsj,  ;
                 yxks, yxjs,  ;
                 modifyflag)  ;
                 VALUES ("LS-" +  ;
                 RIGHT(ALLTRIM(card_ls.rybh),  ;
                 7), card_ls.lyxm,  ;
                 bm.bmbh,  ;
                 "9999/12/31", 0,  ;
                 IIF(LEFT(card_ls.rybh,  ;
                 1) = '9', "4",  ;
                 "3"),  ;
                 card_ls.cardno,  ;
                 card_ls.djrq,  ;
                 card_ls.yxks,  ;
                 card_ls.yxjs,  ;
                 16777215)
     ENDIF
ENDSCAN
DELETE FROM zglink WHERE yxjs <  ;
       "'" + DTOC(pub_kqkaishi) +  ;
       "'" .AND.  .NOT.  ;
       EMPTY(CTOD(yxjs))
SELECT zglink
INDEX ON zgbh TO zglink
COPY TO temp STRUCTURE
USE temp ALIAS temp IN 0
SELECT zglink
SET RELATION TO zgbh INTO zg
SCAN
     IF EOF("ZG") .AND.  ;
        (CTOD(zglink.lzsj) =  ;
        CTOD("") .OR.  ;
        CTOD(zglink.lzsj) >=  ;
        pub_kqkaishi)
          SELECT temp
          APPEND BLANK
          REPLACE zgbh WITH  ;
                  zglink.zgbh,  ;
                  modifyflag WITH  ;
                  RGB(180, 213,  ;
                  252)
          pub_modifyflag = .T.
          REPLACE zgxm WITH  ;
                  zglink.zgxm
          REPLACE bmbh WITH  ;
                  zglink.bmbh
          REPLACE dh WITH 0
          REPLACE zglb WITH  ;
                  zglink.zglb
          SELECT zglink
     ENDIF
ENDSCAN
SET RELATION TO
SELECT zg
SET RELATION TO zgbh INTO zglink
SCAN
     IF LEFT(zgbh, 4) = 'LS-2'
          REPLACE modifyflag WITH  ;
                  RGB(0, 0, 0)
          pub_modifyflag = .T.
          DELETE
     ENDIF
     IF EOF("ZGLINK")
          LOOP
     ENDIF
     IF CTOD(zglink.lzsj) <>  ;
        CTOD("") .AND.  ;
        CTOD(zglink.lzsj) <  ;
        pub_kqkaishi
          REPLACE modifyflag WITH  ;
                  RGB(0, 0, 0)
          pub_modifyflag = .T.
          DELETE
     ELSE
          IF zg.zgxm <>  ;
             zglink.zgxm
               REPLACE zgxm WITH  ;
                       zglink.zgxm
               IF modifyflag <>  ;
                  RGB(180, 213,  ;
                  252)
                    REPLACE modifyflag  ;
                            WITH  ;
                            RGB(255,  ;
                            193,  ;
                            193)
                    pub_modifyflag =  ;
                     .T.
               ENDIF
          ENDIF
          IF zg.bmbh <>  ;
             zglink.bmbh
               IF LEFT(zg.zgbh,  ;
                  3) <> "LS-"  ;
                  .AND.  ;
                  LEFT(zg.zgbh,  ;
                  1) <> "3"
                    REPLACE bmbh  ;
                            WITH  ;
                            zglink.bmbh
                    IF modifyflag <>  ;
                       RGB(180,  ;
                       213, 252)
                         REPLACE modifyflag  ;
                                 WITH  ;
                                 RGB(255,  ;
                                 193,  ;
                                 193)
                         pub_modifyflag =  ;
                          .T.
                    ENDIF
               ENDIF
          ENDIF
          IF zg.zglb <>  ;
             zglink.zglb
               REPLACE zglb WITH  ;
                       zglink.zglb
               IF modifyflag <>  ;
                  RGB(180, 213,  ;
                  252)
                    REPLACE modifyflag  ;
                            WITH  ;
                            RGB(255,  ;
                            193,  ;
                            193)
                    pub_modifyflag =  ;
                     .T.
               ENDIF
          ENDIF
     ENDIF
ENDSCAN
SET RELATION TO
SELECT temp
USE
SELECT bm
INDEX ON bmbh TO bm
SELECT zg
APPEND FROM temp
SET RELATION TO bmbh INTO bm
SET RELATION ADDITIVE TO zglb INTO yglb
GOTO TOP
obj_form4.mousepointer = ffs_mp
= MESSAGEBOX("就餐员工资料刷新完成。",  ;
  64, "就餐管理系统")
ENDPROC
**
***
*** updateft_lskh.fxp
***
*
IF  .NOT. USED("zglink") .OR.   ;
    .NOT. USED("zg")
     RETURN
ENDIF
strsql = "select * from ft_lskh"
sqlexe_run(00000000010, SYS(16),  ;
          strsql, "ft_lskh")
SELECT * FROM zg WHERE  NOT  ;
         DELETED() INTO CURSOR  ;
         tmpzg
SELECT * FROM ft_lskh WHERE  ;
         CTOD(yxjs) <> CTOD('')  ;
         AND CTOD(yxjs) <  ;
         pub_kqkaishi INTO CURSOR  ;
         tmpcard
SCAN
     IF sqlexe_run(00000000016,  ;
        SYS(16),  ;
        "delete from ft_lskh where zgbh=?zgbh",  ;
        "") <> 1
          pub_saveerr = .T.
     ENDIF
ENDSCAN
SELECT * FROM ft_lskh WHERE  NOT  ;
         zgbh IN(SELECT zgbh FROM  ;
         tmpzg) INTO CURSOR  ;
         tmpcard
SCAN
     IF sqlexe_run(00000000023,  ;
        SYS(16),  ;
        "delete from ft_lskh where zgbh=?zgbh",  ;
        "") <> 1
          pub_saveerr = .T.
     ENDIF
ENDSCAN
SELECT zgbh, COUNT(lskh) FROM  ;
       zglink WHERE  NOT  ;
       DELETED() GROUP BY zgbh  ;
       HAVING COUNT(lskh) = 1  ;
       INTO CURSOR singlecard
SELECT * FROM zglink WHERE  NOT  ;
         DELETED() AND zgbh  ;
         IN(SELECT zgbh FROM  ;
         singlecard) INTO CURSOR  ;
         tmpcard
SCAN
     IF sqlexe_run(00000000032,  ;
        SYS(16),  ;
        "update ft_lskh set lskh=?lskh,djsj=?djsj,yxks=?yxks,yxjs=?yxjs where zgbh=?zgbh",  ;
        "") <> 1
          pub_saveerr = .T.
     ENDIF
ENDSCAN
SELECT zgbh, COUNT(lskh) FROM  ;
       zglink WHERE  NOT  ;
       DELETED() GROUP BY zgbh  ;
       HAVING COUNT(lskh) > 1  ;
       INTO CURSOR multicard
SELECT * FROM zglink WHERE  NOT  ;
         DELETED() AND zgbh  ;
         IN(SELECT zgbh FROM  ;
         multicard) INTO CURSOR  ;
         tmpcard
SCAN
     IF sqlexe_run(00000000041,  ;
        SYS(16),  ;
        "update ft_lskh set yxks=?yxks,yxjs=?yxjs where zgbh=?zgbh",  ;
        "") <> 1
          pub_saveerr = .T.
     ENDIF
ENDSCAN
SELECT * FROM zglink WHERE  NOT  ;
         DELETED() AND zgbh  ;
         IN(SELECT zgbh FROM  ;
         tmpzg) AND  NOT zgbh  ;
         IN(SELECT zgbh FROM  ;
         ft_lskh) INTO CURSOR  ;
         tmpcard
SCAN
     IF sqlexe_run(00000000048,  ;
        SYS(16),  ;
        "insert into ft_lskh(zgbh,lskh,djsj,yxks,yxjs) values(?zgbh,?lskh,?djsj,?yxks,?yxjs)",  ;
        "") <> 1
          MESSAGEBOX("无法向卡号表插入已存在的卡号！" +  ;
                    CHR(13) +  ;
                    "员工编号：" +  ;
                    zgbh +  ;
                    CHR(13) +  ;
                    "卡号：" +  ;
                    lskh, 48,  ;
                    "员工刷新")
          pub_saveerr = .T.
     ENDIF
ENDSCAN
IF sqlexe_run(00000000054,  ;
   SYS(16),  ;
   "delete from ft_lskh where zgbh not in (select zgbh from ft_zg)",  ;
   "") <> 1
     pub_saveerr = .T.
ENDIF
SELECT ft_lskh
USE
SELECT singlecard
USE
SELECT multicard
USE
SELECT tmpcard
USE
ENDPROC
**
***
*** issubadmin.fxp
***
*
**
FUNCTION IsSubAdmin
PARAMETER subsys
marea = ALLTRIM(STR(SELECT()))
mret = .F.
= sqlexe_run(00000000015, SYS(16),  ;
  "select * from sys_user where name=?pub_user and quanxian=1",  ;
  "tmpuser")
IF RECCOUNT("tmpuser") = 0
     RETURN mret
ENDIF
fieldname = UPPER(subsys)
IF fieldname = "TL"
     fieldname = "TOOL"
ENDIF
SELECT tmpuser
if &FieldName. = 1
     mret = .T.
ENDIF
USE
select &marea
RETURN mret
ENDFUNC
**
***
*** simulate.fxp
***
*
PARAMETER par_list, par_def,  ;
          par_mode,  ;
          par_issavemode,  ;
          par_reportid,  ;
          par_condition
evaluatehaserror = .F.
mserver = getantenv("SERVER",  ;
          "ANT2000")
IF ISNULL(mserver)
     mserver = ""
ENDIF
lib_name = ""
IF par_mode == "gzrep"
     lib_name = "gz"
ELSE
     lib_name = par_mode
ENDIF
IF FILE(mserver+"function\&lib_name.FuncsTest.fxp")
     SET PROCEDURE TO mserver+"function\&lib_name.FuncsTest.fxp"
ELSE
     msg = "找不到相关模拟函数库,无法进行公式检查。"
     IF par_issavemode
          msg = msg + CHR(13) +  ;
                "是否继续保存？"
     ELSE
          msg = msg + CHR(13) +  ;
                "是否继续执行？"
     ENDIF
     IF MESSAGEBOX(msg, 0308,  ;
        IIF(lib_name == "gz",  ;
        "薪资", "考勤") +  ;
        "管理系统") = 7
          pub_cancel = .T.
     ELSE
          pub_cancel = .F.
     ENDIF
     RETURN 101
ENDIF
sim_condition = ""
DO CASE
     CASE par_mode == "kq" .OR.  ;
          par_mode == "gzrep"
          reportid_fieldname = "xuhao"
          fieldid_fieldname = "seq"
          formula_fieldname = "condition"
          reportid_value = -1
          IF  .NOT.  ;
              EMPTY(par_reportid)
               reportid_value = par_reportid
               sim_condition = "for " +  ;
                               reportid_fieldname +  ;
                               "=" +  ;
                               ALLTRIM(STR(reportid_value))
          ENDIF
          fieldid_value = -1
     CASE par_mode == "gz"
          reportid_fieldname = "yglb"
          fieldid_fieldname = "xuhao"
          formula_fieldname = "cpu"
          reportid_value = ""
          IF  .NOT.  ;
              EMPTY(par_reportid)
               reportid_value = par_reportid
               sim_condition = "for AllTrim(lbbh)==Alltrim('" +  ;
                               reportid_value +  ;
                               "')"
          ENDIF
          fieldid_value = -1
ENDCASE
IF  .NOT. EMPTY(par_condition)
     IF EMPTY(sim_condition)
          sim_condition = "for " +  ;
                          par_condition
     ELSE
          sim_condition = sim_condition +  ;
                          " and " +  ;
                          par_condition
     ENDIF
ENDIF
IF par_mode == "gz"
     IF  .NOT.  ;
         tableisexist("gz_gz")
          msg = "薪资数据表GZ_GZ尚未创建,无法进行公式检查。"
          IF par_issavemode
               msg = msg +  ;
                     CHR(13) +  ;
                     "是否继续保存？"
               IF MESSAGEBOX(msg,  ;
                  0308,  ;
                  "公式检查") =  ;
                  7
                    pub_cancel = .T.
               ELSE
                    pub_cancel = .F.
               ENDIF
          ELSE
               MESSAGEBOX(msg,  ;
                         0048,  ;
                         "公式检查")
          ENDIF
          SET PROCEDURE TO
          RETURN 102
     ENDIF
     SQLCOLUMNS(odbc_ant2000,  ;
               'GZ_GZ', 'FOXPRO',  ;
               'ColDef')
     CREATE CURSOR CheckCursor  ;
            (fieldnum I,  ;
            fieldtitle C (30),  ;
            fieldtype C (1),  ;
            fieldwidth I,  ;
            fieldprec I,  ;
            modifyflag I,  ;
            isdeleted L)
     SELECT gzbase
     SCAN FOR  .NOT. DELETED()
          INSERT INTO CheckCursor  ;
                 VALUES  ;
                 (gzbase.xuhao,  ;
                 gzbase.term,  ;
                 gzbase.typ,  ;
                 gzbase.kuandu,  ;
                 gzbase.xiaoshu,  ;
                 IIF(par_issavemode,  ;
                 gzbase.modifyflag,  ;
                 16777215),  ;
                 IIF(par_issavemode,  ;
                 DELETED("gzbase"),  ;
                 .F.))
     ENDSCAN
     CREATE CURSOR ResultCursor  ;
            (rownum I, fieldnum I,  ;
            fieldtitle C (30),  ;
            fieldtype C (1),  ;
            fieldwidth I,  ;
            fieldprec I, detail C  ;
            (60), modifyflag I,  ;
            flag I)
     hasdiff = checktableex("CheckCursor",  ;
               "ColDef",  ;
               "ResultCursor")
     SELECT checkcursor
     USE
     SELECT coldef
     USE
     IF hasdiff = 1
          SELECT TOP 1 fieldtitle,  ;
                 detail FROM  ;
                 ResultCursor  ;
                 WHERE flag <> 0  ;
                 ORDER BY  ;
                 fieldnum INTO  ;
                 CURSOR tmpDiff
          SELECT resultcursor
          USE
          msg = "薪资数据表GZ_GZ与项目定义表GZ_GZBASE不一致，" +  ;
                CHR(13) +  ;
                "项目 [" +  ;
                ALLTRIM(tmpdiff.fieldtitle) +  ;
                "] " +  ;
                ALLTRIM(tmpdiff.detail)
          IF par_issavemode
               msg = msg +  ;
                     CHR(13) +  ;
                     CHR(13) +  ;
                     "是否继续保存？"
               IF MESSAGEBOX(msg,  ;
                  0308,  ;
                  "公式检查") =  ;
                  7
                    pub_cancel = .T.
               ELSE
                    pub_cancel = .F.
               ENDIF
          ELSE
               MESSAGEBOX(msg,  ;
                         0048,  ;
                         "公式检查")
          ENDIF
          SELECT tmpdiff
          USE
          SET PROCEDURE TO
          RETURN 103
     ENDIF
     SELECT resultcursor
     USE
     sqlexe_run((00000000140),  ;
               SYS(16),  ;
               "SELECT a.*,b.* FROM gz_zg a,GZ_GZ b where 0=1",  ;
               "tmp_select")
ENDIF
ON ERROR DO SHOWERRORMSG WITH MESSAGE(),;
PAR_LIST, PAR_DEF, PAR_MODE, PAR_ISSAVEMODE
SELECT &par_list
SCAN &sim_Condition
     IF par_mode == "kq" .OR.  ;
        par_mode == "gzrep"
          ReportTableName = left(par_mode,;
2) + "_rep" + alltrim(str(&par_list..xuhao))
          IF  .NOT.  ;
              tableisexist(reporttablename)
               msg = "报表 [" + Alltrim(&par_list..Name_C);
+ "] 对应的数据表尚未创建，无法进行公式检查。"
               IF par_issavemode
                    msg = msg +  ;
                          CHR(13) +  ;
                          "是否继续保存？"
                    IF MESSAGEBOX(msg,  ;
                       0308,  ;
                       "公式检查") =  ;
                       7
                         pub_cancel =  ;
                          .T.
                    ELSE
                         pub_cancel =  ;
                          .F.
                    ENDIF
               ELSE
                    MESSAGEBOX(msg,  ;
                              0048,  ;
                              "公式检查")
               ENDIF
               ON ERROR DO HANDLE_ERR;
WITH LINENO(),SYS(16)
               SET PROCEDURE TO
               RETURN 102
          ENDIF
          = SQLCOLUMNS(odbc_ant2000,  ;
            reporttablename,  ;
            "FOXPRO", "ColDef")
          CREATE CURSOR  ;
                 CheckCursor  ;
                 (fieldnum I,  ;
                 fieldtitle C  ;
                 (30), fieldtype  ;
                 C (1),  ;
                 fieldwidth I,  ;
                 fieldprec I,  ;
                 modifyflag I,  ;
                 isdeleted L)
          select &par_def
          scan for not deleted() and &ReportID_FieldName=&par_list..&ReportID_FieldName
               insert into CheckCursor;
values(&par_def..seq,&par_def..Title_C,&par_def..Typ,&par_def..KuanDu,&par_def..XiaoShu,;
iif(par_IsSaveMode, &par_def..ModifyFlag,;
16777215), iif(par_IsSaveMode, Deleted(par_def),;
.F.))
          ENDSCAN
          CREATE CURSOR  ;
                 ResultCursor  ;
                 (rownum I,  ;
                 fieldnum I,  ;
                 fieldtitle C  ;
                 (30), fieldtype  ;
                 C (1),  ;
                 fieldwidth I,  ;
                 fieldprec I,  ;
                 detail C (60),  ;
                 modifyflag I,  ;
                 flag I)
          hasdiff = checktableex("CheckCursor",  ;
                    "ColDef",  ;
                    "ResultCursor")
          SELECT checkcursor
          USE
          SELECT coldef
          USE
          IF hasdiff = 1
               SELECT TOP 1  ;
                      fieldtitle,  ;
                      detail FROM  ;
                      ResultCursor  ;
                      WHERE flag <>  ;
                      0 ORDER BY  ;
                      fieldnum  ;
                      INTO CURSOR  ;
                      tmpDiff
               SELECT resultcursor
               USE
               msg = "报表 [" + Alltrim(&par_list..Name_C);
+ "] 的项目定义与对应的数据表不一致，";
+ chr(13) + "项目 [" + alltrim(tmpDiff.FieldTitle);
+ "] " + AllTrim(tmpDiff.Detail)
               IF par_issavemode
                    msg = msg +  ;
                          CHR(13) +  ;
                          CHR(13) +  ;
                          "是否继续保存？"
                    IF MESSAGEBOX(msg,  ;
                       0308,  ;
                       "公式检查") =  ;
                       7
                         pub_cancel =  ;
                          .T.
                    ELSE
                         pub_cancel =  ;
                          .F.
                    ENDIF
               ELSE
                    MESSAGEBOX(msg,  ;
                              0048,  ;
                              "公式检查")
               ENDIF
               SELECT tmpdiff
               USE
               ON ERROR DO HANDLE_ERR;
WITH LINENO(),SYS(16)
               SET PROCEDURE TO
               RETURN 103
          ENDIF
          SELECT resultcursor
          USE
          IF par_mode == "kq"
               strsql = "select a.*,b.*,c.* from kq_zg a,kq_clfx b," +  ;
                        reporttablename +  ;
                        " c where 0=1"
          ELSE
               strsql = "select a.*,b.* from gz_zg a," +  ;
                        reporttablename +  ;
                        " b where 0=1"
          ENDIF
          SQLEXEC(odbc_ant2000,  ;
                 strsql,  ;
                 "tmp_select")
          SELECT tmp_select
     ENDIF
     SELECT &par_def
     SCAN FOR  .NOT. DELETED()
          IF EMPTY(&Formula_FieldName)
               if (par_mode == "kq" OR;
par_mode == "gzrep") and empty(&par_def..kqid)
                    DO showerrormsg  ;
                       WITH  ;
                       "自定义项目的公式不能为空",  ;
                       par_list,  ;
                       par_def,  ;
                       par_mode,  ;
                       par_issavemode
                    ReportID_Value = &par_def..&ReportID_FieldName
                    FieldID_Value = &par_def..&FieldID_FieldName
                    EXIT
               ELSE
                    LOOP
               ENDIF
          ENDIF
          evaluatehaserror = .F.
          exp_string = ALLTRIM(&Formula_FieldName);
   
          exp_tmp = UPPER(CHRTRAN(exp_string,  ;
                    '"', "'"))
          DO WHILE AT("FD",  ;
             exp_tmp)>0
               nposition = AT("FD",  ;
                           exp_tmp)
               IF SUBSTR(exp_tmp,  ;
                  nposition - 1,  ;
                  1) == "'"
                    nposition = AT("'",  ;
                                exp_tmp,  ;
                                2)
                    exp_tmp = RIGHT(exp_tmp,  ;
                              LEN(exp_tmp) -  ;
                              (nposition -  ;
                              1 +  ;
                              LEN("'")))
                    LOOP
               ENDIF
               exp_tmp = RIGHT(exp_tmp,  ;
                         LEN(exp_tmp) -  ;
                         (nposition -  ;
                         1 +  ;
                         LEN("FD")))
               digit_string = ""
               DO WHILE  ;
                  ISDIGIT(LEFT(exp_tmp,  ;
                  1)) .AND.  ;
                  LEN(exp_tmp)>0
                    digit_string =  ;
                     digit_string +  ;
                     LEFT(exp_tmp,  ;
                     1)
                    exp_tmp = RIGHT(exp_tmp,  ;
                              LEN(exp_tmp) -  ;
                              1)
               ENDDO
               IF EMPTY(digit_string)
                    LOOP
               ENDIF
               IF par_mode ==  ;
                  "gz"
                    CurrentYglb = alltrim(&par_def..yglb)
                    select yglb,SeriesNo;
from &par_def where ALLTRIM(yglb)==CurrentYglb;
and &FieldID_FieldName=VAL(digit_string);
into cursor tmp_SeriesNo
                    IF RECCOUNT("tmp_SeriesNo") >  ;
                       0
                         IF tmp_SeriesNo.SeriesNo;
> &par_def..SeriesNo
                              DO showerrormsg  ;
                                 WITH  ;
                                 "公式引用的字段 [FD"+ ;
                                 digit_string+ ;
                                 "] 的位置必须在当前项目之前",  ;
                                 par_list,  ;
                                 par_def,  ;
                                 par_mode,  ;
                                 par_issavemode
                              ReportID_Value;
= &par_def..&ReportID_FieldName
                              FieldID_Value;
= &par_def..&FieldID_FieldName
                              EXIT
                         ENDIF
                    ENDIF
                    SELECT tmp_select
               ELSE
                    IF VAL(digit_string);
> &par_def..&FieldID_FieldName
                         DO showerrormsg  ;
                            WITH  ;
                            "公式引用的字段 [FD"+ ;
                            digit_string+ ;
                            "] 的位置必须在当前项目之前",  ;
                            par_list,  ;
                            par_def,  ;
                            par_mode,  ;
                            par_issavemode
                         ReportID_Value;
= &par_def..&ReportID_FieldName
                         FieldID_Value;
= &par_def..&FieldID_FieldName
                         EXIT
                    ENDIF
               ENDIF
          ENDDO
          IF evaluatehaserror
               EXIT
          ENDIF
          exp_string = LOWER(exp_string)
          IF AT("getdbf(",  ;
             exp_string) > 0
               LOOP
          ENDIF
          IF LEFT(exp_string, 1) $  ;
             "=?"
               exp_string = STUFF(exp_string,  ;
                            1, 1,  ;
                            "")
          ENDIF
          IF "zg." $ exp_string
               exp_string = STRTRAN(exp_string,  ;
                            "zg.",  ;
                            "")
          ENDIF
          IF par_mode == "kq"
               IF "clfx." $  ;
                  exp_string
                    exp_string = STRTRAN(exp_string,  ;
                                 "clfx.",  ;
                                 "")
               ENDIF
          ELSE
               IF "gz." $  ;
                  exp_string
                    exp_string = STRTRAN(exp_string,  ;
                                 "gz.",  ;
                                 "")
               ENDIF
          ENDIF
          ResultType = &par_def..typ
          if (par_mode == "kq" OR par_mode;
== "gzrep") and not empty(&par_def..kqid)
               resulttype = "L"
          ENDIF
          SELECT tmp_select
          eval_value = &exp_string
          IF evaluatehaserror
               ReportID_Value = &par_def..&ReportID_FieldName
               FieldID_Value = &par_def..&FieldID_FieldName
               EXIT
          ENDIF
          IF  .NOT.  ;
              (TYPE("eval_value") ==  ;
              resulttype)
               if (par_mode == "kq" OR;
par_mode == "gzrep") and not empty(&par_def..kqid)
                    DO showerrormsg  ;
                       WITH  ;
                       "引用项目的公式只能是逻辑条件",  ;
                       par_list,  ;
                       par_def,  ;
                       par_mode,  ;
                       par_issavemode
               ELSE
                    DO showerrormsg  ;
                       WITH  ;
                       "公式的值与项目定义的类型不匹配",  ;
                       par_list,  ;
                       par_def,  ;
                       par_mode,  ;
                       par_issavemode
               ENDIF
               ReportID_Value = &par_def..&ReportID_FieldName
               FieldID_Value = &par_def..&FieldID_FieldName
               EXIT
          ENDIF
     ENDSCAN
     IF evaluatehaserror
          EXIT
     ENDIF
ENDSCAN
IF USED("tmp_select")
     SELECT tmp_select
     USE
ENDIF
ON ERROR DO HANDLE_ERR WITH LINENO(),SYS(16)
SET PROCEDURE TO
IF par_issavemode
     DO CASE
          CASE par_mode == "kq"  ;
               .OR. par_mode ==  ;
               "gzrep"
               SELECT &par_list
               GOTO TOP
               IF reportid_value > - ;
                  1
                    SEEK reportid_value 
               ENDIF
               SELECT &par_def
               GOTO TOP
               IF reportid_value > - ;
                  1
                    LOCATE FOR  ;
                           xuhao =  ;
                           reportid_value  ;
                           .AND.  ;
                           seq =  ;
                           fieldid_value
               ENDIF
          CASE par_mode == "gz"
               SELECT &par_list
               GOTO TOP
               IF  .NOT.  ;
                   EMPTY(reportid_value)
                    LOCATE FOR  ;
                           ALLTRIM(lbbh) ==  ;
                           ALLTRIM(reportid_value)
               ENDIF
               SELECT &par_def
               GOTO TOP
               IF  .NOT.  ;
                   EMPTY(reportid_value)
                    LOCATE FOR  ;
                           ALLTRIM(yglb) ==  ;
                           ALLTRIM(reportid_value)  ;
                           .AND.  ;
                           xuhao =  ;
                           fieldid_value
               ENDIF
     ENDCASE
ENDIF
RETURN  .NOT. evaluatehaserror
ENDFUNC
**
PROCEDURE ShowErrorMsg
PARAMETER par_msg, par_main,  ;
          par_detail, par_module,  ;
          par_iscontinue
SELECT &par_main
DO CASE
     CASE par_module == "kq" .OR.  ;
          par_module == "gzrep"
          msg = "报表 [" +  ;
                ALLTRIM(name_c) +  ;
                "] 的"
     CASE par_module == "gz"
          msg = "员工类别 [" +  ;
                ALLTRIM(yglb) +  ;
                "] 的"
ENDCASE
SELECT &par_detail
itemname = ""
DO CASE
     CASE par_module == "kq" .OR.  ;
          par_module == "gzrep"
          itemname = ALLTRIM(title_c)
     CASE par_module == "gz"
          itemname = ALLTRIM(term)
ENDCASE
msg = msg + "项目 [" + itemname +  ;
      "] 的公式定义错误!  " +  ;
      CHR(13) + par_msg
IF par_iscontinue
     msg = msg + CHR(13) +  ;
           CHR(13) +  ;
           "是否继续保存？"
     IF MESSAGEBOX(msg, 0308,  ;
        "公式错误") = 7
          pub_cancel = .T.
     ELSE
          pub_cancel = .F.
     ENDIF
ELSE
     MESSAGEBOX(msg, 0048,  ;
               "公式错误")
ENDIF
evaluatehaserror = .T.
RETURN
ENDPROC
**
***
*** getformid.fxp
***
*
**
FUNCTION GetFormID
LPARAMETERS oform
IF TYPE("oForm") <> "O"
     RETURN ""
ENDIF
formid = SYS(1271, oform)
ntimes = OCCURS("\", formid)
IF ntimes > 0
     npos = AT("\", formid,  ;
            ntimes)
     formid = RIGHT(formid,  ;
              LEN(formid) -  ;
              npos)
ENDIF
ntimes = OCCURS(".", formid)
IF ntimes > 0
     npos = AT(".", formid,  ;
            ntimes)
     formid = LEFT(formid, npos -  ;
              1)
ENDIF
RETURN formid
ENDFUNC
**
***
*** setformdefault.fxp
***
*
**
PROCEDURE SetFormDefault
LPARAMETERS oform
SET EXACT ON
currentalias = ALIAS()
formid = getformid(oform)
msql = "Delete from Sys_FormDefault where FormID=?FormID and UserName=?pub_User"
sqlexe_run(00000000005, SYS(16),  ;
          msql, "")
CREATE CURSOR FormControls  ;
       (controlname C (50),  ;
       controlvalue C (50) NULL,  ;
       visible C (3) NULL,  ;
       enabled C (3))
getcontrols(oform, oform, "oForm",  ;
           "FormControls")
SELECT formcontrols
SCAN
     vcontrolname = ALLTRIM(formcontrols.controlname)
     vcontrolvalue = IIF(ISNULL(formcontrols.controlvalue),  ;
                     .NULL.,  ;
                     ALLTRIM(formcontrols.controlvalue))
     vvisible = IIF(ISNULL(formcontrols.visible),  ;
                .NULL.,  ;
                ALLTRIM(formcontrols.visible))
     venabled = ALLTRIM(formcontrols.enabled)
     strsql = "insert into sys_FormDefault(FormID,UserName,ControlName,ControlValue,Visible,Enabled) " +  ;
              "values(?FormID,?pub_User,?vControlName,?vControlValue,?vVisible,?vEnabled)"
     sqlexe_run(00000000018,  ;
               SYS(16), strsql,  ;
               "")
ENDSCAN
USE
IF  .NOT. EMPTY(currentalias)
     select &CurrentAlias
ENDIF
ENDPROC
**
FUNCTION VTOC
LPARAMETERS v
stype = TYPE("v")
DO CASE
     CASE stype == "C"
          RETURN "'" + ALLTRIM(v) +  ;
                 "'"
     CASE stype == "D" .OR. stype ==  ;
          "T"
          RETURN "{" +  ;
                 TRANSFORM(v, "") +  ;
                 "}"
     CASE stype == "N"
          RETURN IIF(CEILING(v) =  ;
                 v,  ;
                 ALLTRIM(STR(v)),  ;
                 ALLTRIM(TRANSFORM(v,  ;
                 "")))
     CASE stype == "Y"
          RETURN ALLTRIM(TRANSFORM(v,  ;
                 ""))
     CASE stype == "L"
          RETURN "." +  ;
                 TRANSFORM(v, "") +  ;
                 "."
     OTHERWISE
          RETURN ""
ENDCASE
ENDFUNC
**
PROCEDURE GetControls
LPARAMETERS oform, ocontainer,  ;
            spath, salias
LOCAL i, j, ncount, sclass,  ;
      ocontrol, sname,  ;
      scontrolname, npagecount,  ;
      spage, sbuttonname,  ;
      spagename
ncount = ocontainer.controlcount
FOR i = 1 TO ncount
     ocontrol = ocontainer.controls(i)
     sclass = ocontrol.baseclass
     sname = ocontrol.name
     scontrolname = spath + "." +  ;
                    sname
     DO CASE
          CASE sclass ==  ;
               "Optiongroup"
               insert into &sAlias(ControlName,;
ControlValue, Visible, Enabled) values(stuff(sControlName,;
1, 6, ""), GetPropertyValue(oControl,;
"Value"), GetPropertyValue(oControl, "Visible"), GetPropertyValue(oControl, "Enabled"))
               for n = 1 to &sControlName..ButtonCount
                    oControl = &sControlName..Buttons(n);
 
                    sbuttonname =  ;
                     scontrolname +  ;
                     "." +  ;
                     ocontrol.name
                    insert into &sAlias(ControlName,;
ControlValue, Visible, Enabled) values(stuff(sButtonName,;
1, 6, ""), GetPropertyValue(oControl,;
"Value"), GetPropertyValue(oControl, "Visible"), GetPropertyValue(oControl, "Enabled"))
               ENDFOR
          CASE sclass ==  ;
               "Container"
               insert into &sAlias(ControlName,;
ControlValue, Visible, Enabled) values(stuff(sControlName,;
1, 6, ""), GetPropertyValue(oControl,;
"Value"), GetPropertyValue(oControl, "Visible"), GetPropertyValue(oControl, "Enabled"))
               getcontrols(oform,  ;
                          ocontrol,  ;
                          scontrolname,  ;
                          salias)
          CASE sclass ==  ;
               "Pageframe"
               insert into &sAlias(ControlName,;
ControlValue, Visible, Enabled) values(stuff(sControlName,;
1, 6, ""), GetPropertyValue(oControl,;
"ActivePage"), GetPropertyValue(oControl, "Visible"), GetPropertyValue(oControl, "Enabled"))  
               nPageCount = &sControlName..PageCount
               FOR j = 1 TO  ;
                   npagecount
                    spage = scontrolname +  ;
                            ".Pages(" +  ;
                            ALLTRIM(STR(j)) +  ;
                            ")"
                    oControl = &sPage;
       
                    spagename = scontrolname +  ;
                                "." +  ;
                                ocontrol.name
                    insert into &sAlias(ControlName,;
ControlValue, Visible, Enabled) values(stuff(sPageName,;
1, 6, ""), GetPropertyValue(oControl,;
"Value"), GetPropertyValue(oControl, "Visible"), GetPropertyValue(oControl, "Enabled"))
                    getcontrols(oform,  ;
                               ocontrol,  ;
                               spagename,  ;
                               salias)
               ENDFOR
          CASE INLIST(sclass,  ;
               "Checkbox",  ;
               "Combobox",  ;
               "Editbox",  ;
               "Listbox",  ;
               "Spinner",  ;
               "Textbox")
               insert into &sAlias(ControlName,;
ControlValue, Visible, Enabled) values(stuff(sPath;
+ "." + sName, 1, 6, ""), GetPropertyValue(oControl,;
"Value"), GetPropertyValue(oControl, "Visible"), GetPropertyValue(oControl, "Enabled"))
     ENDCASE
ENDFOR
ENDPROC
**
FUNCTION GetPropertyValue
LPARAMETERS obj, sproperty
nrowcount = AMEMBERS(aclassmembers,  ;
            obj, 1)
IF nrowcount = 0
     RETURN .NULL.
ENDIF
nelement = ASCAN(aclassmembers,  ;
           UPPER(sproperty))
IF nelement = 0
     RETURN .NULL.
ENDIF
IF aclassmembers(nelement + 1) <>  ;
   "属性" .AND.  ;
   aclassmembers(nelement + 1) <>  ;
   "Property"
     RETURN .NULL.
ENDIF
return VTOC(obj.&sProperty)
ENDFUNC
**
***
*** getformdefault.fxp
***
*
**
PROCEDURE GetFormDefault
LPARAMETERS oform
currentalias = ALIAS()
formid = getformid(oform)
msql = "Select * from Sys_FormDefault where FormID=?FormID and UserName=?pub_User"
sqlexe_run(00000000004, SYS(16),  ;
          msql, "FormDefault")
IF RECCOUNT("FormDefault") = 0
     SELECT formdefault
     USE
     RETURN
ENDIF
SELECT formdefault
SCAN
     scontrolname = "oform." +  ;
                    ALLTRIM(controlname)
     IF  .NOT. ISNULL(visible)
          e = scontrolname +  ;
              ".Visible=" +  ;
              ALLTRIM(visible)
          &e
     ENDIF
     e = scontrolname +  ;
         ".Enabled=" +  ;
         ALLTRIM(enabled)
     &e
     IF  .NOT.  ;
         ISNULL(controlvalue)
          if &sControlName..BaseClass;
== "Pageframe"
               e = scontrolname +  ;
                   ".ActivePage=" +  ;
                   ALLTRIM(controlvalue)
               &e
          ELSE
               e = scontrolname +  ;
                   ".Value=" +  ;
                   ALLTRIM(controlvalue)
               &e
          ENDIF
     ENDIF
ENDSCAN
USE
IF  .NOT. EMPTY(currentalias)
     select &CurrentAlias
ENDIF
ENDPROC
**
***
*** showerror.fxp
***
*
PARAMETER par_mode
DO CASE
     CASE par_mode == "gz"
          MESSAGEBOX("条件表达式错误。" +  ;
                    CHR(13) +  ;
                    MESSAGE(), 64,  ;
                    "人事管理系统")
     CASE par_mode == "gzrep"  ;
          .OR. par_mode ==  ;
          "kqrep"
          MESSAGEBOX("报表 [" +  ;
                    ALLTRIM(replist.name_c) +  ;
                    "] 计算公式错误。" +  ;
                    CHR(013) +  ;
                    MESSAGE(), 64,  ;
                    IIF(par_mode =  ;
                    "gzrep",  ;
                    "人事",  ;
                    "考勤") +  ;
                    "管理系统")
ENDCASE
RETURN TO MASTER 
ENDPROC
**
***
*** checktable.fxp
***
*
**
FUNCTION CheckTable
PARAMETER aliasname, resultcursor
rgb_green = RGB(128, 255, 0)
SET DELETED OFF
SELECT * FROM ColDef WHERE  ;
         UPPER(LEFT(field_name,  ;
         2)) == 'FD' INTO CURSOR  ;
         tmp_ColumnsDef
SELECT VAL(ALLTRIM(SUBSTR(field_name,  ;
       3, LEN(field_name)))) AS  ;
       xuhao, * FROM  ;
       tmp_ColumnsDef INTO CURSOR  ;
       tmp_Columns
select *,deleted() as delflag from &AliasName;
where xuhao not in (select xuhao from;
tmp_Columns) and ModifyFlag<>RGB_Insert;
into cursor tmp_CheckTable
SCAN
     DO CASE
          CASE tmp_checktable.modifyflag =  ;
               rgb_delete
               update &AliasName set optFlag=RGB_Normal;
where XuHao=tmp_CheckTable.XuHao
               insert into &resultCursor(XuHao,ItemName,FieldName,Detail,Flag,ModifyFlag);
values(Reccount(resultCursor)+1, tmp_CheckTable.Term,'FD'+AllTrim(Str(tmp_CheckTable.XuHao)),'此项目已删除但数据表中不存在',0,RGB_Normal)
          CASE tmp_checktable.modifyflag =  ;
               rgb_normal .AND.   ;
               .NOT. delflag
               update &AliasName set optFlag=RGB_Insert;
where XuHao=tmp_CheckTable.XuHao
               insert into &resultCursor(XuHao,ItemName,FieldName,Detail,Flag,ModifyFlag);
values(Reccount(resultCursor)+1, tmp_CheckTable.Term,'FD'+AllTrim(Str(tmp_CheckTable.XuHao)),'此项目已存在但数据表中不存在',0,RGB_Insert)
          CASE tmp_checktable.modifyflag =  ;
               rgb_modify
               update &AliasName set optFlag=RGB_Insert;
where XuHao=tmp_CheckTable.XuHao
               insert into &resultCursor(XuHao,ItemName,FieldName,Detail,Flag,ModifyFlag);
values(Reccount(resultCursor)+1, tmp_CheckTable.Term,'FD'+AllTrim(Str(tmp_CheckTable.XuHao)),'此项目已修改但数据表中不存在',0,RGB_Insert)
     ENDCASE
ENDSCAN
select * from tmp_Columns where xuhao;
not in (select xuhao from &AliasName);
into cursor tmp_CheckTable
SCAN
     insert into &resultCursor(XuHao,ItemName,FieldName,Detail,Flag,ModifyFlag);
values(Reccount(resultCursor)+1, tmp_CheckTable.Field_Name,Upper(tmp_CheckTable.Field_Name),'此项目不存在但数据表中已存在',1,RGB_Green)
ENDSCAN
select *,deleted() as delflag from &AliasName;
into cursor tmp_CheckTable
SELECT a.*, b.field_type,  ;
       b.field_len, b.field_dec  ;
       FROM tmp_CheckTable a,  ;
       tmp_Columns b WHERE  ;
       a.xuhao = b.xuhao INTO  ;
       CURSOR tmp_CheckTable
SCAN
     DO CASE
          CASE tmp_checktable.modifyflag =  ;
               rgb_insert
               IF (ALLTRIM(tmp_checktable.typ) ==  ;
                  ALLTRIM(tmp_checktable.field_type)  ;
                  .AND.  ;
                  tmp_checktable.kuandu =  ;
                  tmp_checktable.field_len)  ;
                  .OR.  ;
                  (ALLTRIM(tmp_checktable.typ) ==  ;
                  "N" .AND.  ;
                  tmp_checktable.xiaoshu =  ;
                  0 .AND.  ;
                  ALLTRIM(tmp_checktable.field_type) ==  ;
                  "I") .OR.  ;
                  (ALLTRIM(tmp_checktable.typ) ==  ;
                  "N" .AND.  ;
                  tmp_checktable.xiaoshu <>  ;
                  0 .AND.  ;
                  ALLTRIM(tmp_checktable.field_type) ==  ;
                  "B")
                    update &AliasName;
set optFlag=RGB_Normal where XuHao=tmp_CheckTable.XuHao
                    insert into &resultCursor(XuHao,ItemName,FieldName,Detail,Flag,ModifyFlag);
values(Reccount(resultCursor)+1, tmp_CheckTable.Term,'FD'+AllTrim(Str(tmp_CheckTable.XuHao)),'此项目新插入但数据表中已存在,且类型、宽度、小数都相同',0,RGB_Normal)
               ELSE
                    update &AliasName;
set optFlag=RGB_Modify where XuHao=tmp_CheckTable.XuHao
                    insert into &resultCursor(XuHao,ItemName,FieldName,Detail,Flag,ModifyFlag);
values(Reccount(resultCursor)+1, tmp_CheckTable.Term,'FD'+AllTrim(Str(tmp_CheckTable.XuHao)),'此项目新插入但数据表中已存在,但类型、宽度或小数不同',0,RGB_Modify)
               ENDIF
          CASE tmp_checktable.modifyflag =  ;
               rgb_normal .AND.   ;
               .NOT. delflag
               IF (ALLTRIM(tmp_checktable.typ) ==  ;
                  ALLTRIM(tmp_checktable.field_type)  ;
                  .AND.  ;
                  tmp_checktable.kuandu =  ;
                  tmp_checktable.field_len)  ;
                  .OR.  ;
                  (ALLTRIM(tmp_checktable.typ) ==  ;
                  "N" .AND.  ;
                  tmp_checktable.xiaoshu =  ;
                  0 .AND.  ;
                  ALLTRIM(tmp_checktable.field_type) ==  ;
                  "I") .OR.  ;
                  (ALLTRIM(tmp_checktable.typ) ==  ;
                  "N" .AND.  ;
                  tmp_checktable.xiaoshu <>  ;
                  0 .AND.  ;
                  ALLTRIM(tmp_checktable.field_type) ==  ;
                  "B")
                    LOOP
               ELSE
                    update &AliasName;
set optFlag=RGB_Modify where XuHao=tmp_CheckTable.XuHao
                    insert into &resultCursor(XuHao,ItemName,FieldName,Detail,Flag,ModifyFlag);
values(Reccount(resultCursor)+1, tmp_CheckTable.Term,'FD'+AllTrim(Str(tmp_CheckTable.XuHao)),'此项目已存在但与数据表中已存在的类型、宽度或小数不同',0,RGB_Modify)
               ENDIF
          CASE tmp_checktable.modifyflag =  ;
               rgb_normal .AND.  ;
               delflag
               insert into &resultCursor(XuHao,ItemName,FieldName,Detail,Flag,ModifyFlag);
values(Reccount(resultCursor)+1, tmp_CheckTable.Term,'FD'+AllTrim(Str(tmp_CheckTable.XuHao)),'此项目已删除但数据表中已存在',1,RGB_Green)
          CASE tmp_checktable.modifyflag =  ;
               rgb_modify
               IF (ALLTRIM(tmp_checktable.typ) ==  ;
                  ALLTRIM(tmp_checktable.field_type)  ;
                  .AND.  ;
                  tmp_checktable.kuandu =  ;
                  tmp_checktable.field_len)  ;
                  .OR.  ;
                  (ALLTRIM(tmp_checktable.typ) ==  ;
                  "N" .AND.  ;
                  tmp_checktable.xiaoshu =  ;
                  0 .AND.  ;
                  ALLTRIM(tmp_checktable.field_type) ==  ;
                  "I") .OR.  ;
                  (ALLTRIM(tmp_checktable.typ) ==  ;
                  "N" .AND.  ;
                  tmp_checktable.xiaoshu <>  ;
                  0 .AND.  ;
                  ALLTRIM(tmp_checktable.field_type) ==  ;
                  "B")
                    update &AliasName;
set optFlag=RGB_Normal where XuHao=tmp_CheckTable.XuHao
                    insert into &resultCursor(XuHao,ItemName,FieldName,Detail,Flag,ModifyFlag);
values(Reccount(resultCursor)+1, tmp_CheckTable.Term,'FD'+AllTrim(Str(tmp_CheckTable.XuHao)),'此项目已修改但与数据表中已存在的类型、宽度或小数都相同',0,RGB_Normal)
               ENDIF
     ENDCASE
ENDSCAN
SET DELETED ON
IF RECCOUNT(resultcursor) = 0
     RETURN 0
ELSE
     RETURN 1
ENDIF
ENDFUNC
**
***
*** checktableex.fxp
***
*
**
FUNCTION CheckTableEx
PARAMETER checkedcursor,  ;
          coldefcursor,  ;
          resultcursor
rgb_green = RGB(128, 255, 0)
SET DELETED OFF
select * from &ColDefCursor where Upper(Left(Field_name,2))=='FD';
into cursor tmp_ColumnsDef
SELECT VAL(ALLTRIM(SUBSTR(field_name,  ;
       3, LEN(field_name)))) AS  ;
       fieldnum, * FROM  ;
       tmp_ColumnsDef INTO CURSOR  ;
       tmp_Columns
select * from &CheckedCursor where FieldNum;
not in (select FieldNum from tmp_Columns);
into cursor tmp_CheckTable
SCAN
     DO CASE
          CASE tmp_checktable.modifyflag =  ;
               rgb_delete
               insert into &resultCursor(RowNum,FieldNum,FieldTitle,FieldType,FieldWidth,FieldPrec,Detail,Flag,ModifyFlag);
values(Reccount(resultCursor)+1,tmp_CheckTable.FieldNum,tmp_CheckTable.FieldTitle,tmp_CheckTable.FieldType,;
tmp_CheckTable.FieldWidth,tmp_CheckTable.FieldPrec,'此项目已删除但数据表中不存在',1,RGB_Normal)
          CASE tmp_checktable.modifyflag =  ;
               rgb_normal .AND.   ;
               .NOT.  ;
               tmp_checktable.isdeleted
               insert into &resultCursor(RowNum,FieldNum,FieldTitle,FieldType,FieldWidth,FieldPrec,Detail,Flag,ModifyFlag);
values(Reccount(resultCursor)+1,tmp_CheckTable.FieldNum,tmp_CheckTable.FieldTitle,tmp_CheckTable.FieldType,;
tmp_CheckTable.FieldWidth,tmp_CheckTable.FieldPrec,'此项目已存在但数据表中不存在',1,RGB_Insert)
          CASE tmp_checktable.modifyflag =  ;
               rgb_modify
               insert into &resultCursor(RowNum,FieldNum,FieldTitle,FieldType,FieldWidth,FieldPrec,Detail,Flag,ModifyFlag);
values(Reccount(resultCursor)+1,tmp_CheckTable.FieldNum,tmp_CheckTable.FieldTitle,tmp_CheckTable.FieldType,;
tmp_CheckTable.FieldWidth,tmp_CheckTable.FieldPrec,'此项目已修改但数据表中不存在',1,RGB_Insert)
          CASE tmp_checktable.modifyflag =  ;
               rgb_insert
               insert into &resultCursor(RowNum,FieldNum,FieldTitle,FieldType,FieldWidth,FieldPrec,Detail,Flag,ModifyFlag);
values(Reccount(resultCursor)+1,tmp_CheckTable.FieldNum,tmp_CheckTable.FieldTitle,tmp_CheckTable.FieldType,;
tmp_CheckTable.FieldWidth,tmp_CheckTable.FieldPrec,'此新建项目在数据表中不存在',1,RGB_Insert)
     ENDCASE
ENDSCAN
select * from tmp_Columns where FieldNum;
not in (select FieldNum from &CheckedCursor);
into cursor tmp_CheckTable
SCAN
     insert into &resultCursor(RowNum,FieldNum,FieldTitle,FieldType,FieldWidth,FieldPrec,Detail,Flag,ModifyFlag);
values(Reccount(resultCursor)+1,0,tmp_CheckTable.Field_name,'',0,0,'此项目不存在但数据表中已存在',-1,RGB_Green)
ENDSCAN
select a.*,b.Field_type,b.Field_len,b.Field_dec;
from &CheckedCursor a,tmp_Columns b where;
a.FieldNum=b.FieldNum into cursor tmp_CheckTable
SCAN
     DO CASE
          CASE tmp_checktable.modifyflag =  ;
               rgb_insert
               IF (ALLTRIM(tmp_checktable.fieldtype) ==  ;
                  ALLTRIM(tmp_checktable.field_type))  ;
                  .OR.  ;
                  (ALLTRIM(tmp_checktable.fieldtype) ==  ;
                  "N" .AND.  ;
                  (ALLTRIM(tmp_checktable.field_type) ==  ;
                  "B" .OR.  ;
                  ALLTRIM(tmp_checktable.field_type) ==  ;
                  "I")) .OR.  ;
                  (ALLTRIM(tmp_checktable.fieldtype) ==  ;
                  "D" .AND.  ;
                  ALLTRIM(tmp_checktable.field_type) ==  ;
                  "C")
                    insert into &resultCursor(RowNum,FieldNum,FieldTitle,FieldType,FieldWidth,FieldPrec,Detail,Flag,ModifyFlag);
values(Reccount(resultCursor)+1,tmp_CheckTable.FieldNum,tmp_CheckTable.FieldTitle,tmp_CheckTable.FieldType,;
tmp_CheckTable.FieldWidth,tmp_CheckTable.FieldPrec,'此项目新插入但数据表中已存在,且类型、宽度、小数都相同',1,RGB_Normal)
               ELSE
                    insert into &resultCursor(RowNum,FieldNum,FieldTitle,FieldType,FieldWidth,FieldPrec,Detail,Flag,ModifyFlag);
values(Reccount(resultCursor)+1,tmp_CheckTable.FieldNum,tmp_CheckTable.FieldTitle,tmp_CheckTable.FieldType,;
tmp_CheckTable.FieldWidth,tmp_CheckTable.FieldPrec,'此项目新插入但数据表中已存在,但类型、宽度或小数不同',1,RGB_Modify)
               ENDIF
          CASE tmp_checktable.modifyflag =  ;
               rgb_normal .AND.   ;
               .NOT.  ;
               tmp_checktable.isdeleted
               IF (ALLTRIM(tmp_checktable.fieldtype) ==  ;
                  ALLTRIM(tmp_checktable.field_type))  ;
                  .OR.  ;
                  (ALLTRIM(tmp_checktable.fieldtype) ==  ;
                  "N" .AND.  ;
                  (ALLTRIM(tmp_checktable.field_type) ==  ;
                  "B" .OR.  ;
                  ALLTRIM(tmp_checktable.field_type) ==  ;
                  "I")) .OR.  ;
                  (ALLTRIM(tmp_checktable.fieldtype) ==  ;
                  "D" .AND.  ;
                  ALLTRIM(tmp_checktable.field_type) ==  ;
                  "C")
                    LOOP
               ELSE
                    insert into &resultCursor(RowNum,FieldNum,FieldTitle,FieldType,FieldWidth,FieldPrec,Detail,Flag,ModifyFlag);
values(Reccount(resultCursor)+1,tmp_CheckTable.FieldNum,tmp_CheckTable.FieldTitle,tmp_CheckTable.FieldType,;
tmp_CheckTable.FieldWidth,tmp_CheckTable.FieldPrec,'此项目已存在但与数据表中已存在的类型、宽度或小数不同',1,RGB_Modify)
               ENDIF
          CASE tmp_checktable.modifyflag =  ;
               rgb_normal .AND.  ;
               tmp_checktable.isdeleted
               insert into &resultCursor(RowNum,FieldNum,FieldTitle,FieldType,FieldWidth,FieldPrec,Detail,Flag,ModifyFlag);
values(Reccount(resultCursor)+1,tmp_CheckTable.FieldNum,tmp_CheckTable.FieldTitle,tmp_CheckTable.FieldType,;
tmp_CheckTable.FieldWidth,tmp_CheckTable.FieldPrec,'此项目已删除但数据表中已存在',1,RGB_Green)
          CASE tmp_checktable.modifyflag =  ;
               rgb_modify
               insert into &resultCursor(RowNum,FieldNum,FieldTitle,FieldType,FieldWidth,FieldPrec,Detail,Flag,ModifyFlag);
values(Reccount(resultCursor)+1,tmp_CheckTable.FieldNum,tmp_CheckTable.FieldTitle,tmp_CheckTable.FieldType,;
tmp_CheckTable.FieldWidth,tmp_CheckTable.FieldPrec,'',0,RGB_Modify)
          CASE tmp_checktable.modifyflag =  ;
               rgb_delete
               insert into &resultCursor(RowNum,FieldNum,FieldTitle,FieldType,FieldWidth,FieldPrec,Detail,Flag,ModifyFlag);
values(Reccount(resultCursor)+1,tmp_CheckTable.FieldNum,tmp_CheckTable.FieldTitle,tmp_CheckTable.FieldType,;
tmp_CheckTable.FieldWidth,tmp_CheckTable.FieldPrec,'',0,RGB_Green)
     ENDCASE
ENDSCAN
SET DELETED ON
select &ResultCursor
COUNT ALL FOR flag <> 0 TO  ;
      errcount
IF errcount = 0
     RETURN 0
ELSE
     RETURN 1
ENDIF
ENDFUNC
**
***
*** showform.fxp
***
*
**
PROCEDURE ShowForm
LPARAMETERS spadname, nbarindex
sbuttonid = getbuttonid(spadname,  ;
            nbarindex)
obj_Form1.&sButtonID..Click
ENDPROC
**
FUNCTION GetButtonID
LPARAMETERS spadname, nbarindex
smodule = LOWER(LEFT(spadname,  ;
          2))
buttonid = "btn"
DO CASE
     CASE smodule == "rs"
          DO CASE
               CASE LOWER(spadname) ==  ;
                    "rsinput"
                    buttonid = buttonid +  ;
                               "1" +  ;
                               ALLTRIM(STR(nbarindex))
               CASE LOWER(spadname) ==  ;
                    "rseducation"
                    buttonid = buttonid +  ;
                               "2" +  ;
                               ALLTRIM(STR(nbarindex))
               CASE LOWER(spadname) ==  ;
                    "rsquery"
                    buttonid = buttonid +  ;
                               "3" +  ;
                               ALLTRIM(STR(nbarindex))
               CASE LOWER(spadname) ==  ;
                    "rsreport"
                    buttonid = buttonid +  ;
                               "4" +  ;
                               ALLTRIM(STR(nbarindex))
               CASE LOWER(spadname) ==  ;
                    "rscode"
                    buttonid = buttonid +  ;
                               "5" +  ;
                               ALLTRIM(STR(nbarindex))
               CASE LOWER(spadname) ==  ;
                    "rscompensation"
                    buttonid = buttonid +  ;
                               "7" +  ;
                               ALLTRIM(STR(nbarindex))
               CASE LOWER(spadname) ==  ;
                    "rssystem"
                    buttonid = buttonid +  ;
                               "6" +  ;
                               ALLTRIM(STR(nbarindex))
          ENDCASE
     CASE smodule == "kq"
          DO CASE
               CASE LOWER(spadname) ==  ;
                    "kqinput"
                    buttonid = buttonid +  ;
                               "1" +  ;
                               ALLTRIM(STR(nbarindex))
               CASE LOWER(spadname) ==  ;
                    "kqdata"
                    buttonid = buttonid +  ;
                               "2" +  ;
                               ALLTRIM(STR(nbarindex))
               CASE LOWER(spadname) ==  ;
                    "kqregister"
                    buttonid = buttonid +  ;
                               "3" +  ;
                               ALLTRIM(STR(nbarindex))
               CASE LOWER(spadname) ==  ;
                    "kqanalyze"
                    buttonid = buttonid +  ;
                               "4" +  ;
                               ALLTRIM(STR(nbarindex))
               CASE LOWER(spadname) ==  ;
                    "kqreport"
                    buttonid = buttonid +  ;
                               "5" +  ;
                               ALLTRIM(STR(nbarindex))
               CASE LOWER(spadname) ==  ;
                    "kqsystem"
                    buttonid = buttonid +  ;
                               "6" +  ;
                               ALLTRIM(STR(nbarindex))
          ENDCASE
     CASE smodule == "gz"
          DO CASE
               CASE LOWER(spadname) ==  ;
                    "gzinput"
                    buttonid = buttonid +  ;
                               "1" +  ;
                               ALLTRIM(STR(nbarindex))
               CASE LOWER(spadname) ==  ;
                    "gzprocess"
                    buttonid = buttonid +  ;
                               "2" +  ;
                               ALLTRIM(STR(nbarindex))
               CASE LOWER(spadname) ==  ;
                    "gzreport"
                    buttonid = buttonid +  ;
                               "3" +  ;
                               ALLTRIM(STR(nbarindex))
               CASE LOWER(spadname) ==  ;
                    "gzsystem"
                    buttonid = buttonid +  ;
                               "4" +  ;
                               ALLTRIM(STR(nbarindex))
          ENDCASE
     CASE smodule == "ft"
          DO CASE
               CASE LOWER(spadname) ==  ;
                    "ftinput"
                    buttonid = buttonid +  ;
                               "1" +  ;
                               ALLTRIM(STR(nbarindex))
               CASE LOWER(spadname) ==  ;
                    "ftprediction"
                    buttonid = buttonid +  ;
                               "7" +  ;
                               ALLTRIM(STR(nbarindex))
               CASE LOWER(spadname) ==  ;
                    "ftmanager"
                    buttonid = buttonid +  ;
                               "2" +  ;
                               ALLTRIM(STR(nbarindex))
               CASE LOWER(spadname) ==  ;
                    "ftreport"
                    buttonid = buttonid +  ;
                               "3" +  ;
                               ALLTRIM(STR(nbarindex))
               CASE LOWER(spadname) ==  ;
                    "ftsystem"
                    buttonid = buttonid +  ;
                               "4" +  ;
                               ALLTRIM(STR(nbarindex))
          ENDCASE
     CASE smodule == "tl"
          DO CASE
               CASE LOWER(spadname) ==  ;
                    "tlorganize"
                    buttonid = buttonid +  ;
                               "1" +  ;
                               ALLTRIM(STR(nbarindex))
               CASE LOWER(spadname) ==  ;
                    "tluser"
                    buttonid = buttonid +  ;
                               "2" +  ;
                               ALLTRIM(STR(nbarindex))
               CASE LOWER(spadname) ==  ;
                    "tllogin"
                    buttonid = buttonid +  ;
                               "3" +  ;
                               ALLTRIM(STR(nbarindex))
               CASE LOWER(spadname) ==  ;
                    "tlrelation"
                    buttonid = buttonid +  ;
                               "4" +  ;
                               ALLTRIM(STR(nbarindex))
               CASE LOWER(spadname) ==  ;
                    "tlcompress"
                    buttonid = buttonid +  ;
                               "5" +  ;
                               ALLTRIM(STR(nbarindex))
               CASE LOWER(spadname) ==  ;
                    "tlsyslog"
                    buttonid = buttonid +  ;
                               "6" +  ;
                               ALLTRIM(STR(nbarindex))
          ENDCASE
ENDCASE
RETURN buttonid
ENDFUNC
**
***
*** refreshmenu.fxp
***
*
**
PROCEDURE RefreshMenu
LPARAMETERS smodule
noldlevel = pub_level
DO CASE
     CASE smodule == "rs"
          pub_level = 1
          IF noldlevel =  ;
             pub_level
               RETURN
          ENDIF
     CASE smodule == "kq"
          pub_level = 2
          IF noldlevel =  ;
             pub_level
               RETURN
          ENDIF
     CASE smodule == "gz"
          pub_level = 3
          IF noldlevel =  ;
             pub_level
               RETURN
          ENDIF
     CASE smodule == "ft"
          pub_level = 4
          IF noldlevel =  ;
             pub_level
               RETURN
          ENDIF
     CASE smodule == "tl"
          pub_level = 5
          IF noldlevel =  ;
             pub_level
               RETURN
          ENDIF
     CASE smodule == ""
          pub_level = 0
          pub_object(1) = ""
ENDCASE
IF CNTPAD("_MSYSMENU") = 1
     DEFINE PAD cmsystem OF  ;
            _MSYSMENU PROMPT  ;
            "系统功能(\<F)" KEY  ;
            ALT+F, ""
     ON PAD cmsystem OF _MSYSMENU ACTIVATE;
POPUP pmmodule
     DEFINE POPUP pmmodule MARGIN  ;
            RELATIVE
     DEFINE BAR 1 OF pmmodule  ;
            PROMPT  ;
            "人力资源(\<M)" SKIP  ;
            FOR _SCREEN.formcount >  ;
            1 .OR.  .NOT.  ;
            isaccessto("rs")
     DEFINE BAR 2 OF pmmodule  ;
            PROMPT  ;
            "考勤分析(\<A)" SKIP  ;
            FOR _SCREEN.formcount >  ;
            1 .OR.  .NOT.  ;
            isaccessto("kq")
     DEFINE BAR 3 OF pmmodule  ;
            PROMPT  ;
            "薪资管理(\<S)" SKIP  ;
            FOR _SCREEN.formcount >  ;
            1 .OR.  .NOT.  ;
            isaccessto("gz")
     DEFINE BAR 4 OF pmmodule  ;
            PROMPT  ;
            "就餐管理(\<D)" SKIP  ;
            FOR _SCREEN.formcount >  ;
            1 .OR.  .NOT.  ;
            isaccessto("ft")
     DEFINE BAR 5 OF pmmodule  ;
            PROMPT  ;
            "系统工具(\<T)" SKIP  ;
            FOR _SCREEN.formcount >  ;
            1
     DEFINE BAR 6 OF pmmodule  ;
            PROMPT "\-"
     DEFINE BAR 7 OF pmmodule  ;
            PROMPT  ;
            "退出系统(\<E)" SKIP  ;
            FOR _SCREEN.formcount >  ;
            1
     ON SELECTION POPUP pmmodule DO MODULECHANGE;
WITH BAR()
ENDIF
FOR i = 1 TO 5
     IF pub_level = i
          SET MARK OF BAR i OF pmmodule;
TO;
.T.
     ELSE
          SET MARK OF BAR i OF pmmodule;
TO;
.F.
     ENDIF
ENDFOR
DO WHILE CNTPAD("_MSYSMENU")>2
     spadname = GETPAD("_MSYSMENU",  ;
                3)
     Release Pad &sPadName of _MSYSMENU
ENDDO
DO CASE
     CASE smodule == "rs"
          DEFINE PAD rsinput OF  ;
                 _MSYSMENU PROMPT  ;
                 "资料录入(\<I)"  ;
                 KEY ALT+I, ""
          DEFINE PAD rseducation  ;
                 OF _MSYSMENU  ;
                 PROMPT  ;
                 "教育训练(\<T)"  ;
                 KEY ALT+T, ""
          DEFINE PAD rsquery OF  ;
                 _MSYSMENU PROMPT  ;
                 "组合查询(\<Q)"  ;
                 KEY ALT+Q, ""
          DEFINE PAD rsreport OF  ;
                 _MSYSMENU PROMPT  ;
                 "报表打印(\<R)"  ;
                 KEY ALT+R, ""
          DEFINE PAD rscode OF  ;
                 _MSYSMENU PROMPT  ;
                 "编码设置(\<C)"  ;
                 KEY ALT+C, ""
          DEFINE PAD  ;
                 rscompensation  ;
                 OF _MSYSMENU  ;
                 PROMPT  ;
                 "薪资资料(\<B)"  ;
                 KEY ALT+B, ""
          DEFINE PAD rssystem OF  ;
                 _MSYSMENU PROMPT  ;
                 "系统维护(\<S)"  ;
                 KEY ALT+S, ""
          ON PAD rsinput OF _MSYSMENU;
ACTIVATE POPUP pminput
          ON PAD rseducation OF _MSYSMENU;
ACTIVATE POPUP pmeducation
          ON PAD rsquery OF _MSYSMENU;
ACTIVATE POPUP pmquery
          ON PAD rsreport OF _MSYSMENU;
ACTIVATE POPUP pmreport
          ON PAD rscode OF _MSYSMENU ACTIVATE;
POPUP pmcode
          ON PAD rscompensation OF _MSYSMENU;
ACTIVATE POPUP pmcompensation
          ON PAD rssystem OF _MSYSMENU;
ACTIVATE POPUP pmsystem
          DEFINE POPUP pminput  ;
                 MARGIN RELATIVE
          DEFINE BAR 1 OF pminput  ;
                 PROMPT  ;
                 "基本资料" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("RS",  ;
                 "3ARS11")
          DEFINE BAR 2 OF pminput  ;
                 PROMPT  ;
                 "集体登记" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("RS",  ;
                 "3ARS12")
          DEFINE BAR 3 OF pminput  ;
                 PROMPT  ;
                 "物品借领管理"  ;
                 SKIP FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("RS",  ;
                 "3ARS13")
          DEFINE BAR 4 OF pminput  ;
                 PROMPT  ;
                 "保险缴纳" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("RS",  ;
                 "3ARS14")
          DEFINE BAR 5 OF pminput  ;
                 PROMPT  ;
                 "保险比例" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("RS",  ;
                 "3ARS17")
          DEFINE BAR 6 OF pminput  ;
                 PROMPT  ;
                 "杂费台帐" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("RS",  ;
                 "3ARS16")
          ON SELECTION POPUP pminput DO;
SHOWFORM WITH PAD(), BAR()
          DEFINE POPUP  ;
                 pmeducation  ;
                 MARGIN RELATIVE
          DEFINE BAR 1 OF  ;
                 pmeducation  ;
                 PROMPT  ;
                 "计划与实施"  ;
                 SKIP FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("RS",  ;
                 "3ARS21")
          DEFINE BAR 2 OF  ;
                 pmeducation  ;
                 PROMPT  ;
                 "绩效评核" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("RS",  ;
                 "3ARS22")
          ON SELECTION POPUP pmeducation;
DO SHOWFORM WITH PAD(), BAR()
          DEFINE POPUP pmquery  ;
                 MARGIN RELATIVE
          DEFINE BAR 1 OF pmquery  ;
                 PROMPT  ;
                 "组合查询" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("RS",  ;
                 "3ARS31")
          ON SELECTION POPUP pmquery DO;
SHOWFORM WITH PAD(), BAR()
          DEFINE POPUP pmreport  ;
                 MARGIN RELATIVE
          DEFINE BAR 1 OF  ;
                 pmreport PROMPT  ;
                 "报表打印" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("RS",  ;
                 "3ARS41")
          ON SELECTION POPUP pmreport;
DO SHOWFORM WITH PAD(), BAR()
          DEFINE POPUP pmcode  ;
                 MARGIN RELATIVE
          DEFINE BAR 1 OF pmcode  ;
                 PROMPT  ;
                 "部门设置" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("RS",  ;
                 "3ARS52")
          DEFINE BAR 2 OF pmcode  ;
                 PROMPT  ;
                 "岗位设置" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("RS",  ;
                 "3ARS52")
          DEFINE BAR 3 OF pmcode  ;
                 PROMPT  ;
                 "职务设置" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("RS",  ;
                 "3ARS53")
          DEFINE BAR 4 OF pmcode  ;
                 PROMPT  ;
                 "技术职称设置"  ;
                 SKIP FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("RS",  ;
                 "3ARS54")
          DEFINE BAR 5 OF pmcode  ;
                 PROMPT  ;
                 "资料类别设置"  ;
                 SKIP FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("RS",  ;
                 "3ARS55")
          ON SELECTION POPUP pmcode DO;
SHOWFORM WITH PAD(), BAR()
          DEFINE POPUP  ;
                 pmcompensation  ;
                 MARGIN RELATIVE
          DEFINE BAR 1 OF  ;
                 pmcompensation  ;
                 PROMPT  ;
                 "底薪设定" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("RS",  ;
                 "3ARS71")
          DEFINE BAR 2 OF  ;
                 pmcompensation  ;
                 PROMPT  ;
                 "环境津贴" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("RS",  ;
                 "3ARS72")
          DEFINE BAR 3 OF  ;
                 pmcompensation  ;
                 PROMPT  ;
                 "职务津贴" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("RS",  ;
                 "3ARS73")
          DEFINE BAR 4 OF  ;
                 pmcompensation  ;
                 PROMPT "年资奖"  ;
                 SKIP FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("RS",  ;
                 "3ARS74")
          DEFINE BAR 5 OF  ;
                 pmcompensation  ;
                 PROMPT  ;
                 "生产奖金" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("RS",  ;
                 "3ARS75")
          ON SELECTION POPUP pmcompensation;
DO SHOWFORM WITH PAD(), BAR()
          DEFINE POPUP pmsystem  ;
                 MARGIN RELATIVE
          DEFINE BAR 1 OF  ;
                 pmsystem PROMPT  ;
                 "操作权限" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR. ( .NOT.  ;
                 isaccessto("RS",  ;
                 "3ARS61") .AND.  ;
                 pub_role > 0  ;
                 .AND.  .NOT.  ;
                 issubadmin("rs"))
          DEFINE BAR 2 OF  ;
                 pmsystem PROMPT  ;
                 "资料刷新" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("RS",  ;
                 "3ARS63")
          ON SELECTION POPUP pmsystem;
DO SHOWFORM WITH PAD(), BAR()
     CASE smodule == "kq"
          DEFINE PAD kqinput OF  ;
                 _MSYSMENU PROMPT  ;
                 "资料录入(\<I)"  ;
                 KEY ALT+I, ""
          DEFINE PAD kqdata OF  ;
                 _MSYSMENU PROMPT  ;
                 "刷卡数据(\<D)"  ;
                 KEY ALT+D, ""
          DEFINE PAD kqregister  ;
                 OF _MSYSMENU  ;
                 PROMPT  ;
                 "考勤登记(\<K)"  ;
                 KEY ALT+K, ""
          DEFINE PAD kqanalyze OF  ;
                 _MSYSMENU PROMPT  ;
                 "考勤分析(\<A)"  ;
                 KEY ALT+A, ""
          DEFINE PAD kqreport OF  ;
                 _MSYSMENU PROMPT  ;
                 "报表管理(\<R)"  ;
                 KEY ALT+R, ""
          DEFINE PAD kqsystem OF  ;
                 _MSYSMENU PROMPT  ;
                 "系统维护(\<S)"  ;
                 KEY ALT+S, ""
          ON PAD kqinput OF _MSYSMENU;
ACTIVATE POPUP pminput
          ON PAD kqdata OF _MSYSMENU ACTIVATE;
POPUP pmdata
          ON PAD kqregister OF _MSYSMENU;
ACTIVATE POPUP pmregister
          ON PAD kqanalyze OF _MSYSMENU;
ACTIVATE POPUP pmanalyze
          ON PAD kqreport OF _MSYSMENU;
ACTIVATE POPUP pmreport
          ON PAD kqsystem OF _MSYSMENU;
ACTIVATE POPUP pmsystem
          DEFINE POPUP pminput  ;
                 MARGIN RELATIVE
          DEFINE BAR 1 OF pminput  ;
                 PROMPT  ;
                 "部门设置" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("KQ",  ;
                 "3AKQ11")
          DEFINE BAR 2 OF pminput  ;
                 PROMPT  ;
                 "班次设定" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("KQ",  ;
                 "3AKQ12")
          DEFINE BAR 3 OF pminput  ;
                 PROMPT  ;
                 "员工资料" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("KQ",  ;
                 "3AKQ13")
          DEFINE BAR 4 OF pminput  ;
                 PROMPT  ;
                 "员工类别" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("KQ",  ;
                 "3AKQ14")
          DEFINE BAR 5 OF pminput  ;
                 PROMPT  ;
                 "考勤规定" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("KQ",  ;
                 "3AKQ15")
          DEFINE BAR 6 OF pminput  ;
                 PROMPT  ;
                 "考勤类别定义"  ;
                 SKIP FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("KQ",  ;
                 "3AKQ16")
          DEFINE BAR 7 OF pminput  ;
                 PROMPT  ;
                 "排班计划分类"  ;
                 SKIP FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("KQ",  ;
                 "3AKQ17")
          DEFINE BAR 8 OF pminput  ;
                 PROMPT  ;
                 "节假日/星期日定义"  ;
                 SKIP FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("KQ",  ;
                 "3AKQ18")
          DEFINE BAR 9 OF pminput  ;
                 PROMPT  ;
                 "员工卡登记"  ;
                 SKIP FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("KQ",  ;
                 "3AKQ19")
          ON SELECTION POPUP pminput DO;
SHOWFORM WITH PAD(), BAR()
          DEFINE POPUP pmdata  ;
                 MARGIN RELATIVE
          DEFINE BAR 1 OF pmdata  ;
                 PROMPT  ;
                 "读刷卡钟数据"  ;
                 SKIP FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("KQ",  ;
                 "3AKQ21")
          DEFINE BAR 2 OF pmdata  ;
                 PROMPT  ;
                 "刷卡记录查询"  ;
                 SKIP FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("KQ",  ;
                 "3AKQ22")
          ON SELECTION POPUP pmdata DO;
SHOWFORM WITH PAD(), BAR()
          DEFINE POPUP pmregister  ;
                 MARGIN RELATIVE
          DEFINE BAR 1 OF  ;
                 pmregister  ;
                 PROMPT  ;
                 "考勤情况登记"  ;
                 SKIP FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("KQ",  ;
                 "3AKQ31")
          DEFINE BAR 2 OF  ;
                 pmregister  ;
                 PROMPT  ;
                 "周期休日" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("KQ",  ;
                 "3AKQ32")
          DEFINE BAR 3 OF  ;
                 pmregister  ;
                 PROMPT  ;
                 "出勤单登记"  ;
                 SKIP FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("KQ",  ;
                 "3AKQ33")
          DEFINE BAR 4 OF  ;
                 pmregister  ;
                 PROMPT  ;
                 "年假管理" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("KQ",  ;
                 "3AKQ34")
          DEFINE BAR 5 OF  ;
                 pmregister  ;
                 PROMPT  ;
                 "考勤补登记"  ;
                 SKIP FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("KQ",  ;
                 "3AKQ35")
          DEFINE BAR 6 OF  ;
                 pmregister  ;
                 PROMPT  ;
                 "年假规定" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("KQ",  ;
                 "3AKQ36")
          ON SELECTION POPUP pmregister;
DO SHOWFORM WITH PAD(), BAR()
          DEFINE POPUP pmanalyze  ;
                 MARGIN RELATIVE
          DEFINE BAR 1 OF  ;
                 pmanalyze PROMPT  ;
                 "考勤自动处理"  ;
                 SKIP FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("KQ",  ;
                 "3AKQ41")
          DEFINE BAR 2 OF  ;
                 pmanalyze PROMPT  ;
                 "考勤附加处理"  ;
                 SKIP FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("KQ",  ;
                 "3AKQ42")
          DEFINE BAR 3 OF  ;
                 pmanalyze PROMPT  ;
                 "分析结果浏览"  ;
                 SKIP FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("KQ",  ;
                 "3AKQ43")
          DEFINE BAR 4 OF  ;
                 pmanalyze PROMPT  ;
                 "中途外出处理"  ;
                 SKIP FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("KQ",  ;
                 "3AKQ44")
          DEFINE BAR 5 OF  ;
                 pmanalyze PROMPT  ;
                 "缺刷卡一览表"  ;
                 SKIP FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("KQ",  ;
                 "3AKQ45")
          ON SELECTION POPUP pmanalyze;
DO SHOWFORM WITH PAD(), BAR()
          DEFINE POPUP pmreport  ;
                 MARGIN RELATIVE
          DEFINE BAR 1 OF  ;
                 pmreport PROMPT  ;
                 "数据汇总" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("KQ",  ;
                 "3AKQ51")
          DEFINE BAR 2 OF  ;
                 pmreport PROMPT  ;
                 "报表印刷" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("KQ",  ;
                 "3AKQ52")
          DEFINE BAR 3 OF  ;
                 pmreport PROMPT  ;
                 "报表定义" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("KQ",  ;
                 "3AKQ53")
          DEFINE BAR 4 OF  ;
                 pmreport PROMPT  ;
                 "Excel输出" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("KQ",  ;
                 "3AKQ54")
          ON SELECTION POPUP pmreport;
DO SHOWFORM WITH PAD(), BAR()
          DEFINE POPUP pmsystem  ;
                 MARGIN RELATIVE
          DEFINE BAR 1 OF  ;
                 pmsystem PROMPT  ;
                 "操作权限" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR. ( .NOT.  ;
                 isaccessto("KQ",  ;
                 "3AKQ61") .AND.  ;
                 pub_role > 0  ;
                 .AND.  .NOT.  ;
                 issubadmin("kq"))
          DEFINE BAR 2 OF  ;
                 pmsystem PROMPT  ;
                 "删除重复刷卡"  ;
                 SKIP FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("KQ",  ;
                 "3AKQ63")
          DEFINE BAR 3 OF  ;
                 pmsystem PROMPT  ;
                 "卡钟数据格式"  ;
                 SKIP FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("KQ",  ;
                 "3AKQ64")
          ON SELECTION POPUP pmsystem;
DO SHOWFORM WITH PAD(), BAR()
     CASE smodule == "gz"
          DEFINE PAD gzinput OF  ;
                 _MSYSMENU PROMPT  ;
                 "资料录入(\<I)"  ;
                 KEY ALT+I, ""
          DEFINE PAD gzprocess OF  ;
                 _MSYSMENU PROMPT  ;
                 "薪资处理(\<P)"  ;
                 KEY ALT+P, ""
          DEFINE PAD gzreport OF  ;
                 _MSYSMENU PROMPT  ;
                 "报表管理(\<R)"  ;
                 KEY ALT+R, ""
          DEFINE PAD gzsystem OF  ;
                 _MSYSMENU PROMPT  ;
                 "系统维护(\<S)"  ;
                 KEY ALT+S, ""
          ON PAD gzinput OF _MSYSMENU;
ACTIVATE POPUP pminput
          ON PAD gzprocess OF _MSYSMENU;
ACTIVATE POPUP pmprocess
          ON PAD gzreport OF _MSYSMENU;
ACTIVATE POPUP pmreport
          ON PAD gzsystem OF _MSYSMENU;
ACTIVATE POPUP pmsystem
          DEFINE POPUP pminput  ;
                 MARGIN RELATIVE
          DEFINE BAR 1 OF pminput  ;
                 PROMPT  ;
                 "部门设置" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("GZ",  ;
                 "3AGZ11")
          DEFINE BAR 2 OF pminput  ;
                 PROMPT  ;
                 "员工类别" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("GZ",  ;
                 "3AGZ12")
          DEFINE BAR 3 OF pminput  ;
                 PROMPT  ;
                 "薪资等级" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("GZ",  ;
                 "3AGZ13")
          DEFINE BAR 4 OF pminput  ;
                 PROMPT  ;
                 "转帐银行" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("GZ",  ;
                 "3AGZ14")
          DEFINE BAR 5 OF pminput  ;
                 PROMPT  ;
                 "所得税表" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("GZ",  ;
                 "3AGZ15")
          DEFINE BAR 6 OF pminput  ;
                 PROMPT  ;
                 "员工资料" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("GZ",  ;
                 "3AGZ16")
          DEFINE BAR 7 OF pminput  ;
                 PROMPT  ;
                 "薪资项目" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("GZ",  ;
                 "3AGZ17")
          DEFINE BAR 8 OF pminput  ;
                 PROMPT  ;
                 "汇率录入" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("GZ",  ;
                 "3AGZ18")
          ON SELECTION POPUP pminput DO;
SHOWFORM WITH PAD(), BAR()
          DEFINE POPUP pmprocess  ;
                 MARGIN RELATIVE
          DEFINE BAR 1 OF  ;
                 pmprocess PROMPT  ;
                 "薪资处理" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("GZ",  ;
                 "3AGZ2")
          ON SELECTION POPUP pmprocess;
DO SHOWFORM WITH PAD(), BAR()
          DEFINE POPUP pmreport  ;
                 MARGIN RELATIVE
          DEFINE BAR 1 OF  ;
                 pmreport PROMPT  ;
                 "数据汇总" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("GZ",  ;
                 "3AGZ31")
          DEFINE BAR 2 OF  ;
                 pmreport PROMPT  ;
                 "报表印刷" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("GZ",  ;
                 "3AGZ32")
          DEFINE BAR 3 OF  ;
                 pmreport PROMPT  ;
                 "报表定义" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("GZ",  ;
                 "3AGZ33")
          DEFINE BAR 4 OF  ;
                 pmreport PROMPT  ;
                 "Excel输出" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("GZ",  ;
                 "3AGZ34")
          ON SELECTION POPUP pmreport;
DO SHOWFORM WITH PAD(), BAR()
          DEFINE POPUP pmsystem  ;
                 MARGIN RELATIVE
          DEFINE BAR 1 OF  ;
                 pmsystem PROMPT  ;
                 "操作权限" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR. ( .NOT.  ;
                 isaccessto("GZ",  ;
                 "3AGZ41") .AND.  ;
                 pub_role > 0  ;
                 .AND.  .NOT.  ;
                 issubadmin("gz"))
          ON SELECTION POPUP pmsystem;
DO SHOWFORM WITH PAD(), BAR()
     CASE smodule == "ft"
          DEFINE PAD ftinput OF  ;
                 _MSYSMENU PROMPT  ;
                 "资料录入(\<I)"  ;
                 KEY ALT+I, ""
          DEFINE PAD ftprediction  ;
                 OF _MSYSMENU  ;
                 PROMPT  ;
                 "就餐预报(\<V)"  ;
                 KEY ALT+V, ""
          DEFINE PAD ftmanager OF  ;
                 _MSYSMENU PROMPT  ;
                 "就餐管理(\<P)"  ;
                 KEY ALT+P, ""
          DEFINE PAD ftreport OF  ;
                 _MSYSMENU PROMPT  ;
                 "报表管理(\<R)"  ;
                 KEY ALT+R, ""
          DEFINE PAD ftsystem OF  ;
                 _MSYSMENU PROMPT  ;
                 "系统维护(\<S)"  ;
                 KEY ALT+S, ""
          ON PAD ftinput OF _MSYSMENU;
ACTIVATE POPUP pminput
          ON PAD ftprediction OF _MSYSMENU;
ACTIVATE POPUP pmprediction
          ON PAD ftmanager OF _MSYSMENU;
ACTIVATE POPUP pmmanager
          ON PAD ftreport OF _MSYSMENU;
ACTIVATE POPUP pmreport
          ON PAD ftsystem OF _MSYSMENU;
ACTIVATE POPUP pmsystem
          DEFINE POPUP pminput  ;
                 MARGIN RELATIVE
          DEFINE BAR 1 OF pminput  ;
                 PROMPT  ;
                 "部门设置" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("FT",  ;
                 "3AFT11")
          DEFINE BAR 2 OF pminput  ;
                 PROMPT  ;
                 "员工资料" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("FT",  ;
                 "3AFT12")
          DEFINE BAR 3 OF pminput  ;
                 PROMPT  ;
                 "餐次价格" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("FT",  ;
                 "3AFT13")
          DEFINE BAR 4 OF pminput  ;
                 PROMPT  ;
                 "员工卡登记"  ;
                 SKIP FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("FT",  ;
                 "3AFT14")
          DEFINE BAR 5 OF pminput  ;
                 PROMPT  ;
                 "场地登记" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("FT",  ;
                 "3AFT15")
          ON SELECTION POPUP pminput DO;
SHOWFORM WITH PAD(), BAR()
          DEFINE POPUP  ;
                 pmprediction  ;
                 MARGIN RELATIVE
          DEFINE BAR 1 OF  ;
                 pmprediction  ;
                 PROMPT  ;
                 "就餐预报" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("FT",  ;
                 "3AFT71")
          ON SELECTION POPUP pmprediction;
DO SHOWFORM WITH PAD(), BAR()
          DEFINE POPUP pmmanager  ;
                 MARGIN RELATIVE
          DEFINE BAR 1 OF  ;
                 pmmanager PROMPT  ;
                 "读刷卡钟数据"  ;
                 SKIP FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("FT",  ;
                 "3AFT21")
          DEFINE BAR 2 OF  ;
                 pmmanager PROMPT  ;
                 "数据处理" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("FT",  ;
                 "3AFT22")
          DEFINE BAR 3 OF  ;
                 pmmanager PROMPT  ;
                 "刷卡记录查询"  ;
                 SKIP FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("FT",  ;
                 "3AFT23")
          DEFINE BAR 4 OF  ;
                 pmmanager PROMPT  ;
                 "未刷卡人员名单"  ;
                 SKIP FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("FT",  ;
                 "3AFT24")
          DEFINE BAR 5 OF  ;
                 pmmanager PROMPT  ;
                 "就餐综合查询"  ;
                 SKIP FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("FT",  ;
                 "3AFT25")
          DEFINE BAR 6 OF  ;
                 pmmanager PROMPT  ;
                 "就餐情况登记"  ;
                 SKIP FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("FT",  ;
                 "3AFT26")
          ON SELECTION POPUP pmmanager;
DO SHOWFORM WITH PAD(), BAR()
          DEFINE POPUP pmreport  ;
                 MARGIN RELATIVE
          DEFINE BAR 1 OF  ;
                 pmreport PROMPT  ;
                 "月统计报表"  ;
                 SKIP FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("FT",  ;
                 "3AFT31")
          DEFINE BAR 2 OF  ;
                 pmreport PROMPT  ;
                 "日统计报表"  ;
                 SKIP FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("FT",  ;
                 "3AFT32")
          DEFINE BAR 3 OF  ;
                 pmreport PROMPT  ;
                 "个人明细表"  ;
                 SKIP FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("FT",  ;
                 "3AFT33")
          DEFINE BAR 4 OF  ;
                 pmreport PROMPT  ;
                 "异常就餐汇总"  ;
                 SKIP FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("FT",  ;
                 "3AFT34")
          ON SELECTION POPUP pmreport;
DO SHOWFORM WITH PAD(), BAR()
          DEFINE POPUP pmsystem  ;
                 MARGIN RELATIVE
          DEFINE BAR 1 OF  ;
                 pmsystem PROMPT  ;
                 "操作权限" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR. ( .NOT.  ;
                 isaccessto("FT",  ;
                 "3AFT43") .AND.  ;
                 pub_role > 0  ;
                 .AND.  .NOT.  ;
                 issubadmin("ft"))
          DEFINE BAR 2 OF  ;
                 pmsystem PROMPT  ;
                 "删除重复刷卡"  ;
                 SKIP FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("FT",  ;
                 "3AFT41")
          DEFINE BAR 3 OF  ;
                 pmsystem PROMPT  ;
                 "卡钟数据格式"  ;
                 SKIP FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR.  .NOT.  ;
                 isaccessto("FT",  ;
                 "3AFT42")
          ON SELECTION POPUP pmsystem;
DO SHOWFORM WITH PAD(), BAR()
     CASE smodule == "tl"
          DEFINE PAD tlorganize  ;
                 OF _MSYSMENU  ;
                 PROMPT  ;
                 "组织结构(\<D)"  ;
                 KEY ALT+D, ""
          DEFINE PAD tluser OF  ;
                 _MSYSMENU PROMPT  ;
                 "用户管理(\<U)"  ;
                 KEY ALT+U, ""
          DEFINE PAD tllogin OF  ;
                 _MSYSMENU PROMPT  ;
                 "系统登录(\<P)"  ;
                 KEY ALT+P, ""
          DEFINE PAD tlrelation  ;
                 OF _MSYSMENU  ;
                 PROMPT  ;
                 "系统关联(\<S)"  ;
                 KEY ALT+S, ""
          DEFINE PAD tlcompress  ;
                 OF _MSYSMENU  ;
                 PROMPT  ;
                 "数据压缩(\<C)"  ;
                 KEY ALT+C, ""
          DEFINE PAD tlsyslog OF  ;
                 _MSYSMENU PROMPT  ;
                 "系统日志(\<L)"  ;
                 KEY ALT+L, ""
          ON PAD tlorganize OF _MSYSMENU;
ACTIVATE POPUP pmorganize
          ON PAD tluser OF _MSYSMENU ACTIVATE;
POPUP pmuser
          ON PAD tllogin OF _MSYSMENU;
ACTIVATE POPUP pmlogin
          ON PAD tlrelation OF _MSYSMENU;
ACTIVATE POPUP pmrelation
          ON PAD tlcompress OF _MSYSMENU;
ACTIVATE POPUP pmcompress
          ON PAD tlsyslog OF _MSYSMENU;
ACTIVATE POPUP pmsyslog
          DEFINE POPUP pmorganize  ;
                 MARGIN RELATIVE
          DEFINE BAR 1 OF  ;
                 pmorganize  ;
                 PROMPT  ;
                 "组织结构" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1
          ON SELECTION POPUP pmorganize;
DO SHOWFORM WITH PAD(), BAR()
          DEFINE POPUP pmuser  ;
                 MARGIN RELATIVE
          DEFINE BAR 1 OF pmuser  ;
                 PROMPT  ;
                 "用户管理" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR. pub_role >  ;
                 0
          DEFINE BAR 2 OF pmuser  ;
                 PROMPT  ;
                 "口令更改" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR. pub_role >  ;
                 0
          ON SELECTION POPUP pmuser DO;
SHOWFORM WITH PAD(), BAR()
          DEFINE POPUP pmlogin  ;
                 MARGIN RELATIVE
          DEFINE BAR 1 OF pmlogin  ;
                 PROMPT  ;
                 "系统登录" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1
          ON SELECTION POPUP pmlogin DO;
SHOWFORM WITH PAD(), BAR()
          DEFINE POPUP pmrelation  ;
                 MARGIN RELATIVE
          DEFINE BAR 1 OF  ;
                 pmrelation  ;
                 PROMPT  ;
                 "系统关联" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR. pub_role <>  ;
                 0
          ON SELECTION POPUP pmrelation;
DO SHOWFORM WITH PAD(), BAR()
          DEFINE POPUP pmcompress  ;
                 MARGIN RELATIVE
          DEFINE BAR 1 OF  ;
                 pmcompress  ;
                 PROMPT  ;
                 "数据压缩" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR. pub_role >  ;
                 1
          DEFINE BAR 2 OF  ;
                 pmcompress  ;
                 PROMPT  ;
                 "工号变更" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR. pub_role >  ;
                 1
          DEFINE BAR 3 OF  ;
                 pmcompress  ;
                 PROMPT  ;
                 "清除历史数据"  ;
                 SKIP FOR  ;
                 _SCREEN.formcount >  ;
                 1 .OR. pub_role >  ;
                 1
          ON SELECTION POPUP pmcompress;
DO SHOWFORM WITH PAD(), BAR()
          DEFINE POPUP pmsyslog  ;
                 MARGIN RELATIVE
          DEFINE BAR 1 OF  ;
                 pmsyslog PROMPT  ;
                 "系统日志" SKIP  ;
                 FOR  ;
                 _SCREEN.formcount >  ;
                 1
          ON SELECTION POPUP pmsyslog;
DO SHOWFORM WITH PAD(), BAR()
ENDCASE
ENDPROC
**
***
*** modulechange.fxp
***
*
**
PROCEDURE ModuleChange
LPARAMETERS nmoduleindex
DO CASE
     CASE nmoduleindex = 1
          sselect = "rs"
     CASE nmoduleindex = 2
          sselect = "kq"
     CASE nmoduleindex = 3
          sselect = "gz"
     CASE nmoduleindex = 4
          sselect = "ft"
     CASE nmoduleindex = 5
          sselect = "tl"
     CASE nmoduleindex = 7
          DO sysexit
     CASE nmoduleindex = 8
          sselect = "mj"
          RETURN
ENDCASE
IF LOWER(RIGHT(pub_object(1), 2)) ==  ;
   sselect
     RETURN
ENDIF
IF LOWER(STUFF(pub_object(1), 1,  ;
   4, "")) == "tools" .AND.  ;
   sselect == "tl"
     RETURN
ENDIF
IF  .NOT. EMPTY(pub_object(1))
     obj_form1.cmd_exit.click
ENDIF
refreshmenu(sselect)
IF nmoduleindex = 5
     pub_object(1) = "OBJ_TOOLS"
     sformid = "tools"
ELSE
     pub_object(1) = "OBJ_3A" +  ;
               UPPER(sselect)
     sformid = "3a" + sselect
ENDIF
do form &sFormID NAME obj_form1 LINKED;

ENDPROC
**
***
*** isinteger.fxp
***
*
**
FUNCTION IsInteger
LPARAMETERS v
LOCAL i
DO CASE
     CASE TYPE("v") = "N"
          IF CEILING(v) = v
               RETURN .T.
          ELSE
               RETURN .F.
          ENDIF
     CASE TYPE("v") = "C"
          FOR i = 1 TO LEN(v)
               IF  .NOT.  ;
                   ISDIGIT(SUBSTR(v,  ;
                   i, 1))
                    RETURN .F.
               ENDIF
          ENDFOR
          RETURN .T.
     OTHERWISE
          RETURN .F.
ENDCASE
ENDFUNC
**
***
*** istime.fxp
***
*
**
FUNCTION IsTime
LPARAMETERS s
LOCAL npos
npos = AT(":", s)
IF npos = 0
     RETURN .F.
ENDIF
shour = LEFT(s, npos - 1)
IF  .NOT. isinteger(shour)
     RETURN .F.
ENDIF
sminute = SUBSTR(s, npos + 1)
IF  .NOT. isinteger(sminute)
     RETURN .F.
ENDIF
IF VAL(sminute) >= 60
     RETURN .F.
ENDIF
RETURN .T.
ENDFUNC
**
***
*** getminutes.fxp
***
*
**
FUNCTION GetMinutes
LPARAMETERS s
LOCAL npos
npos = AT(":", s)
IF npos = 0
     RETURN -1
ENDIF
shour = LEFT(s, npos - 1)
IF  .NOT. isinteger(shour)
     RETURN -1
ENDIF
IF VAL(shour) >= 48
     RETURN -1
ENDIF
sminute = SUBSTR(s, npos + 1)
IF  .NOT. isinteger(sminute)
     RETURN -1
ENDIF
IF VAL(sminute) >= 60
     RETURN -1
ENDIF
nresult = VAL(shour) * 60 +  ;
          VAL(sminute)
IF nresult = 0
     nresult = 1
ENDIF
RETURN nresult
ENDFUNC
**
***
*** isfloat.fxp
***
*
**
FUNCTION IsFloat
LPARAMETERS s
LOCAL noccurs, npos, stmp
noccurs = OCCURS(".", s)
IF noccurs > 1
     RETURN .F.
ENDIF
IF noccurs = 0
     IF  .NOT. isinteger(s)
          RETURN .F.
     ELSE
          RETURN .T.
     ENDIF
ELSE
     npos = AT(".", s)
     stmp = LEFT(s, npos - 1)
     IF  .NOT. EMPTY(stmp)
          IF  .NOT.  ;
              isinteger(stmp)
               RETURN .F.
          ENDIF
     ENDIF
     stmp = SUBSTR(s, npos + 1)
     IF  .NOT. EMPTY(stmp)
          IF  .NOT.  ;
              isinteger(stmp)
               RETURN .F.
          ENDIF
     ENDIF
     RETURN .T.
ENDIF
ENDFUNC
**
***
*** minutestotime.fxp
***
*
**
FUNCTION MinutesToTime
LPARAMETERS nminutes, blocal
nhour = INT(nminutes / 60)
nminute = MOD(nminutes, 60)
IF blocal
     cresult = ALLTRIM(STR(nhour)) +  ;
               "小时" +  ;
               IIF(EMPTY(nminute),  ;
               "",  ;
               ALLTRIM(STR(nminute)) +  ;
               "分")
ELSE
     cresult = ALLTRIM(STR(nhour)) +  ;
               ":" +  ;
               PADL(ALLTRIM(STR(nminute)),  ;
               2, "0")
ENDIF
RETURN cresult
ENDFUNC
**
***
*** getbcfromshift.fxp
***
*
**
FUNCTION GetBcFromShift
LPARAMETERS zg_alias
SELECT shifttype
set filter to (','+Trim(code)+',')$(','+Trim(&zg_Alias..KSBC)+',')
gbfs_ksbc = ""
SCAN
     gbfs_ksbc = gbfs_ksbc + "," +  ;
                 ALLTRIM(bcs)
ENDSCAN
IF EMPTY(gbfs_ksbc)
     gbfs_KSBC = Trim(&zg_Alias..KSBC)
ELSE
     gbfs_ksbc = STUFF(gbfs_ksbc,  ;
                 1, 1, "")
ENDIF
RETURN gbfs_ksbc
ENDFUNC
**
***
*** isaccessto.fxp
***
*
**
FUNCTION IsAccessTo
LPARAMETERS smodule, sformid
IF PARAMETERS() = 1
     IF TYPE("pub_qx_module") =  ;
        "L"
          RETURN .F.
     ENDIF
     ACOPY(pub_qx_module,  ;
          array_qx)
     LOCAL i
     FOR i = 1 TO ALEN(array_qx,  ;
         1)
          IF TRIM(array_qx(i, 1)) ==  ;
             UPPER(TRIM(smodule))
               IF array_qx(i, 2) >  ;
                  0 .AND.  ;
                  SUBSTR(pub_ver,  ;
                  i, 1) == "1"
                    RETURN .T.
               ENDIF
          ENDIF
     ENDFOR
     RETURN .F.
ELSE
     DO CASE
          CASE UPPER(smodule) =  ;
               "KQ"
               IF TYPE("pub_qx_kq") =  ;
                  "L"
                    RETURN .F.
               ENDIF
               ACOPY(pub_qx_kq,  ;
                    array_qx)
          CASE UPPER(smodule) =  ;
               "RS"
               IF TYPE("pub_qx_rs") =  ;
                  "L"
                    RETURN .F.
               ENDIF
               ACOPY(pub_qx_rs,  ;
                    array_qx)
          CASE UPPER(smodule) =  ;
               "GZ"
               IF TYPE("pub_qx_gz") =  ;
                  "L"
                    RETURN .F.
               ENDIF
               ACOPY(pub_qx_gz,  ;
                    array_qx)
          CASE UPPER(smodule) =  ;
               "FT"
               IF TYPE("pub_qx_ft") =  ;
                  "L"
                    RETURN .F.
               ENDIF
               ACOPY(pub_qx_ft,  ;
                    array_qx)
     ENDCASE
     LOCAL i
     FOR i = 1 TO ALEN(array_qx,  ;
         1)
          IF TRIM(array_qx(i, 1)) ==  ;
             sformid
               IF array_qx(i, 2) >  ;
                  0
                    RETURN .T.
               ENDIF
          ENDIF
     ENDFOR
     RETURN .F.
ENDIF
ENDFUNC
**
***
*** getaccess.fxp
***
*
**
PROCEDURE GetAccess
LPARAMETERS smodule
LOCAL isall
IF TYPE("sModule") = "L"
     isall = .T.
ELSE
     IF UPPER(smodule) = "ALL"  ;
        .OR. EMPTY(smodule)
          isall = .T.
     ENDIF
ENDIF
IF isall .OR. UPPER(smodule) ==  ;
   "SYS"
     strsql = "Select * From sys_user where name=?pub_user"
     sqlexe_run(00000000012,  ;
               SYS(16), strsql,  ;
               "qx")
     pub_qx_module = .F.
     IF RECCOUNT("qx") > 0
          DIMENSION pub_qx_module(4,  ;
                    2)
          pub_qx_module(1, 1) =  ;
                       "KQ"
          pub_qx_module(1, 2) =  ;
                       qx.kq
          pub_qx_module(2, 1) =  ;
                       "RS"
          pub_qx_module(2, 2) =  ;
                       qx.rs
          pub_qx_module(3, 1) =  ;
                       "GZ"
          pub_qx_module(3, 2) =  ;
                       qx.gz
          pub_qx_module(4, 1) =  ;
                       "FT"
          pub_qx_module(4, 2) =  ;
                       qx.ft
     ENDIF
     SELECT qx
     USE
ENDIF
IF isall .OR. UPPER(smodule) ==  ;
   "KQ"
     strsql = "Select Hmbh,qx from kq_qx_hm where name=?pub_User"
     sqlexe_run(00000000031,  ;
               SYS(16), strsql,  ;
               "qx")
     pub_qx_kq = .F.
     IF RECCOUNT("qx") > 0
          DIMENSION pub_qx_kq(1)
          SELECT * FROM qx INTO  ;
                   ARRAY  ;
                   pub_qx_kq
     ENDIF
     SELECT qx
     USE
ENDIF
IF isall .OR. UPPER(smodule) ==  ;
   "RS"
     strsql = "Select Hmbh,qx from rs_qx_hm where name=?pub_User"
     sqlexe_run(00000000043,  ;
               SYS(16), strsql,  ;
               "qx")
     pub_qx_rs = .F.
     IF RECCOUNT("qx") > 0
          DIMENSION pub_qx_rs(1)
          SELECT * FROM qx INTO  ;
                   ARRAY  ;
                   pub_qx_rs
     ENDIF
     SELECT qx
     USE
ENDIF
IF isall .OR. UPPER(smodule) ==  ;
   "GZ"
     strsql = "Select Hmbh,qx from gz_qx_hm where name=?pub_User"
     sqlexe_run(00000000055,  ;
               SYS(16), strsql,  ;
               "qx")
     pub_qx_gz = .F.
     IF RECCOUNT("qx") > 0
          DIMENSION pub_qx_gz(1)
          SELECT * FROM qx INTO  ;
                   ARRAY  ;
                   pub_qx_gz
     ENDIF
     SELECT qx
     USE
ENDIF
IF isall .OR. UPPER(smodule) ==  ;
   "FT"
     strsql = "Select Hmbh,qx from ft_qx_hm where name=?pub_User"
     sqlexe_run(00000000067,  ;
               SYS(16), strsql,  ;
               "qx")
     pub_qx_ft = .F.
     IF RECCOUNT("qx") > 0
          DIMENSION pub_qx_ft(1)
          SELECT * FROM qx INTO  ;
                   ARRAY  ;
                   pub_qx_ft
     ENDIF
     SELECT qx
     USE
ENDIF
pub_qx_mj = .F.
DIMENSION pub_qx_mj(1)
ENDPROC
**
***
*** getfieldname.fxp
***
*
**
FUNCTION GetFieldName
LPARAMETERS fieldtitle
f = ALLTRIM(fieldtitle)
invalidchar = "~`!@#$%^&*()-=+\|{}[]:;',.<>/? "
invalidchar = invalidchar + '"'
FOR i = 1 TO LEN(invalidchar)
     f = STRTRAN(f,  ;
         SUBSTR(invalidchar, i,  ;
         1), '')
ENDFOR
widedigitchar = "０１２３４５６７８９"
IF ISDIGIT(f)
     f = STRTRAN(f, LEFT(f, 1),  ;
         SUBSTR(widedigitchar,  ;
         VAL(LEFT(f, 1)) * 2 + 1,  ;
         2), 1, 1)
ENDIF
IF LEN(f) > 10
     i = 0
     DO WHILE i<10
          IF ISLEADBYTE(SUBSTR(f,  ;
             i + 1, 1))
               IF i + 2 < 10
                    i = i + 2
               ELSE
                    EXIT
               ENDIF
          ELSE
               i = i + 1
          ENDIF
     ENDDO
     f = LEFT(f, i)
ENDIF
RETURN f
ENDFUNC
**
***
*** rand100.fxp
***
*
**
FUNCTION rand100
PARAMETER k1, k2
nreturn = -1
IF k1 = k2
     nreturn = k1
ELSE
     DO WHILE  .NOT. (nreturn>=k1  ;
        .AND. nreturn<=k2)
          nreturn = INT(RAND() *  ;
                    100)
     ENDDO
ENDIF
RETURN nreturn
ENDFUNC
**
***
*** sqlexe_run2.fxp
***
*
PARAMETER runsql_line, runsql_cxm,  ;
          runsql_str, runsql_tbl
IF  .NOT. EMPTY(runsql_str)
     DO WHILE  ;
        SQLEXEC(odbc_ant2kxp,  ;
        runsql_str, runsql_tbl)=- ;
        1
          runsql_ret = handle_sql(runsql_line,  ;
                       runsql_cxm)
          DO CASE
               CASE runsql_ret = - ;
                    99
                    IF pub_ifrel =  ;
                       1
                         &PUB_OBJECT(PUB_LEVEL)..RELEASE
                    ELSE
                         IF pub_ifrel = - ;
                            1
                              pub_ifformerr =  ;
                               1
                         ENDIF
                    ENDIF
                    IF pub_ifbackup =  ;
                       1
                         DO relebkup
                    ENDIF
                    DO sysexit
               CASE runsql_ret = - ;
                    98
                    IF pub_ifrel =  ;
                       0
                         IF pub_ifmove =  ;
                            0
                              RETURN  ;
                               TO  ;
                               MASTER 
                         ELSE
                              IF pub_level =  ;
                                 4
                                   &PUB_OBJECT(3)..ENABLED=.T.
                                   &PUB_OBJECT(3)..LEFT=PUB_LEFT2
                                   &PUB_OBJECT(3)..TOP=PUB_TOP2
                                   &PUB_OBJECT(2)..SHOW
                                   &PUB_OBJECT(3)..SHOW
                              ELSE
                                   IF pub_level = 3
                                        &PUB_OBJECT(2)..ENABLED=.T.
                                        &PUB_OBJECT(2)..LEFT=PUB_LEFT1
                                        &PUB_OBJECT(2)..TOP=PUB_TOP1
                                   ENDIF
                              ENDIF
                              RETURN  ;
                               TO  ;
                               MASTER 
                         ENDIF
                    ELSE
                         IF pub_ifrel =  ;
                            1
                              IF pub_level <  ;
                                 3
                                   &PUB_OBJECT(PUB_LEVEL)..ENABLED=.T.
                                   &PUB_OBJECT(PUB_LEVEL)..RELEASE
                                   DO sysexit
                              ELSE
                                   IF pub_ifbackup = 1
                                        pub_ifbackup = 0
                                        DO relebkup
                                   ENDIF
                                   &PUB_OBJECT(PUB_LEVEL)..RELEASE
                                   RETURN TO MASTER 
                              ENDIF
                         ELSE
                              pub_ifformerr =  ;
                               1
                              RETURN  ;
                               TO  ;
                               MASTER 
                         ENDIF
                    ENDIF
               CASE runsql_ret =  ;
                    0
                    LOOP
               CASE runsql_ret = - ;
                    1
                    RETURN -1
               CASE runsql_ret = - ;
                    2
                    RETURN -2
          ENDCASE
          EXIT
     ENDDO
     RETURN 1
ENDIF
ENDFUNC
**
FUNCTION Handle_sql
PARAMETER errline, programname
DIMENSION aerrorarray(7)
cntrol = AERROR(aerrorarray)
IF cntrol <= 0
     RETURN 1
ENDIF
errno = aerrorarray(1)
errtext = aerrorarray(2)
errtext = errtext + CHR(13) +  ;
          CHR(13) + "程序名:  " +  ;
          programname + CHR(13) +  ;
          "错误行:  " +  ;
          ALLTRIM(STR(errline))
IF errno = 1526
     errno = aerrorarray(5)
     errtext = aerrorarray(3)
     errtext = errtext + CHR(13) +  ;
               CHR(13) +  ;
               "程序名:  " +  ;
               programname +  ;
               CHR(13) +  ;
               "错误行:  " +  ;
               ALLTRIM(STR(errline))
     DO CASE
          CASE pub_database =  ;
               "ACCESS"
               DO CASE
                    CASE errno = - ;
                         1053
                         = MESSAGEBOX(errtext,  ;
                           048,  ;
                           "警告")
                         RETURN -1
                    CASE errno = - ;
                         1302
                         errtext =  ;
                          errtext +  ;
                          CHR(13) +  ;
                          CHR(13) +  ;
                          "是否重试?"
                         result =  ;
                          MESSAGEBOX(errtext,  ;
                          053,  ;
                          "警告")
                         IF result =  ;
                            4
                              RETURN  ;
                               0
                         ELSE
                              RETURN - ;
                               98
                         ENDIF
                    CASE errno = - ;
                         1303
                         = MESSAGEBOX(errtext,  ;
                           048,  ;
                           "警告")
                         RETURN -1
                    CASE errno = - ;
                         1605
                         RETURN -1
                    OTHERWISE
                         errtext =  ;
                          STR(errno) +  ;
                          CHR(13) +  ;
                          errtext
                         MESSAGEBOX(errtext,  ;
                          048,  ;
                          "系统错误")
                         RETURN -99
               ENDCASE
          CASE pub_database =  ;
               "SQL SERVER"
               DO CASE
                    CASE errno =  ;
                         515
                         = MESSAGEBOX(errtext,  ;
                           048,  ;
                           "警告")
                         RETURN -1
                    CASE errno =  ;
                         2714
                         = MESSAGEBOX(errtext,  ;
                           048,  ;
                           "警告")
                         RETURN -1
                    CASE errno =  ;
                         2627
                         RETURN -1
                    OTHERWISE
                         errtext =  ;
                          STR(errno) +  ;
                          CHR(13) +  ;
                          errtext
                         MESSAGEBOX(errtext,  ;
                          048,  ;
                          "系统错误")
                         RETURN -99
               ENDCASE
          CASE pub_database =  ;
               "INTERBASE"
               DO CASE
                    CASE errno = - ;
                         206
                         IF TYPE('pub_ErrorFlag') =  ;
                            'U'
                              PUBLIC  ;
                               pub_errorflag
                         ENDIF
                         IF  .NOT.  ;
                             pub_errorflag
                              IF 6 <>  ;
                                 MESSAGEBOX("数据表字段名错误，忽略吗？" +  ;
                                 CHR(13) +  ;
                                 runsql_str,  ;
                                 036,  ;
                                 "警告")
                                   RETURN -1
                              ELSE
                                   pub_errorflag = .T.
                              ENDIF
                         ENDIF
                    CASE errno = - ;
                         625
                         = MESSAGEBOX(errtext,  ;
                           048,  ;
                           "警告")
                         RETURN -1
                    CASE errno = - ;
                         607
                         IF AT( ;
                            "too many versions",  ;
                            errtext) >  ;
                            0
                              = MESSAGEBOX("数据表结构修改次数过多，请与软件供应商联系！",  ;
                                048,  ;
                                "警告")
                              RETURN - ;
                               2
                         ELSE
                              = MESSAGEBOX(STR(errno) +  ;
                                CHR(13) +  ;
                                errtext,  ;
                                048,  ;
                                "警告")
                              RETURN - ;
                               1
                         ENDIF
                    CASE errno = - ;
                         803
                         RETURN -1
                    OTHERWISE
                         errtext =  ;
                          STR(errno) +  ;
                          CHR(13) +  ;
                          errtext
                         MESSAGEBOX(errtext,  ;
                          048,  ;
                          "系统错误")
                         RETURN -99
               ENDCASE
          OTHERWISE
               errtext = STR(errno) +  ;
                         CHR(13) +  ;
                         errtext
               = MESSAGEBOX(errtext,  ;
                 048,  ;
                 "系统错误")
               RETURN -99
     ENDCASE
ELSE
     errtext = STR(errno) +  ;
               CHR(13) + errtext
     = MESSAGEBOX(errtext, 048,  ;
       "系统错误")
     RETURN -99
ENDIF
RETURN 1
ENDFUNC
**
***
*** strdecrypt2.fxp
***
*
**
FUNCTION strDecrypt2
PARAMETER encryptionstring
decrypt = ""
= RAND(100001)
n = 0
DO WHILE n<8
     x = hexval(encryptionstring,  ;
         2 * n + 1)
     = RAND(INT(RAND() * x) + 1)
     n = n + 1
ENDDO
l = LEN(RTRIM(encryptionstring))
DO WHILE n<l/2
     x = hexval(encryptionstring,  ;
         2 * n + 1)
     x = BITXOR(INT(RAND() * 255),  ;
         x)
     decrypt = decrypt + CHR(x)
     n = n + 1
ENDDO
RETURN decrypt
ENDFUNC
**
FUNCTION HexVal
PARAMETER x, n
x1 = SUBSTR(x, n, 1)
x2 = SUBSTR(x, n + 1, 1)
DO CASE
     CASE BETWEEN(x1, '0', '9')
          x1val = ASC(x1) - 48
     CASE BETWEEN(x1, 'A', 'F')
          x1val = ASC(x1) - 65 +  ;
                  10
     OTHERWISE
          x1val = 0
ENDCASE
DO CASE
     CASE BETWEEN(x2, '0', '9')
          x2val = ASC(x2) - 48
     CASE BETWEEN(x2, 'A', 'F')
          x2val = ASC(x2) - 65 +  ;
                  10
     OTHERWISE
          x2val = 0
ENDCASE
hexval = x1val * 16 + x2val
RETURN hexval
ENDFUNC
**
***
*** dec2hex.fxp
***
*
**
FUNCTION dec2hex
PARAMETER dec_str
hex_str = ''
dec_tmp = 0
dec_str = ALLTRIM(dec_str)
DO WHILE LEFT(dec_str, 1)=='0'
     dec_str = SUBSTR(dec_str, 2)
ENDDO
IF LEN(dec_str) > 15
     RETURN .NULL.
ENDIF
IF  .NOT. ISDIGIT(dec_str)
     RETURN .NULL.
ENDIF
dec_int = VAL(dec_str)
DO WHILE dec_int>15
     dec_tmp = MOD(dec_int, 16)
     dec_int = INT(dec_int / 16)
     IF dec_tmp >= 10
          hex_str = CHR(dec_tmp +  ;
                    55) +  ;
                    hex_str
     ELSE
          hex_str = ALLTRIM(STR(dec_tmp)) +  ;
                    hex_str
     ENDIF
ENDDO
IF dec_int >= 10
     hex_str = CHR(dec_int + 55) +  ;
               hex_str
ELSE
     hex_str = ALLTRIM(STR(dec_int)) +  ;
               hex_str
ENDIF
RETURN hex_str
ENDFUNC
**
***
*** hex2dec.fxp
***
*
**
FUNCTION hex2dec
PARAMETER hex_str
dec_int = 0
dec_tmp = 0
dec_str = ''
hex_str = ALLTRIM(hex_str)
DO WHILE LEFT(hex_str, 1)=='0'
     hex_str = SUBSTR(hex_str, 2)
ENDDO
IF LEN(hex_str) > 13
     RETURN .NULL.
ENDIF
FOR i = LEN(hex_str) TO 1 STEP -1
     str_tmp = SUBSTR(hex_str,  ;
               LEN(hex_str) - i +  ;
               1, 1)
     DO CASE
          CASE str_tmp $  ;
               'ABCDEFabcdef'
               dec_tmp = ASC(UPPER(str_tmp)) -  ;
                         55
          CASE str_tmp $  ;
               '0123456789'
               dec_tmp = VAL(str_tmp)
          OTHERWISE
               RETURN .NULL.
     ENDCASE
     dec_int = dec_int + dec_tmp *  ;
               (16 ^ (i - 1))
ENDFOR
dec_str = ALLTRIM(STR(dec_int,  ;
          16))
RETURN dec_str
ENDFUNC
**
***
*** banzustrfmt0.fxp
***
*
**
FUNCTION BanZuStrFmt0
LPARAMETERS sin
sreturn = ""
IF LEN(sin) > 0
     ls1 = sin
     DO WHILE RIGHT(ls1, 1)="0"
          ls1 = LEFT(ls1,  ;
                LEN(ls1) - 1)
     ENDDO
     IF RIGHT(ls1, 1) = "."
          ls1 = LEFT(ls1,  ;
                LEN(ls1) - 1)
          sreturn = ls1
     ELSE
          sreturn = ls1
     ENDIF
     RETURN sreturn
ENDIF
RETURN sreturn
ENDFUNC
**
***
*** banzustrchk.fxp
***
*
**
FUNCTION BanZuStrChk
LPARAMETERS sbzin
nreturn = 0
sbzin = ALLTRIM(sbzin)
IF LEN(ALLTRIM(sbzin)) <= 1
     = MESSAGEBOX("长度不够！",  ;
       16, "班组计算")
     nreturn = -1
     RETURN nreturn
ENDIF
lsleft1 = UPPER(LEFT(sbzin, 1))
lsremainstr = sbzin
IF lsleft1 $  ;
   "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
     nreturn = 1
     RETURN nreturn
ELSE
     = MESSAGEBOX("非字母开头！",  ;
       16, "班组计算")
     nreturn = -2
     RETURN nreturn
ENDIF
RETURN nreturn
ENDFUNC
**
***
*** banzustrcpu.fxp
***
*
**
FUNCTION BanZuStrCpu
LPARAMETERS sbzin1, sbzin2
sreturn = ""
IF banzustrchk(sbzin1) <> 1
     RETURN ""
ENDIF
IF banzustrchk(sbzin2) <> 1
     RETURN ""
ENDIF
sbzin1 = ALLTRIM(sbzin1)
sbzin2 = ALLTRIM(sbzin2)
DIMENSION narrbz(26)
FOR n = 1 TO 26
     narrbz(n) = 0
ENDFOR
lsremainstr = sbzin1
DO WHILE LEN(lsremainstr)>0
     lsvn = UPPER(LEFT(lsremainstr,  ;
            1))
     lsremainstr = RIGHT(lsremainstr,  ;
                   LEN(lsremainstr) -  ;
                   1)
     FOR i = 1 TO  ;
         LEN(lsremainstr)
          IF UPPER(SUBSTR(lsremainstr,  ;
             i, 1)) $  ;
             "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
               lsval = LEFT(lsremainstr,  ;
                       i - 1)
               lsremainstr = RIGHT(lsremainstr,  ;
                             LEN(lsremainstr) -  ;
                             i +  ;
                             1)
               narrbz(ASC(lsvn) -  ;
                     65 + 1) =  ;
                     narrbz(ASC(lsvn) -  ;
                     65 + 1) +  ;
                     VAL(lsval)
               EXIT
          ELSE
               IF i >=  ;
                  LEN(lsremainstr)
                    narrbz(ASC(lsvn) -  ;
                          65 + 1) =  ;
                          narrbz(ASC(lsvn) -  ;
                          65 + 1) +  ;
                          VAL(lsremainstr)
                    lsremainstr =  ;
                     ""
                    EXIT
               ENDIF
          ENDIF
     ENDFOR
ENDDO
lsremainstr = sbzin2
DO WHILE LEN(lsremainstr)>0
     lsvn = UPPER(LEFT(lsremainstr,  ;
            1))
     lsremainstr = RIGHT(lsremainstr,  ;
                   LEN(lsremainstr) -  ;
                   1)
     FOR i = 1 TO  ;
         LEN(lsremainstr)
          IF UPPER(SUBSTR(lsremainstr,  ;
             i, 1)) $  ;
             "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
               lsval = LEFT(lsremainstr,  ;
                       i - 1)
               lsremainstr = RIGHT(lsremainstr,  ;
                             LEN(lsremainstr) -  ;
                             i +  ;
                             1)
               narrbz(ASC(lsvn) -  ;
                     65 + 1) =  ;
                     narrbz(ASC(lsvn) -  ;
                     65 + 1) +  ;
                     VAL(lsval)
               EXIT
          ELSE
               IF i >=  ;
                  LEN(lsremainstr)
                    narrbz(ASC(lsvn) -  ;
                          65 + 1) =  ;
                          narrbz(ASC(lsvn) -  ;
                          65 + 1) +  ;
                          VAL(lsremainstr)
                    lsremainstr =  ;
                     ""
                    EXIT
               ENDIF
          ENDIF
     ENDFOR
ENDDO
lsmsg = ""
lsret = ""
FOR n = 1 TO 26
     IF narrbz(n) > 0
          lsret = lsret + CHR(65 +  ;
                  n - 1) +  ;
                  banzustrfmt0(ALLTRIM(STR(narrbz(n),  ;
                  12, 4)))
     ENDIF
ENDFOR
sreturn = lsret
RETURN sreturn
ENDFUNC
**
